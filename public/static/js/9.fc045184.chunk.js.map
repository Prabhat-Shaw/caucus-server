{"version":3,"sources":["component/InputOutputFile/InputOutputFile.tsx","component/TextChat/ChatMessage-styles.ts","component/TextChat/ChatMessage.jsx","component/TextChat/index.tsx","component/VoiceChat/VoiceChat.tsx","component/Editor/MonacoAdapter.js","component/Editor/MonacoEditor.tsx","component/QuestionsPane/SettingsPage.tsx","component/QuestionsPane/ProblemList/Autocomplete.tsx","component/QuestionsPane/ProblemList/ListPagination.tsx","component/QuestionsPane/ProblemList/ProblemList.tsx","component/QuestionsPane/ProblemPage.tsx","component/QuestionsPane/Tabs.tsx","pages/Room/Room.tsx","component/QuestionsPane/ProblemList/ProblemList.module.css","component/InputOutputFile/InputOutputFile.module.css","pages/Room/Room.module.css","component/QuestionsPane/ProblemPage.module.css"],"names":["CssTextField","withStyles","root","padding","height","width","outline","color","borderBottomColor","borderColor","TextField","InputOutputFile","TextAreaRef","rows","MonacoEditorRef","id","useParams","useState","value","setValue","loading","setLoading","inputText","setInputText","output","memory","cpuTime","outputData","setOutputData","language","useContext","SettingContext","enqueueSnackbar","useSnackbar","useEffect","socket","on","inputData","outputResponse","variant","submitProblem","a","axios","method","url","SERVER_URL","data","script","current","getValue","stdin","responseType","response","emit","roomID","RenderTextArea","index","className","styles","loader","type","style","minHeight","ref","Paper","toolbar","Tabs","onChange","event","indicatorColor","textColor","centered","Tab","label","Box","Button","endIcon","onClick","size","inputTextFn","target","multiline","palette","spacing","radius","rightBgColor","primary","main","avatar","leftRow","textAlign","rightRow","msg","borderRadius","marginBottom","display","wordBreak","fontFamily","fontSize","left","borderTopRightRadius","borderBottomRightRadius","backgroundColor","right","borderTopLeftRadius","borderBottomLeftRadius","common","white","leftFirst","leftLast","rightFirst","rightLast","ChatMsg","name","props","classes","messages","side","GridContainerProps","GridItemProps","AvatarProps","getTypographyProps","Grid","container","justify","item","Avatar","src","cx","xs","map","i","TypographyProps","Typography","align","length","defaultProps","useStyles","makeStyles","createStyles","paddding","formStyle","background","boxSizing","backdropFilter","inputStyle","flexGrow","margin","border","formButton","ChatApp","userInfo","socketID","chatBoxRef","useRef","message","setMessage","body","setBody","receivedMessages","newMessage","scrollIntoView","flexDirection","fontWeight","element","image_link","onSubmit","e","preventDefault","messageObject","autoComplete","placeholder","LightTooltip","theme","tooltip","boxShadow","shadows","Tooltip","RenderIcons","user","TransitionComponent","Zoom","title","placement","alt","Icons","params","partnerUser","MonacoConvergenceAdapter","monacoEditor","realtimeString","this","_monacoEditor","_model","_colorAssigner","ColorAssigner","Palettes","DEFAULT","_randomNumber","Math","floor","random","_initSharedData","_initSharedCursors","_initSharedSelection","_contentManager","MonacoCollabExt","editor","onInsert","text","insert","onReplace","model","startBatch","remove","completeBatch","onDelete","remoteSourceId","events","subscribe","delete","_remoteCursorManager","tooltips","tooltipDuration","_cursorReference","indexReference","references","key","forEach","reference","isLocal","_addRemoteCursor","_setLocalCursor","share","onDidChangeCursorPosition","position","getPosition","offset","getModel","getOffsetAt","set","remoteCursor","addCursor","sessionId","displayName","hide","dispose","cursorIndex","setOffset","_remoteSelectionManager","_selectionReference","rangeReference","_setLocalSelection","onDidChangeCursorSelection","_addRemoteSelection","selection","getSelection","isEmpty","isSet","clear","start","getStartPosition","end","getEndPosition","remoteSelection","addSelection","setOffsets","MonacoEditor","code","setCode","UserContext","guestName","GuestNameContext","username","Convergence","connectAnonymously","CONVERGENCE_URL","then","domain","models","openAutoCreate","collection","ephemeral","elementAt","bind","catch","error","console","overflow","onMount","handleEditorDidMount","options","wordWrap","autoIndent","Settings","handleFontSizeChange","handleLanguageChange","handleThemeChange","CssFormControl","fill","FormControl","InputLabel","Select","labelId","MenuItem","button","paddingBottom","tag","marginTop","lineHeight","whiteSpace","textOverflow","popper","zIndex","header","borderBottom","inputBase","transition","transitions","create","fade","paper","option","alignItems","popperDisablePortal","iconSelected","marginRight","marginLeft","flexShrink","close","opacity","AutoCompleteLabel","labels","React","anchorEl","setAnchorEl","pendingValue","setPendingValue","useTheme","open","Boolean","undefined","Fragment","ButtonBase","disableRipple","aria-describedby","currentTarget","getContrastText","Popper","Autocomplete","onClose","reason","focus","multiple","newValue","disableCloseOnSelect","disablePortal","renderTags","noOptionsText","renderOption","selected","visibility","description","sort","b","ai","indexOf","bi","getOptionLabel","renderInput","InputBase","InputProps","inputProps","autoFocus","CssPagination","Pagination","PaginationComponent","filterResponseData","TabsContext","rowsPerPage","setRowsPerPage","page","setPage","navRef","createRef","clientHeight","count","List","component","aria-label","slice","el","ListItem","question_id","question_title","diff","difficulty","paddingLeft","shape","val","ProblemList","companies","tags","setCompanies","setDifficulty","setTags","setResponse","post","prepareData","res","c","d","t","allCompanies","allDifficulties","allTags","fetchProblems","autocomplete","companiesData","tagsData","difficultyData","ButtonGroup","randomID","Divider","divider","direction","pagination","ListPagination","ProblemPage","questionData","question_data","problem","parse","question","chips","Chip","company","href","problem_url","rel","TabsComponent","tabIndex","onTabsChange","onQuestionDataChange","selectedIndex","onSelect","Dashboard","closeSnackbar","setRows","sid","setSid","goBack","setGoBack","setPartnerUser","action","localStorage","setItem","JSON","stringify","displayNotification","enter","variantStyle","preventDuplicate","retrivedKeyString","getItem","resetEditorLayout","adjustedRows","layout","orientation","paddingTop","clsx","splitter","onStopResize","flex","VoiceChat","footer","to","pathname","state","showNotification","module","exports"],"mappings":"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","file":"static/js/9.fc045184.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Paper, Tab, Tabs, Button, Box, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\nimport styles from \"./InputOutputFile.module.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\ninterface AppProps {\r\n  TextAreaRef: React.RefObject<HTMLDivElement>;\r\n  MonacoEditorRef: React.MutableRefObject<any>;\r\n  rows: number;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    // #115293\r\n    padding: \"1rem\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      outline: \"none\",\r\n      color: \"whitesmoke\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst InputOutputFile: React.FC<AppProps> = ({ TextAreaRef, rows, MonacoEditorRef }) => {\r\n  const { id } = useParams<Record<string, string>>();\r\n  const [value, setValue] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [outputData, setOutputData] = useState<Record<string, any>>({\r\n    output: \"\",\r\n    memory: 1,\r\n    cpuTime: 1,\r\n  });\r\n\r\n  const { language } = useContext(SettingContext) as SettingsContextType;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-input-data\", (inputData: string) => {\r\n      setInputText(inputData);\r\n    });\r\n    socket.on(\"emit-code-executed\", (outputResponse: Record<string, any>) => {\r\n      enqueueSnackbar(\r\n        outputResponse.memory === null || outputResponse.memory === null\r\n          ? \"Error in code-execution\"\r\n          : \"Code ran succesfully\",\r\n        {\r\n          variant: outputResponse.memory === null || outputResponse.memory === null ? \"error\" : \"success\",\r\n        }\r\n      );\r\n      setOutputData(outputResponse);\r\n      setValue(1);\r\n    });\r\n  }, []);\r\n\r\n  const submitProblem = async () => {\r\n    setLoading(true);\r\n    setValue(1);\r\n    const response = await axios({\r\n      method: \"POST\",\r\n      url: `${SERVER_URL}/api/execute`,\r\n      data: {\r\n        script: MonacoEditorRef.current?.getValue(),\r\n        language: language,\r\n        stdin: inputText,\r\n      },\r\n      responseType: \"json\",\r\n    });\r\n    socket.emit(\"code-executed\", { data: response.data, roomID: id });\r\n    enqueueSnackbar(\r\n      response.data.memory === null || response.data.memory === null\r\n        ? \"Error in code-execution\"\r\n        : \"Code ran succesfully\",\r\n      {\r\n        variant: response.data.memory === null || response.data.memory === null ? \"error\" : \"success\",\r\n      }\r\n    );\r\n    setOutputData(response.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const inputTextFn = (value: string) => {\r\n    setInputText(value);\r\n    socket.emit(\"input-data\", { data: value, roomID: id });\r\n  };\r\n\r\n  /**\r\n   * Here we render text area based on index position and additional\r\n   * logic for handling how to display the output on code execution\r\n   * @param index - Tabs Index value 0 from output 1 from input\r\n   */\r\n  const RenderTextArea = ({ index }: { index: number }) => {\r\n    return loading ? (\r\n      <div className={styles.loader}>\r\n        <Loader type=\"Grid\" color=\"#f5f5f5\" height={80} width={80} />\r\n      </div>\r\n    ) : (\r\n      <div\r\n        style={{\r\n          padding: \"1rem\",\r\n          minHeight: \"70%\",\r\n          color: outputData.memory === null || outputData.memory === null ? \"#dd2c00\" : \"inherit\",\r\n        }}\r\n      >\r\n        <pre>{outputData.output}</pre>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root} ref={TextAreaRef}>\r\n      <Paper className={styles.toolbar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={(event, value) => handleChange(event, value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          centered\r\n        >\r\n          <Tab label=\"Input\"></Tab>\r\n          <Tab label=\"Output\"></Tab>\r\n        </Tabs>\r\n        <Box className={styles[\"btn-box\"]}>\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"inherit\"\r\n            endIcon={<SendRoundedIcon />}\r\n            onClick={async () => {\r\n              await submitProblem();\r\n            }}\r\n          >\r\n            Run Code\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      <div className={styles[\"text-area\"]}>\r\n        {value === 0 ? (\r\n          <CssTextField\r\n            key=\"1\"\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            value={inputText}\r\n            onChange={(event) => inputTextFn(event.target.value)}\r\n            multiline\r\n            rows={rows}\r\n          />\r\n        ) : (\r\n          <RenderTextArea index={value} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputOutputFile;\r\n","import { Theme } from \"@material-ui/core/styles\";\r\nconst styles = ({ palette, spacing }: Theme) => {\r\n  const radius = spacing(2.5);\r\n  const size = spacing(4);\r\n  const rightBgColor = palette.primary.main;\r\n  // if you want the same as facebook messenger, use this color '#09f'\r\n  return {\r\n    avatar: {\r\n      width: size,\r\n      height: size,\r\n    },\r\n    leftRow: {\r\n      textAlign: \"left\",\r\n    },\r\n    rightRow: {\r\n      textAlign: \"right\",\r\n    },\r\n    msg: {\r\n      padding: spacing(1, 2),\r\n      borderRadius: 4,\r\n      marginBottom: 4,\r\n      display: \"inline-block\",\r\n      wordBreak: \"break-word\",\r\n      fontFamily:\r\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n      fontSize: \"14px\",\r\n    },\r\n    left: {\r\n      borderTopRightRadius: radius,\r\n      borderBottomRightRadius: radius,\r\n      backgroundColor: \"dimgrey\",\r\n    },\r\n    right: {\r\n      borderTopLeftRadius: radius,\r\n      borderBottomLeftRadius: radius,\r\n      backgroundColor: rightBgColor,\r\n      color: palette.common.white,\r\n    },\r\n    leftFirst: {\r\n      borderTopLeftRadius: radius,\r\n    },\r\n    leftLast: {\r\n      borderBottomLeftRadius: radius,\r\n    },\r\n    rightFirst: {\r\n      borderTopRightRadius: radius,\r\n    },\r\n    rightLast: {\r\n      borderBottomRightRadius: radius,\r\n    },\r\n  };\r\n};\r\nexport default styles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport styles from './ChatMessage-styles';\r\n\r\n// interface AppProps {\r\n//   classes?: any\r\n//   avatar: string;\r\n//   messages: string[];\r\n//   side: 'left' | 'right';\r\n//   GridContainerProps: Record<string, unknown>;\r\n//   GridItemProps: Record<string, unknown>;\r\n//   AvatarProps: Record<string, unknown>;\r\n//   getTypographyProps?: Function;\r\n// }\r\n\r\nconst ChatMsg = withStyles(styles, { name: 'ChatMsg' })((props) => {\r\n  const {\r\n    classes,\r\n    avatar,\r\n    messages,\r\n    side,\r\n    GridContainerProps,\r\n    GridItemProps,\r\n    AvatarProps,\r\n    getTypographyProps,\r\n  } = props;\r\n  const attachClass = (index) => {\r\n    if (index === 0) {\r\n      return classes[`${side}First`];\r\n    }\r\n    if (index === messages.length - 1) {\r\n      return classes[`${side}Last`];\r\n    }\r\n    return '';\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify={side === 'right' ? 'flex-end' : 'flex-start'}\r\n      {...GridContainerProps}\r\n    >\r\n      {side === 'left' && (\r\n        <Grid item {...GridItemProps}>\r\n          <Avatar\r\n            src={avatar}\r\n            {...AvatarProps}\r\n            className={cx(classes.avatar, AvatarProps.className)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={8}>\r\n        {messages.map((msg, i) => {\r\n          const TypographyProps = getTypographyProps(msg, i, props);\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <div key={msg.id || i} className={classes[`${side}Row`]}>\r\n              <Typography\r\n                align={'left'}\r\n                {...TypographyProps}\r\n                className={cx(\r\n                  classes.msg,\r\n                  classes[side],\r\n                  attachClass(i),\r\n                  TypographyProps.className\r\n                )}\r\n              >\r\n                {msg}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nChatMsg.propTypes = {\r\n  avatar: PropTypes.string,\r\n  messages: PropTypes.arrayOf(PropTypes.string),\r\n  side: PropTypes.oneOf(['left', 'right']),\r\n  GridContainerProps: PropTypes.shape({}),\r\n  GridItemProps: PropTypes.shape({}),\r\n  AvatarProps: PropTypes.shape({}),\r\n  getTypographyProps: PropTypes.func,\r\n};\r\nChatMsg.defaultProps = {\r\n  avatar: '',\r\n  messages: [],\r\n  side: 'left',\r\n  GridContainerProps: {},\r\n  GridItemProps: {},\r\n  AvatarProps: {},\r\n  getTypographyProps: () => ({}),\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { socket } from \"service/socket\";\r\nimport ChatMsg from \"./ChatMessage\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInfoSS } from \"types\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      paddding: \"1rem\",\r\n      height: \"inherit\",\r\n    },\r\n    formStyle: {\r\n      background: \"rgba(0, 0, 0,0.4)\",\r\n      padding: \"0.25rem\",\r\n      display: \"flex\",\r\n      boxSizing: \"border-box\",\r\n      backdropFilter: \"blur(10px)\",\r\n    },\r\n    inputStyle: {\r\n      padding: \"0 1rem\",\r\n      flexGrow: 1,\r\n      borderRadius: \"2rem\",\r\n      width: \"100%\",\r\n      margin: \"0.25rem\",\r\n      height: \"2rem\",\r\n      backgroundColor: \"#1A1D1E\",\r\n      color: \"whitesmoke\",\r\n      border: \"1px solid #3e3e42\",\r\n      \"&:focus\": {\r\n        outline: \"none\",\r\n        border: \"1px solid #0055bb\",\r\n      },\r\n    },\r\n    formButton: {\r\n      background: \"#333\",\r\n      border: \"none\",\r\n      padding: \"0 1rem\",\r\n      margin: \"0.25rem\",\r\n      borderRadius: \"3px\",\r\n      outline: \"none\",\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface MessageProps {\r\n  messages: string[];\r\n  socketID: string;\r\n  userInfo: UserInfoSS;\r\n}\r\n\r\nconst ChatApp = ({ userInfo, socketID }: { userInfo: UserInfoSS; socketID: string }) => {\r\n  const classes = useStyles();\r\n  const chatBoxRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [body, setBody] = useState<MessageProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (body: MessageProps) => {\r\n      receivedMessages(body);\r\n    });\r\n    const receivedMessages = (newMessage: MessageProps) => {\r\n      setBody((body) => {\r\n        return [...body, newMessage];\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!message) return;\r\n    const messageObject: MessageProps = {\r\n      messages: [message],\r\n      socketID: socketID,\r\n      userInfo: userInfo,\r\n    };\r\n    setBody((body) => {\r\n      return [...body, messageObject];\r\n    });\r\n    setMessage(\"\");\r\n    socket.emit(\"send-message\", messageObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) chatBoxRef.current.scrollIntoView();\r\n  }, [body]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          height: \"inherit\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{ margin: \"0px 0px 8px 0px\", padding: \"4px\", backgroundColor: \"#252526\", fontWeight: 600 }}\r\n        >\r\n          MESSENGER\r\n        </h1>\r\n        <div style={{ flexGrow: 1, margin: \"1rem\" }}>\r\n          {body.map((element, index) => {\r\n            if (element.socketID === socketID) {\r\n              return (\r\n                <ChatMsg\r\n                  key={index}\r\n                  avatar={element.userInfo.image_link}\r\n                  side={\"right\"}\r\n                  messages={[...element.messages]}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <ChatMsg key={index} messages={[...element.messages]} avatar={element.userInfo.image_link} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div style={{}} ref={chatBoxRef}>\r\n          <form onSubmit={sendMessage} id=\"chat-form\" className={classes.formStyle}>\r\n            <input\r\n              className={classes.inputStyle}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Start Chatting...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n","import React from \"react\";\r\nimport { Avatar, Button, withStyles, Theme, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport { UserInfoSS } from \"types\";\r\n/**\r\n * Invoke Call Peer when the component loads and if the guest user is empty then chill just return\r\n */\r\n\r\ninterface AppProps {\r\n  params: string;\r\n  partnerUser?: UserInfoSS;\r\n  user?: UserInfoSS;\r\n}\r\n\r\nconst LightTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 1)\",\r\n    boxShadow: theme.shadows[2],\r\n    fontSize: \"14px\",\r\n    borderRadius: \"25px\",\r\n  },\r\n}))(Tooltip);\r\n\r\nconst RenderIcons = ({ user }: { user?: UserInfoSS }) => {\r\n  if (!user) return <></>;\r\n  return (\r\n    <>\r\n      <LightTooltip TransitionComponent={Zoom} title={user?.name || \"John Doe\"} placement=\"bottom\">\r\n        <Avatar\r\n          alt={user.name}\r\n          src={user.image_link}\r\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\r\n        ></Avatar>\r\n      </LightTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Icons: React.FC<AppProps> = ({ params, partnerUser, user }) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <RenderIcons user={user} />\r\n      {partnerUser?.roomID ? <RenderIcons user={partnerUser} /> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","import { ColorAssigner } from \"@convergence/color-assigner\";\r\nimport * as MonacoCollabExt from \"@convergencelabs/monaco-collab-ext\";\r\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.css\";\r\n\r\nclass MonacoConvergenceAdapter {\r\n  constructor(monacoEditor, realtimeString) {\r\n    this._monacoEditor = monacoEditor;\r\n    this._model = realtimeString;\r\n    this._colorAssigner = ColorAssigner.Palettes.DEFAULT;\r\n    this._randomNumber = Math.floor(Math.random() * 4);\r\n  }\r\n\r\n  bind() {\r\n    this._initSharedData();\r\n    this._initSharedCursors();\r\n    this._initSharedSelection();\r\n  }\r\n\r\n  _initSharedData() {\r\n    this._contentManager = new MonacoCollabExt.EditorContentManager({\r\n      editor: this._monacoEditor,\r\n      onInsert: (index, text) => {\r\n        this._model.insert(index, text);\r\n      },\r\n      onReplace: (index, length, text) => {\r\n        this._model.model().startBatch();\r\n        this._model.remove(index, length);\r\n        this._model.insert(index, text);\r\n        this._model.model().completeBatch();\r\n      },\r\n      onDelete: (index, length) => {\r\n        this._model.remove(index, length);\r\n      },\r\n      remoteSourceId: \"convergence\",\r\n    });\r\n\r\n    this._model.events().subscribe((e) => {\r\n      switch (e.name) {\r\n        case \"insert\":\r\n          this._contentManager.insert(e.index, e.value);\r\n          break;\r\n        case \"remove\":\r\n          this._contentManager.delete(e.index, e.value.length);\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  _initSharedCursors() {\r\n    this._remoteCursorManager = new MonacoCollabExt.RemoteCursorManager({\r\n      editor: this._monacoEditor,\r\n      tooltips: true,\r\n      tooltipDuration: 2,\r\n    });\r\n    this._cursorReference = this._model.indexReference(\"cursor\");\r\n\r\n    const references = this._model.references({ key: \"cursor\" });\r\n    references.forEach((reference) => {\r\n      if (!reference.isLocal()) {\r\n        this._addRemoteCursor(reference);\r\n      }\r\n    });\r\n\r\n    this._setLocalCursor();\r\n    this._cursorReference.share();\r\n\r\n    this._monacoEditor.onDidChangeCursorPosition((e) => {\r\n      this._setLocalCursor();\r\n    });\r\n\r\n    this._model.on(\"reference\", (e) => {\r\n      if (e.reference.key() === \"cursor\") {\r\n        this._addRemoteCursor(e.reference);\r\n      }\r\n    });\r\n  }\r\n\r\n  _setLocalCursor() {\r\n    const position = this._monacoEditor.getPosition();\r\n    const offset = this._monacoEditor.getModel().getOffsetAt(position);\r\n    this._cursorReference.set(offset);\r\n  }\r\n\r\n  _addRemoteCursor(reference) {\r\n    const color = this._colorAssigner[this._randomNumber];\r\n    const remoteCursor = this._remoteCursorManager.addCursor(\r\n      reference.sessionId(),\r\n      color,\r\n      reference.user().displayName\r\n    );\r\n\r\n    reference.on(\"cleared\", () => remoteCursor.hide());\r\n    reference.on(\"disposed\", () => remoteCursor.dispose());\r\n    reference.on(\"set\", () => {\r\n      const cursorIndex = reference.value();\r\n      remoteCursor.setOffset(cursorIndex);\r\n    });\r\n  }\r\n\r\n  _initSharedSelection() {\r\n    this._remoteSelectionManager = new MonacoCollabExt.RemoteSelectionManager({\r\n      editor: this._monacoEditor,\r\n    });\r\n\r\n    this._selectionReference = this._model.rangeReference(\"selection\");\r\n    this._setLocalSelection();\r\n    this._selectionReference.share();\r\n\r\n    this._monacoEditor.onDidChangeCursorSelection((e) => {\r\n      this._setLocalSelection();\r\n    });\r\n\r\n    const references = this._model.references({ key: \"selection\" });\r\n    references.forEach((reference) => {\r\n      if (!reference.isLocal()) {\r\n        this._addRemoteSelection(reference);\r\n      }\r\n    });\r\n\r\n    this._model.on(\"reference\", (e) => {\r\n      if (e.reference.key() === \"selection\") {\r\n        this._addRemoteSelection(e.reference);\r\n      }\r\n    });\r\n  }\r\n\r\n  _setLocalSelection() {\r\n    const selection = this._monacoEditor.getSelection();\r\n    if (!selection.isEmpty()) {\r\n      const start = this._monacoEditor.getModel().getOffsetAt(selection.getStartPosition());\r\n      const end = this._monacoEditor.getModel().getOffsetAt(selection.getEndPosition());\r\n      this._selectionReference.set({ start, end });\r\n    } else if (this._selectionReference.isSet()) {\r\n      this._selectionReference.clear();\r\n    }\r\n  }\r\n\r\n  _addRemoteSelection(reference) {\r\n    const color = this._colorAssigner[this._randomNumber];\r\n\r\n    const remoteSelection = this._remoteSelectionManager.addSelection(reference.sessionId(), color);\r\n\r\n    if (reference.isSet()) {\r\n      const selection = reference.value();\r\n      remoteSelection.setOffsets(selection.start, selection.end);\r\n    }\r\n\r\n    reference.on(\"cleared\", () => remoteSelection.hide());\r\n    reference.on(\"disposed\", () => remoteSelection.dispose());\r\n    reference.on(\"set\", () => {\r\n      const selection = reference.value();\r\n      remoteSelection.setOffsets(selection.start, selection.end);\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonacoConvergenceAdapter;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Convergence } from \"@convergence/convergence\";\r\nimport { CONVERGENCE_URL } from \"config.keys\";\r\nimport MonacoConvergenceAdapter from \"./MonacoAdapter\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { GuestNameContextTypes, SettingsContextType, UserContextTypes } from \"types\";\r\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.css\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\ninterface AppProps {\r\n  code: string;\r\n  setCode: React.Dispatch<React.SetStateAction<string>>;\r\n  MonacoEditorRef: React.MutableRefObject<any>;\r\n}\r\n\r\nconst MonacoEditor: React.FC<AppProps> = ({ code, setCode, MonacoEditorRef }) => {\r\n  const handleEditorDidMount = (editor: any) => {\r\n    MonacoEditorRef.current = editor;\r\n  };\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { language, fontSize, theme } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n\r\n  // if login then user that else guest name else randome name :)))\r\n  const username = user?.name ? user.name : guestName;\r\n\r\n  useEffect(() => {\r\n    Convergence.connectAnonymously(CONVERGENCE_URL, username)\r\n      .then((domain) => {\r\n        // Now open the model, creating it using the initial data if it does not exist.\r\n        return domain.models().openAutoCreate({\r\n          collection: \"project-caucus`\",\r\n          id: \"monaco-editor-caucus\",\r\n          ephemeral: false,\r\n          data: { text: code },\r\n        });\r\n      })\r\n      .then((model) => {\r\n        const adapter = new MonacoConvergenceAdapter(MonacoEditorRef.current, model.elementAt(\"text\"));\r\n        adapter.bind();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Could not open model \", error);\r\n        enqueueSnackbar(\r\n          \"Real-time collaboration won't work: unable to establisha connection with the server\",\r\n          {\r\n            variant: \"error\",\r\n          }\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1, overflow: \"hidden\" }}>\r\n      <Editor\r\n        onMount={(editor) => handleEditorDidMount(editor)}\r\n        theme={theme}\r\n        language={language}\r\n        onChange={(value) => setCode(value || \"\")}\r\n        options={{ wordWrap: \"on\", fontSize: fontSize, autoIndent: \"advanced\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonacoEditor;\r\n","import React, { useContext } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Select, withStyles } from \"@material-ui/core\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\n\r\nconst Settings = () => {\r\n  const {\r\n    language,\r\n    fontSize,\r\n    theme,\r\n    handleFontSizeChange,\r\n    handleLanguageChange,\r\n    handleThemeChange,\r\n  } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const CssFormControl = withStyles({\r\n    root: {\r\n      // backgroundColor: \"#3e3e42\",\r\n\r\n      width: \"70%\",\r\n      margin: \"1rem\",\r\n      \"& svg\": {\r\n        fill: \"#3f51b5\",\r\n      },\r\n\r\n      \"&:before\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:after\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n\r\n      \"& .MuiSelect-root\": {\r\n        color: \"white\",\r\n      },\r\n      \"&.MuiPaper-root\": {\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n      },\r\n      \"& > ul\": {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n  })(FormControl);\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem 0rem\" }}>\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel id=\"language-select\" style={{ color: \"white\" }}>\r\n          Language\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"langauge-select\"\r\n          value={language}\r\n          onChange={(e) => handleLanguageChange(e.target.value as string)}\r\n        >\r\n          <MenuItem value={\"cpp\"}>C++</MenuItem>\r\n          <MenuItem value={\"java\"}>Java</MenuItem>\r\n          <MenuItem value={\"python\"}>Python</MenuItem>\r\n          <MenuItem value={\"javascript\"}>JavaScript</MenuItem>\r\n          <MenuItem value={\"go\"}>Go</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>FontSize</InputLabel>\r\n        <Select value={fontSize} onChange={(e) => handleFontSizeChange(e.target.value as number)}>\r\n          <MenuItem value={10}>10px</MenuItem>\r\n          <MenuItem value={12}>12px</MenuItem>\r\n          <MenuItem value={14}>14px</MenuItem>\r\n          <MenuItem value={16}>16px</MenuItem>\r\n          <MenuItem value={18}>18px</MenuItem>\r\n          <MenuItem value={20}>20px</MenuItem>\r\n          <MenuItem value={22}>22px</MenuItem>\r\n          <MenuItem value={24}>24px</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>Theme</InputLabel>\r\n        <Select value={theme} onChange={(e) => handleThemeChange(e.target.value as string)}>\r\n          <MenuItem value={\"vs-dark\"}>Dark Theme</MenuItem>\r\n          <MenuItem value={\"hc-black\"}>High Contrast</MenuItem>\r\n          <MenuItem value={\"light\"}>Light Theme</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","//@ts-nocheck\n/* eslint-disable no-use-before-define */\n// please dont expect me to re-write css for this mess X-X\nimport React from \"react\";\nimport { useTheme, fade, makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Autocomplete, { AutocompleteCloseReason } from \"@material-ui/lab/Autocomplete\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { LabelType } from \"types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: \"1rem\",\n      // width: \"40%\",\n      flexGrow: 1,\n      fontSize: 13,\n    },\n    button: {\n      fontSize: 13,\n      width: \"100%\",\n      textAlign: \"left\",\n      paddingBottom: 8,\n      color: \"#586069\",\n      fontWeight: 600,\n      \"&:hover,&:focus\": {\n        color: \"#0366d6\",\n      },\n      \"& span\": {\n        width: \"100%\",\n      },\n      \"& svg\": {\n        width: 16,\n        height: 16,\n      },\n    },\n    tag: {\n      marginTop: 3,\n      height: 20,\n      padding: \".15em 4px\",\n      fontWeight: 600,\n      lineHeight: \"15px\",\n      borderRadius: 2,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    popper: {\n      border: \"1px solid rgba(27,31,35,.15)\",\n      boxShadow: \"0 3px 12px rgba(27,31,35,.15)\",\n      borderRadius: 3,\n      width: 300,\n      zIndex: 5,\n      fontSize: 13,\n      color: \"#d8d5d0\",\n      // 3e3e42\n      backgroundColor: \"#272a2b\",\n    },\n    header: {\n      borderBottom: \"1px solid #585a5c\",\n      padding: \"8px 10px\",\n      fontWeight: 600,\n    },\n    inputBase: {\n      padding: 10,\n      width: \"100%\",\n      color: \"white\",\n      borderBottom: \"1px solid #d8d5d0\",\n      \"& input\": {\n        borderRadius: 4,\n        backgroundColor: \"#1e1f1f\",\n        padding: 8,\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n        border: \"1px solid #585a5c\",\n        fontSize: 14,\n        \"&:focus\": {\n          boxShadow: `${fade(\"#0055bb\", 0.25)} 0 0 0 0.2rem`,\n          borderColor: \"#0055bb\",\n        },\n      },\n    },\n    paper: {\n      boxShadow: \"none\",\n      margin: 0,\n      color: \"#d8d5d0\",\n      background: \"#191c1d\",\n      fontSize: 13,\n      \"& .MuiAutocomplete-noOptions\": {\n        color: \"#edeceb !important\",\n      },\n    },\n    option: {\n      minHeight: \"auto\",\n      alignItems: \"flex-start\",\n      padding: 8,\n      '&[aria-selected=\"true\"]': {\n        backgroundColor: \"#424242\",\n      },\n      '&[data-focus=\"true\"]': {\n        backgroundColor: \"#37474f\",\n      },\n    },\n    popperDisablePortal: {\n      position: \"relative\",\n    },\n    iconSelected: {\n      width: 17,\n      height: 17,\n      marginRight: 5,\n      marginLeft: -2,\n    },\n    color: {\n      width: 14,\n      height: 14,\n      flexShrink: 0,\n      borderRadius: 3,\n      marginRight: 8,\n      marginTop: 2,\n    },\n    text: {\n      flexGrow: 1,\n    },\n    close: {\n      opacity: 0.6,\n      width: 18,\n      height: 18,\n    },\n  })\n);\n\nexport default function AutoCompleteLabel({ value, setValue, labels, type }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  // default values we are adding 2 okays\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\n  const theme = useTheme();\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\n    if (reason === \"toggleInput\") {\n      return;\n    }\n    setValue(pendingValue);\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"autocomplete-label\" : undefined;\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <ButtonBase disableRipple className={classes.button} aria-describedby={id} onClick={handleClick}>\n          <span>{type}</span>\n          <SettingsIcon />\n        </ButtonBase>\n        {value.map((label) => (\n          <div\n            key={label.name}\n            className={classes.tag}\n            style={{\n              backgroundColor: label.color,\n              color: theme.palette.getContrastText(label.color),\n            }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\" className={classes.popper}>\n        <div className={classes.header}>Selects everything if no options is selected</div>\n        <Autocomplete\n          open\n          onClose={handleClose}\n          multiple\n          classes={{\n            paper: classes.paper,\n            option: classes.option,\n            popperDisablePortal: classes.popperDisablePortal,\n          }}\n          value={pendingValue}\n          onChange={(event, newValue) => {\n            setPendingValue(newValue);\n          }}\n          disableCloseOnSelect\n          disablePortal\n          renderTags={() => null}\n          noOptionsText=\"No Match Found\"\n          renderOption={(option, { selected }) => (\n            <React.Fragment>\n              <DoneIcon\n                className={classes.iconSelected}\n                style={{ visibility: selected ? \"visible\" : \"hidden\" }}\n              />\n              <span className={classes.color} style={{ backgroundColor: option.color }} />\n              <div className={classes.text}>\n                {option.name}\n                <br />\n                {option.description}\n              </div>\n              <CloseIcon className={classes.close} style={{ visibility: selected ? \"visible\" : \"hidden\" }} />\n            </React.Fragment>\n          )}\n          options={[...labels].sort((a, b) => {\n            // Display the selected labels first.\n            let ai = value.indexOf(a);\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n            let bi = value.indexOf(b);\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n            return ai - bi;\n          })}\n          getOptionLabel={(option) => option.name}\n          renderInput={(params) => (\n            <InputBase\n              ref={params.InputProps.ref}\n              inputProps={params.inputProps}\n              autoFocus\n              className={classes.inputBase}\n            />\n          )}\n        />\n      </Popper>\n    </React.Fragment>\n  );\n}\n","import React, { createRef, useEffect, useState, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport styles from \"./ProblemList.module.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { QuestionListResponse, TabsContextTypes } from \"types\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"config.keys\";\nimport { TabsContext } from \"service/TabsContext\";\nimport { useParams } from \"react-router-dom\";\n\nconst getColor = (diff: string) => {\n  if (diff === \"easy\") return \"#1faa00\";\n  else if (diff === \"medium\") return \"#fbc02d\";\n  else return \"#dd2c00\";\n};\n\nconst CssPagination = withStyles({\n  root: {\n    // backgroundColor: \"#3e3e42\",\n\n    color: \"white\",\n    \"& svg\": {\n      fill: \"white\",\n    },\n    \"& button\": {\n      color: \"white\",\n    },\n  },\n})(Pagination);\n\nconst PaginationComponent = ({ rows }: { rows: QuestionListResponse[] }) => {\n  const { filterResponseData } = useContext(TabsContext) as TabsContextTypes;\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = React.useState(1);\n  const navRef = createRef<HTMLElement>();\n  const { id } = useParams<Record<string, string>>();\n\n  useEffect(() => {\n    //@ts-ignore\n    const height = Math.floor(navRef.current?.clientHeight / 38);\n    setRowsPerPage(height);\n  }, []);\n\n  const getQuestion = (question_id: number) => {\n    axios({\n      method: \"post\",\n      url: `${SERVER_URL}/api/get-problem`,\n      data: { question_id: question_id },\n      responseType: \"json\",\n    }).then((response) => {\n      filterResponseData(response.data, id);\n    });\n  };\n\n  const count = Math.floor(\n    rows.length % rowsPerPage === 0 ? rows.length / rowsPerPage : rows.length / rowsPerPage + 1\n  );\n  return (\n    // <StylesProvider injectFirst>\n    <>\n      <Grid item className={styles[\"pagination-container\"]}>\n        <List component=\"nav\" aria-label=\"contacts\" className={styles[\"list-container\"]} ref={navRef}>\n          {(rowsPerPage > 0\n            ? rows.slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((el: QuestionListResponse, index) => {\n            return (\n              <ListItem\n                key={index}\n                button\n                className={styles[\"list-item\"]}\n                onClick={() => getQuestion(el.question_id)}\n              >\n                <div style={{ flexGrow: 1 }}>{`${el.question_id}. ${el.question_title}`}</div>\n                <div style={{ color: getColor(el.difficulty), paddingLeft: \"8px\", fontWeight: \"bold\" }}>\n                  {el.difficulty}\n                </div>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Grid>\n      <Grid item className={styles[\"pagination-group\"]}>\n        <CssPagination\n          shape=\"rounded\"\n          count={count}\n          page={page}\n          onChange={(event, val) => setPage(val)}\n          color=\"primary\"\n          className={styles[\"pagination-element\"]}\n        />\n      </Grid>\n    </>\n    // </StylesProvider>\n  );\n};\n\nexport default PaginationComponent;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport AutoCompleteLabel from \"./Autocomplete\";\nimport { Button, ButtonGroup, Divider } from \"@material-ui/core\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { SERVER_URL } from \"config.keys\";\nimport { allCompanies, allDifficulties, allTags } from \"./data\";\nimport ListPagination from \"./ListPagination\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styles from \"./ProblemList.module.css\";\nimport { LabelType, QuestionListResponse, TabsContextTypes } from \"types\";\nimport { tagsData, companiesData, difficultyData } from \"./data\";\nimport { TabsContext } from \"service/TabsContext\";\nimport { useParams } from \"react-router-dom\";\n\ninterface AppProps {\n  companies: LabelType[];\n  tags: LabelType[];\n  difficulty: LabelType[];\n  setCompanies: React.Dispatch<React.SetStateAction<LabelType[]>>;\n  setTags: React.Dispatch<React.SetStateAction<LabelType[]>>;\n  setDifficulty: React.Dispatch<React.SetStateAction<LabelType[]>>;\n}\n\nconst ProblemList: React.FC<AppProps> = ({\n  companies,\n  difficulty,\n  tags,\n  setCompanies,\n  setDifficulty,\n  setTags,\n}) => {\n  const [response, setResponse] = useState<QuestionListResponse[]>([]);\n\n  useEffect(() => {\n    axios\n      .post(`${SERVER_URL}/api/fetch-problems`, prepareData())\n      .then((res: AxiosResponse<QuestionListResponse[]>) => setResponse(res.data));\n  }, []);\n\n  const { filterResponseData } = useContext(TabsContext) as TabsContextTypes;\n  const { id } = useParams<Record<string, string>>();\n\n  const prepareData = () => {\n    const c = companies.map((el) => el.name);\n    const d = difficulty.map((el) => el.name);\n    const t = tags.map((el) => el.name);\n    return {\n      companies: c.length ? c : allCompanies,\n      difficulty: d.length ? d : allDifficulties,\n      tags: t.length ? t : allTags,\n    };\n  };\n\n  const fetchProblems = async () => {\n    const response: AxiosResponse<QuestionListResponse[]> = await axios({\n      method: \"post\",\n      url: `${SERVER_URL}/api/fetch-problems`,\n      data: prepareData(),\n      responseType: \"json\",\n    });\n    setResponse(response.data);\n  };\n  const getRandomQuestion = () => {\n    const randomID = Math.floor(Math.random() * 169);\n    axios({\n      method: \"post\",\n      url: `${SERVER_URL}/api/get-problem`,\n      data: { question_id: randomID },\n      responseType: \"json\",\n    }).then((response) => filterResponseData(response.data, id));\n  };\n  return (\n    <>\n      <Grid container className={styles.root}>\n        <Grid item className={styles.autocomplete}>\n          <AutoCompleteLabel\n            value={companies}\n            setValue={setCompanies}\n            labels={companiesData}\n            type=\"Companies\"\n          />\n          <AutoCompleteLabel value={tags} setValue={setTags} labels={tagsData} type=\"Tags\" />\n          <AutoCompleteLabel\n            value={difficulty}\n            setValue={setDifficulty}\n            labels={difficultyData}\n            type=\"Difficulty\"\n          />\n        </Grid>\n        <Grid item className={styles[\"btn-group\"]}>\n          <ButtonGroup color=\"inherit\">\n            <Button onClick={getRandomQuestion}>Random Problem</Button>\n            <Button\n              onClick={async () => {\n                await fetchProblems();\n              }}\n            >\n              Filter Problems\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Divider className={styles.divider} />\n        <Grid item container direction=\"column\" className={styles.pagination}>\n          <ListPagination rows={response} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProblemList;\n","import React, { useContext } from \"react\";\nimport parse from \"html-react-parser\";\nimport styles from \"./ProblemPage.module.css\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Box, Divider, Grid } from \"@material-ui/core\";\nimport { TabsContext } from \"service/TabsContext\";\nimport { TabsContextTypes } from \"types\";\nconst ProblemPage = () => {\n  const { questionData } = useContext(TabsContext) as TabsContextTypes;\n  const { question_data, companies, tags } = questionData;\n\n  return (\n    <div>\n      <Box className={styles.problem}>\n        <h1>{question_data.question_title}</h1>\n        {parse(question_data.question)}\n        <Divider />\n        <Grid container>\n          <Grid item className={styles[\"container-item\"]}>\n            <div className={styles.chips}>\n              {tags.map((tag, index) => (\n                <Chip label={tag} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={styles[\"container-item\"]}>\n            <div className={styles.chips}>\n              {companies.map((company, index) => (\n                <Chip label={company} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={styles[\"container-item\"]}>\n            <a href={`${question_data.problem_url}/discuss`} target=\"_blank\" rel=\" \">\n              <h4>Solution</h4>\n            </a>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default ProblemPage;\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"./ReactTabs.css\";\r\nimport Settings from \"./SettingsPage\";\r\nimport ProblemList from \"./ProblemList/ProblemList\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { LabelType, TabsContextTypes, QuestionDataSS } from \"types\";\r\nimport ProblemPage from \"./ProblemPage\";\r\nimport { tagsData, companiesData } from \"./ProblemList/data\";\r\nimport { socket } from \"service/socket\";\r\n\r\nexport default function TabsComponent() {\r\n  const { tabIndex, onTabsChange, onQuestionDataChange } = useContext(TabsContext) as TabsContextTypes;\r\n  const [companies, setCompanies] = useState<LabelType[]>([companiesData[0]]);\r\n  const [tags, setTags] = useState<LabelType[]>([tagsData[0]]);\r\n  const [difficulty, setDifficulty] = useState<LabelType[]>([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-selected-question\", (value: QuestionDataSS) => {\r\n      onQuestionDataChange(value);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => onTabsChange(index)} className=\"tabs_root\">\r\n      <TabList style={{ background: \"#252526\" }}>\r\n        <Tab>Problem</Tab>\r\n        <Tab>Problem List</Tab>\r\n        <Tab>Settings</Tab>\r\n      </TabList>\r\n      <TabPanel>\r\n        <ProblemPage />\r\n      </TabPanel>\r\n      <TabPanel style={{ flexGrow: 1 }}>\r\n        <ProblemList\r\n          companies={companies}\r\n          tags={tags}\r\n          difficulty={difficulty}\r\n          setCompanies={setCompanies}\r\n          setTags={setTags}\r\n          setDifficulty={setDifficulty}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <Settings />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n","import React, { useState, createRef, useRef, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InputOutputFile from \"component/InputOutputFile/InputOutputFile\";\r\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\r\nimport \"react-reflex/styles.css\";\r\nimport style from \"./Room.module.css\";\r\nimport { socket } from \"service/socket\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ChatApp from \"component/TextChat\";\r\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MonacoEditor from \"component/Editor/MonacoEditor\";\r\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.min.css.map\";\r\nimport clsx from \"clsx\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { UserContextTypes, GuestNameContextTypes, UserInfoSS } from \"types\";\r\nimport TabsPanel from \"component/QuestionsPane/Tabs\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Dashboard = () => {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n  const [code, setCode] = useState<string>(\"\");\r\n  const MonacoEditorRef = useRef<any>();\r\n  const TextAreaRef = createRef<HTMLDivElement>();\r\n  const [rows, setRows] = useState(5);\r\n  const [sid, setSid] = useState(\"\");\r\n  const [goBack, setGoBack] = useState(false);\r\n  const [partnerUser, setPartnerUser] = useState<UserInfoSS>();\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const prepareData = (): UserInfoSS => {\r\n    return {\r\n      name: user?.name ? user.name : guestName,\r\n      image_link: user?.image_link ? user.image_link : \"\",\r\n      roomID: id,\r\n    };\r\n  };\r\n\r\n  const action = (key: any) => (\r\n    <>\r\n      <Button\r\n        style={{ color: \"white\" }}\r\n        onClick={() => {\r\n          localStorage.setItem(\"shouldShow\", JSON.stringify(false));\r\n          closeSnackbar(key);\r\n        }}\r\n      >\r\n        Don't Show Again\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const displayNotification = (data: UserInfoSS, enter: boolean) => {\r\n    const text = enter ? \"joined the room\" : \"left the room\";\r\n    const variantStyle = enter ? \"success\" : \"error\";\r\n    enqueueSnackbar(`${data.name} ${text}`, {\r\n      preventDuplicate: true,\r\n      variant: variantStyle,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const retrivedKeyString = localStorage.getItem(\"shouldShow\");\r\n    const retrivedKey = retrivedKeyString ? JSON.parse(retrivedKeyString) : true;\r\n\r\n    if (retrivedKey) {\r\n      enqueueSnackbar(\"Open the same link in another tab to see realtime collabotation\", {\r\n        action,\r\n      });\r\n    }\r\n\r\n    socket.emit(\"join-room\", prepareData());\r\n\r\n    socket.on(\"store-sid\", (id: string) => setSid(id));\r\n    socket.on(\"new-user-joined\", (data: UserInfoSS) => {\r\n      setPartnerUser(data);\r\n      displayNotification(data, true);\r\n    });\r\n    socket.on(\"room-full\", () => {\r\n      setGoBack(true);\r\n    });\r\n\r\n    socket.on(\"user-left\", (data: UserInfoSS) => {\r\n      displayNotification(data, false);\r\n    });\r\n  }, []);\r\n\r\n  const resetEditorLayout = () => {\r\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\r\n    const adjustedRows = height > 340 ? height / 27 : height / 39;\r\n    setRows(Math.floor(adjustedRows));\r\n    MonacoEditorRef.current.layout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.root}>\r\n        <ReflexContainer orientation=\"horizontal\">\r\n          {/* <ReflexElement className={style.header} flex={0.08}>\r\n            Caucus\r\n          </ReflexElement> */}\r\n          <ReflexElement style={{ paddingTop: \"1rem\" }}>\r\n            <ReflexContainer orientation=\"vertical\">\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement className={style[\"pane-color\"]}>\r\n                    <TabsPanel />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* End of 1st content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement flex={0.45}>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement style={{ display: \"flex\" }}>\r\n                    <MonacoEditor code={code} setCode={setCode} MonacoEditorRef={MonacoEditorRef} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter\r\n                    className={clsx(style.splitter, style[\"splitter-horizontal\"])}\r\n                    onStopResize={() => resetEditorLayout()}\r\n                  />\r\n                  <ReflexElement flex={0.3}>\r\n                    <InputOutputFile\r\n                      rows={rows}\r\n                      TextAreaRef={TextAreaRef}\r\n                      MonacoEditorRef={MonacoEditorRef}\r\n                    />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* 3rd content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  {/* 0.12 */}\r\n                  <ReflexElement className={style[\"pane-color\"]} flex={0.0}>\r\n                    <VoiceChat params={id} user={prepareData()} partnerUser={partnerUser} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter className={clsx(style.splitter, style[\"splitter-horizontal\"])} />\r\n                  <ReflexElement className={style[\"chat-app\"]}>\r\n                    {/* Chat App Component */}\r\n                    <ChatApp userInfo={prepareData()} socketID={sid} />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n            </ReflexContainer>\r\n          </ReflexElement>\r\n          <ReflexElement className={style.footer} flex={0.028}>\r\n            Made with <span>&#9829;</span> by Rishabh Malhotra{\"  \"}•{\"  \"}\r\n            <a href=\"https://github.com/Rishabh-malhotraa/codeforces-diary\" target=\"__blank\">\r\n              Github\r\n            </a>\r\n          </ReflexElement>\r\n        </ReflexContainer>\r\n      </div>\r\n      {goBack ? <Redirect to={{ pathname: \"/home\", state: { showNotification: true } }} /> : <></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProblemList_root__2FzmS\",\"autocomplete\":\"ProblemList_autocomplete__2P27U\",\"btn-group\":\"ProblemList_btn-group__2JIvX\",\"pagination\":\"ProblemList_pagination__33K6A\",\"divider\":\"ProblemList_divider__2rLxt\",\"pagination-container\":\"ProblemList_pagination-container__ecGX0\",\"list-container\":\"ProblemList_list-container__2kEGV\",\"list-item\":\"ProblemList_list-item__3aQZ9\",\"pagination-group\":\"ProblemList_pagination-group__33ceG\",\"pagination-element\":\"ProblemList_pagination-element__2kb7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputOutputFile_root__2Ij68\",\"toolbar\":\"InputOutputFile_toolbar__1SH2H\",\"btn-box\":\"InputOutputFile_btn-box__3sO5L\",\"text-area\":\"InputOutputFile_text-area__3j61z\",\"loader\":\"InputOutputFile_loader__f36d9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Room_root__Q64jF\",\"header\":\"Room_header__3-ybm\",\"pane-color\":\"Room_pane-color__2gUSJ\",\"monaco-remote-cursor\":\"Room_monaco-remote-cursor__JpKw9\",\"middle-pane-content\":\"Room_middle-pane-content__1-kSC\",\"chat-app\":\"Room_chat-app__3_RGZ\",\"splitter\":\"Room_splitter__3pMl4\",\"splitter-verticle\":\"Room_splitter-verticle__3q8IZ\",\"splitter-horizontal\":\"Room_splitter-horizontal__2OiuS\",\"footer\":\"Room_footer__x0rKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"problem\":\"ProblemPage_problem__2oiqe\",\"title\":\"ProblemPage_title__YxIdz\",\"container-item\":\"ProblemPage_container-item__kDpqB\",\"chips\":\"ProblemPage_chips__GvF9e\"};"],"sourceRoot":""}