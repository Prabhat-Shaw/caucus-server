{"version":3,"sources":["component/QuestionsPane/ProblemList/ProblemList.module.css","component/InputOutputFile/InputOutputFile.module.css","pages/Room/Room.module.css","component/InputOutputFile/InputOutputFile.tsx","component/TextChat/ChatMessage-styles.ts","component/TextChat/ChatMessage.jsx","component/TextChat/index.tsx","service/getRandomAvatar.ts","component/VoiceChat/VoiceChat.tsx","component/Editor/CodeMirrorAdapter.js","service/getRandomColor.ts","component/Editor/CodeMirrorEditor.tsx","component/QuestionsPane/SettingsPage.tsx","component/QuestionsPane/ProblemList/Autocomplete.tsx","component/QuestionsPane/ProblemList/ListPagination.tsx","component/QuestionsPane/ProblemList/ProblemList.tsx","component/QuestionsPane/ProblemPage/LeetCode.tsx","component/QuestionsPane/ProblemPage/CodeForces.tsx","component/QuestionsPane/ProblemPage/ProblemPage.tsx","component/QuestionsPane/Tabs.tsx","pages/Room/Room.tsx"],"names":["module","exports","CssTextField","withStyles","root","padding","height","width","outline","color","borderBottomColor","borderColor","TextField","InputOutputFile","TextAreaRef","rows","editorInstance","roomID","id","useRoomID","value","setValue","loading","setLoading","inputText","setInputText","outputData","setOutputData","useContext","CodeExecutionInfoContext","language","SettingContext","enqueueSnackbar","useSnackbar","useEffect","socket","on","inputData","outputResponse","memory","variant","submitProblem","useCallback","async","response","axios","method","url","SERVER_URL","data","script","getValue","stdin","responseType","emit","RenderTextArea","index","className","styles","loader","type","style","minHeight","textAlign","output","ref","Paper","toolbar","Tabs","onChange","event","indicatorColor","textColor","centered","Tab","label","Box","Button","endIcon","onClick","size","inputTextFn","target","multiline","palette","spacing","radius","rightBgColor","primary","main","avatar","leftRow","rightRow","msg","borderRadius","marginBottom","display","wordBreak","fontFamily","fontSize","left","borderTopRightRadius","borderBottomRightRadius","backgroundColor","right","borderTopLeftRadius","borderBottomLeftRadius","common","white","leftFirst","leftLast","rightFirst","rightLast","ChatMsg","name","props","classes","messages","side","GridContainerProps","GridItemProps","AvatarProps","getTypographyProps","Grid","container","justify","item","Avatar","src","cx","xs","map","i","TypographyProps","Typography","align","length","defaultProps","useStyles","makeStyles","createStyles","paddding","formStyle","background","boxSizing","backdropFilter","inputStyle","flexGrow","margin","border","formButton","ChatApp","userInfo","socketID","chatBoxRef","useRef","message","setMessage","useState","body","setBody","receivedMessages","newMessage","current","scrollIntoView","flexDirection","fontWeight","element","image_link","onSubmit","e","preventDefault","messageObject","autoComplete","placeholder","getRandomColor","Math","floor","random","LightTooltip","theme","tooltip","boxShadow","shadows","Tooltip","RenderIcons","user","TransitionComponent","Zoom","title","placement","alt","getRandomAvatar","charAt","Icons","params","partnerUser","cmOrigin","createEmptyLinePlaceholder","document","createElement","setAttribute","emptyTxt","insertBefore","createTextNode","sel","updateRemoteSelection","y","cm","cursors","clientId","awareness","aw","getStates","get","m","undefined","caret","clear","forEach","delete","cursor","anchor","head","Y","JSON","parse","headpos","posFromIndex","anchorpos","from","to","caretEl","username","classList","add","userDiv","invert","setTimeout","createRemoteCaret","func","awCursor","line","ch","push","markText","CodeMirror","Pos","css","inclusiveRight","inclusiveLeft","setBookmark","widget","insertLeft","set","CodeMirrorBinding","constructor","textType","codeMirror","yUndoManager","doc","cmDoc","getDoc","this","_onStackItemAdded","stackItem","changedParentTypes","has","_beforeChangeSelection","meta","_onStackItemPopped","setSelection","_beforeChange","trackedOrigins","editorUndo","endOperation","undo","startOperation","editorRedo","redo","addKeyMap","_mux","createMutex","toString","_typeObserver","binding","getEditor","indexFromPos","getCursor","switchSel","tmp","performChange","delta","d","retain","insert","pos","replaceRange","math","start","end","operation","scroll","typeObserver","_targetObserver","instance","changes","transact","diff","remove","change","delLen","removed","s","reduce","text","join","targetObserver","_cursors","Map","_changedCursors","Set","_debounceCursorEvent","eventloop","_awarenessListener","f","clientID","added","updated","_cursorListener","getLocalState","hasFocus","wrapper","ownerDocument","newAnchor","newHead","currentAnchor","currentHead","setLocalStateField","stringify","codemirrorCursorActivity","_blurListeer","observe","destroy","unobserve","off","palettes","DEFAULT","LIGHT_12","DARK_12","CodeMirrorEditor","setEditorInstance","keybinds","UserContext","guestName","GuestNameContext","ydoc","yText","getText","provider","WebsocketProvider","CDRT_SERVER","err","Error","val","colorScheme","autoScroll","options","mode","keyMap","lineWrapping","smartIndent","lineNumbers","foldGutter","tabSize","gutters","autoCloseTags","matchBrackets","autoCloseBrackets","extraKeys","editorDidMount","editor","window","handleEditorDidMount","setSize","Settings","handleFontSizeChange","handleLanguageChange","handleThemeChange","handleKeybindsChange","CssFormControl","fill","FormControl","InputLabel","Select","labelId","MenuItem","button","paddingBottom","tag","justifyContent","alignItems","marginTop","lineHeight","whiteSpace","overflow","textOverflow","popper","zIndex","header","borderBottom","inputBase","transition","transitions","create","fade","paper","option","popperDisablePortal","position","iconSelected","marginRight","marginLeft","flexShrink","close","opacity","AutoCompleteLabel","labels","anchorEl","setAnchorEl","React","pendingValue","setPendingValue","useTheme","open","Boolean","Fragment","ButtonBase","disableRipple","aria-describedby","currentTarget","getContrastText","Popper","Autocomplete","onClose","reason","focus","multiple","newValue","disableCloseOnSelect","disablePortal","renderTags","noOptionsText","renderOption","selected","visibility","description","sort","a","b","ai","indexOf","bi","getOptionLabel","renderInput","InputBase","InputProps","inputProps","autoFocus","getColor","CssPagination","Pagination","CssListItem","ListItem","PaginationComponent","filterResponseData","TabsContext","rowsPerPage","setRowsPerPage","page","setPage","navRef","createRef","clientHeight","count","List","component","aria-label","slice","el","getQuestion","question_id","then","question_title","difficulty","paddingLeft","shape","CssButton","ProblemList","companies","tags","setCompanies","setDifficulty","setTags","setUrl","setResponse","errorText","setErrorText","error","comment","post","prepareData","res","handleScrappedData","NextButton","hostname","Url","htmlString","getQuestionData","c","t","allCompanies","allDifficulties","allTags","helperText","endAdornment","autocomplete","companiesData","tagsData","difficultyData","ButtonGroup","randomID","fetchProblems","Divider","divider","direction","pagination","ListPagination","LeetCode","questionData","question_data","question","Chip","company","href","problem_url","rel","scrappedData","MathRef","renderMathInElement","delimiters","ProblemPage","showScrapped","CodeForces","TabsComponent","tabIndex","onTabsChange","onQuestionDataChange","selectedIndex","onSelect","Dashboard","closeSnackbar","setRows","sid","setSid","goBack","setGoBack","setPartnerUser","useParams","setRoomID","action","key","localStorage","setItem","displayNotification","enter","variantStyle","preventDuplicate","retrivedKeyString","getItem","resetEditorLayout","adjustedRows","refresh","orientation","paddingTop","clsx","splitter","onStopResize","flex","VoiceChat","footer","pathname","state","showNotification"],"mappings":"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","file":"static/js/7.8f3d0a98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProblemList_root__2FzmS\",\"request-field\":\"ProblemList_request-field__1CDjc\",\"adornment-button\":\"ProblemList_adornment-button__BVaWd\",\"autocomplete\":\"ProblemList_autocomplete__2P27U\",\"btn-group\":\"ProblemList_btn-group__2JIvX\",\"pagination\":\"ProblemList_pagination__33K6A\",\"divider\":\"ProblemList_divider__2rLxt\",\"pagination-container\":\"ProblemList_pagination-container__ecGX0\",\"list-container\":\"ProblemList_list-container__2kEGV\",\"pagination-group\":\"ProblemList_pagination-group__33ceG\",\"pagination-element\":\"ProblemList_pagination-element__2kb7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputOutputFile_root__2Ij68\",\"toolbar\":\"InputOutputFile_toolbar__1SH2H\",\"btn-box\":\"InputOutputFile_btn-box__3sO5L\",\"text-area\":\"InputOutputFile_text-area__3j61z\",\"loader\":\"InputOutputFile_loader__f36d9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Room_root__Q64jF\",\"header\":\"Room_header__3-ybm\",\"pane-color\":\"Room_pane-color__2gUSJ\",\"monaco-remote-cursor\":\"Room_monaco-remote-cursor__JpKw9\",\"middle-pane-content\":\"Room_middle-pane-content__1-kSC\",\"chat-app\":\"Room_chat-app__3_RGZ\",\"splitter\":\"Room_splitter__3pMl4\",\"splitter-verticle\":\"Room_splitter-verticle__3q8IZ\",\"splitter-horizontal\":\"Room_splitter-horizontal__2OiuS\",\"footer\":\"Room_footer__x0rKd\"};","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { Paper, Tab, Tabs, Button, Box, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { socket } from \"service/socket\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType, CodeExecutionInfoType } from \"types\";\r\nimport styles from \"./InputOutputFile.module.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { CodeExecutionInfoContext } from \"service/CodeExecutionInfo\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\ninterface AppProps {\r\n  TextAreaRef: React.RefObject<HTMLDivElement>;\r\n  editorInstance: any;\r\n  rows: number;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    // #115293\r\n    padding: \"1rem\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      outline: \"none\",\r\n      color: \"whitesmoke\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst InputOutputFile: React.FC<AppProps> = ({ TextAreaRef, rows, editorInstance }) => {\r\n  const { roomID: id } = useRoomID();\r\n\r\n  const {\r\n    value,\r\n    setValue,\r\n    loading,\r\n    setLoading,\r\n    inputText,\r\n    setInputText,\r\n    outputData,\r\n    setOutputData,\r\n  } = useContext(CodeExecutionInfoContext) as CodeExecutionInfoType;\r\n\r\n  const { language } = useContext(SettingContext) as SettingsContextType;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-input-data\", (inputData: string) => {\r\n      setInputText(inputData);\r\n    });\r\n    socket.on(\"emit-code-executed\", (outputResponse: Record<string, any>) => {\r\n      enqueueSnackbar(\r\n        outputResponse.memory === null || outputResponse.memory === null\r\n          ? \"Error in code-execution\"\r\n          : \"Code ran successfully\",\r\n        {\r\n          variant: outputResponse.memory === null || outputResponse.memory === null ? \"error\" : \"success\",\r\n        }\r\n      );\r\n      setOutputData(outputResponse);\r\n      setValue(1);\r\n    });\r\n  }, []);\r\n\r\n  const submitProblem = useCallback(async () => {\r\n    setLoading(true);\r\n    setValue(1);\r\n    const response = await axios({\r\n      method: \"POST\",\r\n      url: `${SERVER_URL}/api/execute`,\r\n      data: {\r\n        script: editorInstance.getValue(),\r\n        language: language,\r\n        stdin: inputText,\r\n      },\r\n      responseType: \"json\",\r\n    });\r\n    socket.emit(\"code-executed\", { data: response.data, roomID: id });\r\n    enqueueSnackbar(\r\n      response.data.memory === null || response.data.memory === null\r\n        ? \"Error in code-execution\"\r\n        : \"Code ran succesfully\",\r\n      {\r\n        variant: response.data.memory === null || response.data.memory === null ? \"error\" : \"success\",\r\n      }\r\n    );\r\n    setOutputData(response.data);\r\n    setLoading(false);\r\n  }, [SERVER_URL, editorInstance, language, inputText, id]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const inputTextFn = (value: string) => {\r\n    setInputText(value);\r\n    socket.emit(\"input-data\", { data: value, roomID: id });\r\n  };\r\n\r\n  /**\r\n   * Here we render text area based on index position and additional\r\n   * logic for handling how to display the output on code execution\r\n   * @param index - Tabs Index value 0 from output 1 from input\r\n   */\r\n  const RenderTextArea = ({ index }: { index: number }) => {\r\n    return loading ? (\r\n      <div className={styles.loader}>\r\n        <Loader type=\"Grid\" color=\"#f5f5f5\" height={80} width={80} />\r\n      </div>\r\n    ) : (\r\n      <div\r\n        style={{\r\n          padding: \"1rem\",\r\n          minHeight: \"70%\",\r\n          textAlign: \"left\",\r\n          color: outputData.memory === null || outputData.memory === null ? \"#dd2c00\" : \"inherit\",\r\n        }}\r\n      >\r\n        <pre>{outputData.output}</pre>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root} ref={TextAreaRef}>\r\n      <Paper className={styles.toolbar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={(event, value) => handleChange(event, value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          centered\r\n        >\r\n          <Tab label=\"Input\"></Tab>\r\n          <Tab label=\"Output\"></Tab>\r\n        </Tabs>\r\n        <Box className={styles[\"btn-box\"]}>\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"inherit\"\r\n            endIcon={<SendRoundedIcon />}\r\n            onClick={async () => {\r\n              await submitProblem();\r\n            }}\r\n          >\r\n            Run Code\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      <div className={styles[\"text-area\"]}>\r\n        {value === 0 ? (\r\n          <CssTextField\r\n            key=\"1\"\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            value={inputText}\r\n            onChange={(event) => inputTextFn(event.target.value)}\r\n            multiline\r\n            rows={rows}\r\n          />\r\n        ) : (\r\n          <RenderTextArea index={value} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputOutputFile;\r\n","import { Theme } from \"@material-ui/core/styles\";\r\nconst styles = ({ palette, spacing }: Theme) => {\r\n  const radius = spacing(2.5);\r\n  const size = spacing(4);\r\n  const rightBgColor = palette.primary.main;\r\n  // if you want the same as facebook messenger, use this color '#09f'\r\n  return {\r\n    avatar: {\r\n      width: size,\r\n      height: size,\r\n    },\r\n    leftRow: {\r\n      textAlign: \"left\",\r\n    },\r\n    rightRow: {\r\n      textAlign: \"right\",\r\n    },\r\n    msg: {\r\n      padding: spacing(1, 2),\r\n      borderRadius: 4,\r\n      marginBottom: 4,\r\n      display: \"inline-block\",\r\n      wordBreak: \"break-word\",\r\n      fontFamily:\r\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n      fontSize: \"14px\",\r\n    },\r\n    left: {\r\n      borderTopRightRadius: radius,\r\n      borderBottomRightRadius: radius,\r\n      backgroundColor: \"dimgrey\",\r\n    },\r\n    right: {\r\n      borderTopLeftRadius: radius,\r\n      borderBottomLeftRadius: radius,\r\n      backgroundColor: rightBgColor,\r\n      color: palette.common.white,\r\n    },\r\n    leftFirst: {\r\n      borderTopLeftRadius: radius,\r\n    },\r\n    leftLast: {\r\n      borderBottomLeftRadius: radius,\r\n    },\r\n    rightFirst: {\r\n      borderTopRightRadius: radius,\r\n    },\r\n    rightLast: {\r\n      borderBottomRightRadius: radius,\r\n    },\r\n  };\r\n};\r\nexport default styles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport styles from './ChatMessage-styles';\r\n\r\n// interface AppProps {\r\n//   classes?: any\r\n//   avatar: string;\r\n//   messages: string[];\r\n//   side: 'left' | 'right';\r\n//   GridContainerProps: Record<string, unknown>;\r\n//   GridItemProps: Record<string, unknown>;\r\n//   AvatarProps: Record<string, unknown>;\r\n//   getTypographyProps?: Function;\r\n// }\r\n\r\nconst ChatMsg = withStyles(styles, { name: 'ChatMsg' })((props) => {\r\n  const {\r\n    classes,\r\n    avatar,\r\n    messages,\r\n    side,\r\n    GridContainerProps,\r\n    GridItemProps,\r\n    AvatarProps,\r\n    getTypographyProps,\r\n  } = props;\r\n  const attachClass = (index) => {\r\n    if (index === 0) {\r\n      return classes[`${side}First`];\r\n    }\r\n    if (index === messages.length - 1) {\r\n      return classes[`${side}Last`];\r\n    }\r\n    return '';\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify={side === 'right' ? 'flex-end' : 'flex-start'}\r\n      {...GridContainerProps}\r\n    >\r\n      {side === 'left' && (\r\n        <Grid item {...GridItemProps}>\r\n          <Avatar\r\n            src={avatar}\r\n            {...AvatarProps}\r\n            className={cx(classes.avatar, AvatarProps.className)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={8}>\r\n        {messages.map((msg, i) => {\r\n          const TypographyProps = getTypographyProps(msg, i, props);\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <div key={msg.id || i} className={classes[`${side}Row`]}>\r\n              <Typography\r\n                align={'left'}\r\n                {...TypographyProps}\r\n                className={cx(\r\n                  classes.msg,\r\n                  classes[side],\r\n                  attachClass(i),\r\n                  TypographyProps.className\r\n                )}\r\n              >\r\n                {msg}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nChatMsg.propTypes = {\r\n  avatar: PropTypes.string,\r\n  messages: PropTypes.arrayOf(PropTypes.string),\r\n  side: PropTypes.oneOf(['left', 'right']),\r\n  GridContainerProps: PropTypes.shape({}),\r\n  GridItemProps: PropTypes.shape({}),\r\n  AvatarProps: PropTypes.shape({}),\r\n  getTypographyProps: PropTypes.func,\r\n};\r\nChatMsg.defaultProps = {\r\n  avatar: '',\r\n  messages: [],\r\n  side: 'left',\r\n  GridContainerProps: {},\r\n  GridItemProps: {},\r\n  AvatarProps: {},\r\n  getTypographyProps: () => ({}),\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { socket } from \"service/socket\";\r\nimport ChatMsg from \"./ChatMessage\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInfoSS } from \"types\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      paddding: \"1rem\",\r\n      height: \"inherit\",\r\n    },\r\n    formStyle: {\r\n      background: \"rgba(0, 0, 0,0.4)\",\r\n      padding: \"0.25rem\",\r\n      display: \"flex\",\r\n      boxSizing: \"border-box\",\r\n      backdropFilter: \"blur(10px)\",\r\n    },\r\n    inputStyle: {\r\n      padding: \"0 1rem\",\r\n      flexGrow: 1,\r\n      borderRadius: \"2rem\",\r\n      width: \"100%\",\r\n      margin: \"0.25rem\",\r\n      height: \"2rem\",\r\n      backgroundColor: \"#1A1D1E\",\r\n      color: \"whitesmoke\",\r\n      border: \"1px solid #3e3e42\",\r\n      \"&:focus\": {\r\n        outline: \"none\",\r\n        border: \"1px solid #0055bb\",\r\n      },\r\n    },\r\n    formButton: {\r\n      background: \"#333\",\r\n      border: \"none\",\r\n      padding: \"0 1rem\",\r\n      margin: \"0.25rem\",\r\n      borderRadius: \"3px\",\r\n      outline: \"none\",\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface MessageProps {\r\n  messages: string[];\r\n  socketID: string;\r\n  userInfo: UserInfoSS;\r\n}\r\n\r\nconst ChatApp = ({ userInfo, socketID }: { userInfo: UserInfoSS; socketID: string }) => {\r\n  const classes = useStyles();\r\n  const chatBoxRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [body, setBody] = useState<MessageProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (body: MessageProps) => {\r\n      receivedMessages(body);\r\n    });\r\n    const receivedMessages = (newMessage: MessageProps) => {\r\n      setBody((body) => {\r\n        return [...body, newMessage];\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!message) return;\r\n    const messageObject: MessageProps = {\r\n      messages: [message],\r\n      socketID: socketID,\r\n      userInfo: userInfo,\r\n    };\r\n    setBody((body) => {\r\n      return [...body, messageObject];\r\n    });\r\n    setMessage(\"\");\r\n    socket.emit(\"send-message\", messageObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) chatBoxRef.current.scrollIntoView();\r\n  }, [body]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          height: \"inherit\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{ margin: \"0px 0px 8px 0px\", padding: \"4px\", backgroundColor: \"#252526\", fontWeight: 600 }}\r\n        >\r\n          MESSENGER\r\n        </h1>\r\n        <div style={{ flexGrow: 1, margin: \"1rem\" }}>\r\n          {body.map((element, index) => {\r\n            if (element.socketID === socketID) {\r\n              return (\r\n                <ChatMsg\r\n                  key={index}\r\n                  avatar={element.userInfo.image_link}\r\n                  side={\"right\"}\r\n                  messages={[...element.messages]}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <ChatMsg key={index} messages={[...element.messages]} avatar={element.userInfo.image_link} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div style={{}} ref={chatBoxRef}>\r\n          <form onSubmit={sendMessage} id=\"chat-form\" className={classes.formStyle}>\r\n            <input\r\n              className={classes.inputStyle}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Start Chatting...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n","const getRandomColor = () => {\r\n  const avatar = [\r\n    \"https://i.pinimg.com/originals/57/47/06/57470642bba41d1b079cb9926117fe6e.jpg\", // goku\r\n    \"https://i.pinimg.com/236x/b6/d9/58/b6d9586cb24fdd802dd70d0c6b17f2b0.jpg\", // jerry 1\r\n    \"https://i.pinimg.com/236x/9d/aa/e2/9daae24f4ca34cfecb368d0590930934.jpg\", // jerry2\r\n    \"https://i1.sndcdn.com/avatars-000406450287-rukoyr-t500x500.jpg\", // squirtle\r\n    \"https://i.pinimg.com/originals/97/9e/a3/979ea3e13fe19f047f1918c640531edf.jpg\", // pikachu\r\n    \"https://i.pinimg.com/originals/6a/b8/ed/6ab8ed1a70bd7c744c7fda2fd0803b18.jpg\", // winneh\r\n    \"https://i.pinimg.com/originals/5a/6e/49/5a6e498e40b1dcd9e0fef062db163e93.jpg\", // tigor\r\n    \"https://i.pinimg.com/564x/1d/fc/27/1dfc278c0f56a18c98ada502916ee70b.jpg\", // stich\r\n    \"https://avatars.githubusercontent.com/u/47313528?v=4\", // github avatar\r\n    \"https://i1.sndcdn.com/avatars-000542389239-i206kr-t500x500.jpg\", // doge\r\n  ];\r\n\r\n  return avatar[Math.floor(Math.random() * avatar.length)];\r\n};\r\n\r\nexport default getRandomColor;\r\n","import React from \"react\";\r\nimport { Avatar, Button, withStyles, Theme, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport { UserInfoSS } from \"types\";\r\nimport getRandomAvatar from \"service/getRandomAvatar\";\r\n/**\r\n * Invoke Call Peer when the component loads and if the guest user is empty then chill just return\r\n */\r\n\r\ninterface AppProps {\r\n  params: string;\r\n  partnerUser?: UserInfoSS;\r\n  user?: UserInfoSS;\r\n}\r\n\r\nconst LightTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 1)\",\r\n    boxShadow: theme.shadows[2],\r\n    fontSize: \"14px\",\r\n    borderRadius: \"25px\",\r\n  },\r\n}))(Tooltip);\r\n\r\nconst RenderIcons = ({ user }: { user?: UserInfoSS }) => {\r\n  if (!user) return <></>;\r\n  return (\r\n    <>\r\n      <LightTooltip TransitionComponent={Zoom} title={user?.name || \"John Doe\"} placement=\"bottom\">\r\n        <Avatar\r\n          alt={user.name}\r\n          src={user.image_link || getRandomAvatar()}\r\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\r\n        >\r\n          {user.name.charAt(0)}\r\n        </Avatar>\r\n      </LightTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Icons: React.FC<AppProps> = ({ params, partnerUser, user }) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <RenderIcons user={user} />\r\n      {partnerUser?.roomID ? <RenderIcons user={partnerUser} /> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","/**\r\n * @module bindings/textarea\r\n */\r\n\r\nimport { createMutex } from \"lib0/mutex.js\";\r\nimport * as math from \"lib0/math.js\";\r\nimport * as Y from \"yjs\";\r\nimport * as func from \"lib0/function.js\";\r\nimport * as eventloop from \"lib0/eventloop.js\";\r\nimport * as diff from \"lib0/diff.js\";\r\nimport CodeMirror from \"codemirror\";\r\nimport invert from \"invert-color\";\r\n\r\nexport const cmOrigin = \"prosemirror-binding\";\r\n\r\n/**\r\n * @param {CodemirrorBinding} binding\r\n * @param {any} event\r\n */\r\nconst typeObserver = (binding, event) => {\r\n  binding._mux(() => {\r\n    const cmDoc = binding.cmDoc;\r\n    const cm = cmDoc.getEditor();\r\n    // Normally the position is right-associated\r\n    // But when remote changes happen, it looks like the remote user is hijacking your position.\r\n    // Just for remote insertions, we make the collapsed cursor left-associated.\r\n    // If selection is not collapsed, we only make \"to\" left associated\r\n    let anchor = cm.indexFromPos(cm.getCursor(\"anchor\"));\r\n    let head = cm.indexFromPos(cm.getCursor(\"head\"));\r\n    const switchSel = head < anchor;\r\n    // normalize selection so that anchor < head, switch back later\r\n    if (switchSel) {\r\n      const tmp = head;\r\n      head = anchor;\r\n      anchor = tmp;\r\n    }\r\n    const performChange = () => {\r\n      const delta = event.delta;\r\n      let index = 0;\r\n      for (let i = 0; i < event.delta.length; i++) {\r\n        const d = delta[i];\r\n        if (d.retain) {\r\n          index += d.retain;\r\n        } else if (d.insert) {\r\n          if (index < anchor || (anchor < head && index === anchor)) {\r\n            anchor += d.insert.length;\r\n          }\r\n          if (index < head) {\r\n            head += d.insert.length;\r\n          }\r\n          const pos = cmDoc.posFromIndex(index);\r\n          cmDoc.replaceRange(d.insert, pos, pos, cmOrigin);\r\n          index += d.insert.length;\r\n        } else if (d.delete) {\r\n          if (index < anchor) {\r\n            anchor = math.max(anchor - d.delete, index);\r\n          }\r\n          if (index < head) {\r\n            head = math.max(head - d.delete, index);\r\n          }\r\n          const start = cmDoc.posFromIndex(index);\r\n          const end = cmDoc.posFromIndex(index + d.delete);\r\n          cmDoc.replaceRange(\"\", start, end, cmOrigin);\r\n        }\r\n      }\r\n    };\r\n    // if possible, bundle the changes using cm.operation\r\n    if (cm) {\r\n      cm.operation(performChange);\r\n    } else {\r\n      performChange();\r\n    }\r\n    if (switchSel) {\r\n      const tmp = head;\r\n      head = anchor;\r\n      anchor = tmp;\r\n    }\r\n    cm.setSelection(cm.posFromIndex(anchor), cm.posFromIndex(head), {\r\n      scroll: false,\r\n    });\r\n  });\r\n};\r\n\r\nconst targetObserver = (binding, changes) => {\r\n  binding._mux(() => {\r\n    binding.doc.transact(() => {\r\n      if (changes.length > 1) {\r\n        // If there are several consecutive changes, we can't reliably compute the positions anymore. See y-codemirror#11\r\n        // Instead, we will compute the diff and apply the changes\r\n        const d = diff.simpleDiffString(binding.type.toString(), binding.cmDoc.getValue());\r\n        binding.type.delete(d.index, d.remove);\r\n        binding.type.insert(d.index, d.insert);\r\n      } else {\r\n        const change = changes[0];\r\n        const start = binding.cmDoc.indexFromPos(change.from);\r\n        const delLen = change.removed.map((s) => s.length).reduce(math.add) + change.removed.length - 1;\r\n        if (delLen > 0) {\r\n          binding.type.delete(start, delLen);\r\n        }\r\n        if (change.text.length > 0) {\r\n          binding.type.insert(start, change.text.join(\"\\n\"));\r\n        }\r\n      }\r\n    }, binding);\r\n  });\r\n};\r\n\r\nconst createRemoteCaret = (username, color) => {\r\n  const caret = document.createElement(\"span\");\r\n  caret.classList.add(\"remote-caret\");\r\n  caret.setAttribute(\"style\", `border-color: ${color}`);\r\n  const userDiv = document.createElement(\"div\");\r\n  userDiv.setAttribute(\"style\", `background-color: ${color}`, `color: ${invert(color, true)}`);\r\n  userDiv.insertBefore(document.createTextNode(username), null);\r\n  caret.insertBefore(userDiv, null);\r\n  setTimeout(() => {\r\n    caret.classList.add(\"hide-name\");\r\n  }, 2000);\r\n  return caret;\r\n};\r\n\r\nconst createEmptyLinePlaceholder = (color) => {\r\n  const placeholder = document.createElement(\"span\");\r\n  placeholder.setAttribute(\"style\", \"user-select: none;\");\r\n  const emptyTxt = document.createElement(\"span\");\r\n  emptyTxt.insertBefore(document.createTextNode(\"\"), null);\r\n  const sel = document.createElement(\"span\");\r\n  sel.setAttribute(\"class\", \"y-line-selection\");\r\n  sel.setAttribute(\r\n    \"style\",\r\n    `display: inline-block; position: absolute; left: 4px; right: 4px; top: 0; bottom: 0; background-color: ${color}50; mix-blend-mode: color-dodge;`\r\n  );\r\n  placeholder.insertBefore(sel, null);\r\n  placeholder.insertBefore(emptyTxt, null);\r\n  return placeholder;\r\n};\r\n\r\nconst updateRemoteSelection = (y, cm, type, cursors, clientId, awareness) => {\r\n  // redraw caret and selection for clientId\r\n  const aw = awareness.getStates().get(clientId);\r\n  // destroy current text mark\r\n  const m = cursors.get(clientId);\r\n  if (m !== undefined) {\r\n    if (m.caret) {\r\n      m.caret.clear();\r\n    }\r\n    m.sel.forEach((sel) => sel.clear());\r\n    cursors.delete(clientId);\r\n  }\r\n  if (aw === undefined) {\r\n    return;\r\n  }\r\n  const user = aw.user || {};\r\n  if (user.color == null) {\r\n    user.color = \"#ffa500\";\r\n  }\r\n  if (user.name == null) {\r\n    user.name = `User: ${clientId}`;\r\n  }\r\n  const cursor = aw.cursor;\r\n  if (cursor == null || cursor.anchor == null || cursor.head == null) {\r\n    return;\r\n  }\r\n  const anchor = Y.createAbsolutePositionFromRelativePosition(JSON.parse(cursor.anchor), y);\r\n  const head = Y.createAbsolutePositionFromRelativePosition(JSON.parse(cursor.head), y);\r\n  if (anchor !== null && head !== null && anchor.type === type && head.type === type) {\r\n    const headpos = cm.posFromIndex(head.index);\r\n    const anchorpos = cm.posFromIndex(anchor.index);\r\n    let from, to;\r\n    if (head.index < anchor.index) {\r\n      from = headpos;\r\n      to = anchorpos;\r\n    } else {\r\n      from = anchorpos;\r\n      to = headpos;\r\n    }\r\n    const caretEl = createRemoteCaret(user.name, user.color);\r\n    // if position was \"relatively\" the same, do not show name again and hide instead\r\n    if (\r\n      m &&\r\n      func.equalityFlat(aw.cursor.anchor, m.awCursor.anchor) &&\r\n      func.equalityFlat(aw.cursor.head, m.awCursor.head)\r\n    ) {\r\n      caretEl.classList.add(\"hide-name\");\r\n    }\r\n    const sel = [];\r\n\r\n    if (head.index !== anchor.index) {\r\n      if (from.line !== to.line && from.ch !== 0) {\r\n        // start of selection will only be a simple text-selection\r\n        sel.push(\r\n          cm.markText(from, new CodeMirror.Pos(from.line + 1, 0), {\r\n            css: `background-color: ${user.color}50;`,\r\n            inclusiveRight: false,\r\n            inclusiveLeft: false,\r\n          })\r\n        );\r\n        from = new CodeMirror.Pos(from.line + 1, 0);\r\n      }\r\n      while (from.line !== to.line) {\r\n        // middle of selection is always a whole-line selection. We add a widget at the first position which will fill the background.\r\n        sel.push(\r\n          cm.setBookmark(new CodeMirror.Pos(from.line, 0), {\r\n            widget: createEmptyLinePlaceholder(user.color),\r\n          })\r\n        );\r\n        from = new CodeMirror.Pos(from.line + 1, 0);\r\n      }\r\n      sel.push(\r\n        cm.markText(from, to, {\r\n          css: `background-color: ${user.color}50;`,\r\n          inclusiveRight: false,\r\n          inclusiveLeft: false,\r\n        })\r\n      );\r\n    }\r\n    // only render caret if not the complete last line was selected (in this case headpos.ch === 0)\r\n    const caret =\r\n      sel.length > 0 && to === headpos && headpos.ch === 0\r\n        ? null\r\n        : cm.setBookmark(headpos, { widget: caretEl, insertLeft: true });\r\n    cursors.set(clientId, { caret, sel, awCursor: cursor });\r\n  }\r\n};\r\n\r\nconst codemirrorCursorActivity = (y, cm, type, awareness) => {\r\n  const aw = awareness.getLocalState();\r\n  if (!cm.hasFocus() || aw == null || !cm.display.wrapper.ownerDocument.hasFocus()) {\r\n    return;\r\n  }\r\n  const newAnchor = Y.createRelativePositionFromTypeIndex(type, cm.indexFromPos(cm.getCursor(\"anchor\")));\r\n  const newHead = Y.createRelativePositionFromTypeIndex(type, cm.indexFromPos(cm.getCursor(\"head\")));\r\n  let currentAnchor = null;\r\n  let currentHead = null;\r\n  if (aw.cursor != null) {\r\n    currentAnchor = Y.createRelativePositionFromJSON(JSON.parse(aw.cursor.anchor));\r\n    currentHead = Y.createRelativePositionFromJSON(JSON.parse(aw.cursor.head));\r\n  }\r\n  if (\r\n    aw.cursor == null ||\r\n    !Y.compareRelativePositions(currentAnchor, newAnchor) ||\r\n    !Y.compareRelativePositions(currentHead, newHead)\r\n  ) {\r\n    awareness.setLocalStateField(\"cursor\", {\r\n      anchor: JSON.stringify(newAnchor),\r\n      head: JSON.stringify(newHead),\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * A binding that binds a YText to a CodeMirror editor.\r\n *\r\n * @example\r\n *   const ytext = ydocument.define('codemirror', Y.Text)\r\n *   const editor = new CodeMirror(document.querySelector('#container'), {\r\n *     mode: 'javascript',\r\n *     lineNumbers: true\r\n *   })\r\n *   const binding = new CodemirrorBinding(ytext, editor)\r\n *\r\n */\r\nexport class CodemirrorBinding {\r\n  /**\r\n   * @param {Y.Text} textType\r\n   * @param {import('codemirror').Editor} codeMirror\r\n   * @param {any | null} [awareness]\r\n   * @param {{ yUndoManager?: Y.UndoManager }} [options]\r\n   */\r\n  constructor(textType, codeMirror, awareness = null, { yUndoManager = null } = {}) {\r\n    const doc = textType.doc;\r\n    const cmDoc = codeMirror.getDoc();\r\n    this.doc = doc;\r\n    this.type = textType;\r\n    this.cm = codeMirror;\r\n    this.cmDoc = cmDoc;\r\n    this.awareness = awareness || null;\r\n    this.yUndoManager = yUndoManager;\r\n    this._onStackItemAdded = ({ stackItem, changedParentTypes }) => {\r\n      // only store metadata if this type was affected\r\n      if (changedParentTypes.has(textType) && this._beforeChangeSelection) {\r\n        stackItem.meta.set(this, this._beforeChangeSelection);\r\n      }\r\n    };\r\n    this._onStackItemPopped = ({ stackItem }) => {\r\n      const sel = stackItem.meta.get(this);\r\n      if (sel) {\r\n        const anchor = Y.createAbsolutePositionFromRelativePosition(sel.anchor, doc).index;\r\n        const head = Y.createAbsolutePositionFromRelativePosition(sel.head, doc).index;\r\n        codeMirror.setSelection(codeMirror.posFromIndex(anchor), codeMirror.posFromIndex(head));\r\n        this._beforeChange();\r\n      }\r\n    };\r\n    if (yUndoManager) {\r\n      yUndoManager.trackedOrigins.add(this); // track changes performed by this editor binding\r\n      const editorUndo = (cm) => {\r\n        // Keymaps always start with an active operation.\r\n        // End the current operation so that the event is fired at the correct moment.\r\n        // @todo check cm.curOp in typeListener and endOperation always.\r\n        cm.endOperation();\r\n        yUndoManager.undo();\r\n        cm.startOperation();\r\n      };\r\n      const editorRedo = (cm) => {\r\n        cm.endOperation();\r\n        yUndoManager.redo();\r\n        cm.startOperation();\r\n      };\r\n      codeMirror.addKeyMap({\r\n        // pc\r\n        \"Ctrl-Z\": editorUndo,\r\n        \"Shift-Ctrl-Z\": editorRedo,\r\n        \"Ctrl-Y\": editorRedo,\r\n        // mac\r\n        \"Cmd-Z\": editorUndo,\r\n        \"Shift-Cmd-Z\": editorRedo,\r\n        \"Cmd-Y\": editorRedo,\r\n      });\r\n\r\n      yUndoManager.on(\"stack-item-added\", this._onStackItemAdded);\r\n      yUndoManager.on(\"stack-item-popped\", this._onStackItemPopped);\r\n    }\r\n\r\n    this._mux = createMutex();\r\n    // set initial value\r\n    cmDoc.setValue(textType.toString());\r\n    // observe type and target\r\n    this._typeObserver = (event) => typeObserver(this, event);\r\n    this._targetObserver = (instance, changes) => {\r\n      if (instance.getDoc() === cmDoc) {\r\n        targetObserver(this, changes);\r\n      }\r\n    };\r\n    this._cursors = new Map();\r\n    this._changedCursors = new Set();\r\n    this._debounceCursorEvent = eventloop.createDebouncer(10);\r\n    this._awarenessListener = (event) => {\r\n      if (codeMirror.getDoc() !== cmDoc) {\r\n        return;\r\n      }\r\n      const f = (clientId) => {\r\n        if (clientId !== doc.clientID) {\r\n          this._changedCursors.add(clientId);\r\n        }\r\n      };\r\n      event.added.forEach(f);\r\n      event.removed.forEach(f);\r\n      event.updated.forEach(f);\r\n      if (this._changedCursors.size > 0) {\r\n        this._debounceCursorEvent(() => {\r\n          this._changedCursors.forEach((clientId) => {\r\n            updateRemoteSelection(doc, codeMirror, textType, this._cursors, clientId, awareness);\r\n          });\r\n          this._changedCursors.clear();\r\n        });\r\n      }\r\n    };\r\n    this._cursorListener = () => {\r\n      if (codeMirror.getDoc() === cmDoc) {\r\n        setTimeout(() => {\r\n          codemirrorCursorActivity(doc, codeMirror, textType, awareness);\r\n        }, 0);\r\n      }\r\n    };\r\n    this._blurListeer = () => awareness.setLocalStateField(\"cursor\", null);\r\n\r\n    textType.observe(this._typeObserver);\r\n    // @ts-ignore\r\n    codeMirror.on(\"changes\", this._targetObserver);\r\n    /**\r\n     * @type {{ anchor: Y.RelativePosition, head: Y.RelativePosition } | null}\r\n     */\r\n    this._beforeChangeSelection = null;\r\n    this._beforeChange = () => {\r\n      // update the the beforeChangeSelection that is stored befor each change to the editor (except when applying remote changes)\r\n      this._mux(() => {\r\n        // store the selection before the change is applied so we can restore it with the undo manager.\r\n        const anchor = Y.createRelativePositionFromTypeIndex(\r\n          textType,\r\n          codeMirror.indexFromPos(codeMirror.getCursor(\"anchor\"))\r\n        );\r\n        const head = Y.createRelativePositionFromTypeIndex(\r\n          textType,\r\n          codeMirror.indexFromPos(codeMirror.getCursor(\"head\"))\r\n        );\r\n        this._beforeChangeSelection = { anchor, head };\r\n      });\r\n    };\r\n    codeMirror.on(\"beforeChange\", this._beforeChange);\r\n    if (awareness) {\r\n      codeMirror.on(\"swapDoc\", this._blurListeer);\r\n      awareness.on(\"change\", this._awarenessListener);\r\n      // @ts-ignore\r\n      codeMirror.on(\"cursorActivity\", this._cursorListener);\r\n      codeMirror.on(\"blur\", this._blurListeer);\r\n      codeMirror.on(\"focus\", this._cursorListener);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.type.unobserve(this._typeObserver);\r\n    this.cm.off(\"swapDoc\", this._blurListeer);\r\n    // @ts-ignore\r\n    this.cm.off(\"changes\", this._targetObserver);\r\n    this.cm.off(\"beforeChange\", this._beforeChange);\r\n    // @ts-ignore\r\n    this.cm.off(\"cursorActivity\", this._cursorListener);\r\n    this.cm.off(\"focus\", this._cursorListener);\r\n    this.cm.off(\"blur\", this._blurListeer);\r\n    if (this.awareness) {\r\n      this.awareness.off(\"change\", this._awarenessListener);\r\n    }\r\n    if (this.yUndoManager) {\r\n      this.yUndoManager.off(\"stack-item-added\", this._onStackItemAdded);\r\n      this.yUndoManager.off(\"stack-item-popped\", this._onStackItemPopped);\r\n      this.yUndoManager.trackedOrigins.delete(this);\r\n    }\r\n    this.type = null;\r\n    this.cm = null;\r\n    this.cmDoc = null;\r\n  }\r\n}\r\n\r\nexport const CodeMirrorBinding = CodemirrorBinding;\r\n","const DEFAULT = [\r\n  \"#F44336\", // red\r\n  \"#388E3C\", // green\r\n  \"#3F51B5\", // indigo\r\n  \"#FF9800\", // orange\r\n  \"#9C27B0\", // purple\r\n  \"#795548\", // brown\r\n  \"#03A9F4\", // light blue\r\n  \"#627a86\", // blue grey\r\n  \"#620E00\", // maroon\r\n  \"#f05fae\", // bright purple\r\n  \"#b49666\", // light brown\r\n  \"#257275\", // blue green\r\n  \"#7f5075\", // medium purple\r\n  \"#2a7287\", // slate blue\r\n  \"#5973d6\", // royal blue\r\n  \"#e31a1c\", // red\r\n  \"#1f78b4\", // dark blue\r\n  \"#33a02c\", // dark green\r\n  \"#6a3d9a\", // dark purple\r\n];\r\n\r\nconst DARK_12 = [\r\n  \"#fb9a99\", // pink\r\n  \"#ffff99\", // yellow\r\n  \"#778899\", // slate gray\r\n  \"#cab2d6\", // light purple\r\n  \"#b15928\", // brown\r\n];\r\n\r\nconst LIGHT_12 = [\r\n  \"#fb8072\", // red\r\n  \"#80b1d3\", // light blue\r\n  \"#b3de69\", // green\r\n  \"#fdb462\", // orange\r\n  \"#fccde5\", // light purple\r\n  \"#8dd3c7\", // Aqua\r\n  \"#ffffb3\", // light yellow\r\n  \"#bebada\", // purple\r\n  \"#ccebc5\", // light green\r\n  \"#ffed6f\", // dark yellow\r\n  \"#778899\", // gray\r\n  \"#bc80bd\", // dark purple\r\n];\r\n\r\nconst palettes = {\r\n  DEFAULT: DEFAULT,\r\n  LIGHT_12: LIGHT_12,\r\n  DARK_12: DARK_12,\r\n};\r\n\r\ntype paletteOptions = \"DEFAULT\" | \"LIGHT_12\" | \"DARK_12\";\r\nexport const getRandomColor = (color: paletteOptions) => {\r\n  const colorScheme: string[] = palettes[color];\r\n  return colorScheme[Math.floor(Math.random() * colorScheme.length)];\r\n};\r\n","import React, { useEffect, useContext, useCallback } from \"react\";\r\nimport { CDRT_SERVER, SERVER_URL } from \"config.keys\";\r\nimport { CodeMirrorBinding } from \"./CodeMirrorAdapter\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { CodeExecutionInfoContext } from \"service/CodeExecutionInfo\";\r\nimport { socket } from \"service/socket\";\r\nimport axios from \"axios\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\nimport \"./CodeMirrorImports.ts\";\r\nimport { GuestNameContextTypes, SettingsContextType, UserContextTypes, CodeExecutionInfoType } from \"types\";\r\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport * as Y from \"yjs\";\r\nimport { WebsocketProvider } from \"y-websocket\";\r\nimport { getRandomColor } from \"service/getRandomColor\";\r\ninterface AppProps {\r\n  editorInstance: any;\r\n  setEditorInstance: React.Dispatch<any>;\r\n}\r\n\r\nconst CodeMirrorEditor: React.FC<AppProps> = ({ editorInstance, setEditorInstance }) => {\r\n  const { setValue, setLoading, inputText, setOutputData } = useContext(\r\n    CodeExecutionInfoContext\r\n  ) as CodeExecutionInfoType;\r\n\r\n  const handleEditorDidMount = (editor: any) => {\r\n    //@ts-ignore\r\n    window.editor = editor;\r\n    setEditorInstance(editor);\r\n  };\r\n\r\n  const { roomID } = useRoomID();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { language, fontSize, theme, keybinds } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n\r\n  // if login then user that else guest name else randome name :)))\r\n  const username = user?.name ? user.name : guestName;\r\n\r\n  useEffect(() => {\r\n    if (editorInstance != null) {\r\n      const ydoc: Y.Doc = new Y.Doc();\r\n      const yText = ydoc.getText(\"codemirror\");\r\n      const yUndoManager = new Y.UndoManager(yText);\r\n      let provider;\r\n      try {\r\n        provider = new WebsocketProvider(CDRT_SERVER, roomID, ydoc);\r\n      } catch (err) {\r\n        enqueueSnackbar(\"Could not connect to the server\", {\r\n          variant: \"warning\",\r\n        });\r\n        throw Error(\"could not connect to the server\");\r\n      }\r\n\r\n      const awareness = provider?.awareness;\r\n      const val = getRandomColor(\"DEFAULT\");\r\n      awareness?.setLocalStateField(\"user\", {\r\n        // Define a print name that should be displayed\r\n        name: username,\r\n        // Define a color that should be associated to the user:\r\n        color: val, // should be a hex color:\r\n      });\r\n\r\n      const getBinding = new CodeMirrorBinding(yText, editorInstance, awareness, {\r\n        yUndoManager,\r\n      });\r\n    }\r\n  }, [editorInstance]);\r\n\r\n  const submitProblem = useCallback(async () => {\r\n    setLoading(true);\r\n    setValue(1);\r\n    const response = await axios({\r\n      method: \"POST\",\r\n      url: `${SERVER_URL}/api/execute`,\r\n      data: {\r\n        script: editorInstance.getValue(),\r\n        language: language,\r\n        stdin: inputText,\r\n      },\r\n      responseType: \"json\",\r\n    });\r\n    socket.emit(\"code-executed\", { data: response.data, roomID: roomID });\r\n    enqueueSnackbar(response.data.memory === null ? \"Error in code-execution\" : \"Code ran succesfully\", {\r\n      variant: response.data.memory === null ? \"error\" : \"success\",\r\n    });\r\n    setOutputData(response.data);\r\n    setLoading(false);\r\n  }, [SERVER_URL, editorInstance, language, inputText, roomID]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"left\", width: \"100%\", fontSize: `${fontSize}px` }}>\r\n      <CodeMirror\r\n        autoScroll\r\n        options={{\r\n          mode: language,\r\n          theme: theme,\r\n          keyMap: keybinds,\r\n          lineWrapping: true,\r\n          smartIndent: true,\r\n          lineNumbers: true,\r\n          foldGutter: true,\r\n          tabSize: 2,\r\n          gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n          autoCloseTags: true,\r\n          matchBrackets: true,\r\n          autoCloseBrackets: true,\r\n          extraKeys: {\r\n            \"Ctrl-Space\": \"autocomplete\",\r\n            \"Ctrl-'\": submitProblem,\r\n          },\r\n        }}\r\n        editorDidMount={(editor) => {\r\n          handleEditorDidMount(editor);\r\n          editor.setSize(\"100%\", \"100%\");\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeMirrorEditor;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Select, withStyles } from \"@material-ui/core\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\nimport { socket } from \"service/socket\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\n\r\nconst Settings = () => {\r\n  const {\r\n    language,\r\n    fontSize,\r\n    theme,\r\n    keybinds,\r\n    handleFontSizeChange,\r\n    handleLanguageChange,\r\n    handleThemeChange,\r\n    handleKeybindsChange,\r\n  } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { roomID: id } = useRoomID();\r\n  const CssFormControl = withStyles({\r\n    root: {\r\n      width: \"70%\",\r\n      margin: \"1rem\",\r\n      \"& svg\": {\r\n        fill: \"#3f51b5\",\r\n      },\r\n\r\n      \"&:before\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:after\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n\r\n      \"& .MuiSelect-root\": {\r\n        color: \"white\",\r\n      },\r\n      \"&.MuiPaper-root\": {\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n      },\r\n      \"& > ul\": {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n  })(FormControl);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-programming-language\", (inputData: string) => {\r\n      handleLanguageChange(inputData, id, false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem 0rem\" }}>\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel id=\"language-select\" style={{ color: \"white\" }}>\r\n          Language\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"langauge-select\"\r\n          value={language}\r\n          onChange={(e) => handleLanguageChange(e.target.value as string, id, true)}\r\n        >\r\n          <MenuItem value={\"text/x-c++src\"}>C++</MenuItem>\r\n          <MenuItem value={\"text/x-java\"}>Java</MenuItem>\r\n          <MenuItem value={\"text/x-python\"}>Python</MenuItem>\r\n          <MenuItem value={\"text/javascript\"}>JavaScript</MenuItem>\r\n          <MenuItem value={\"text/x-rustsrc\"}>Rust</MenuItem>\r\n          <MenuItem value={\"text/x-go\"}>GoLang</MenuItem>\r\n          <MenuItem value={\"text/x-php\"}>PHP</MenuItem>\r\n          <MenuItem value={\"text/x-ruby\"}>Ruby</MenuItem>\r\n          <MenuItem value={\"text/x-haskell\"}>Haskell</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>FontSize</InputLabel>\r\n        <Select value={fontSize} onChange={(e) => handleFontSizeChange(e.target.value as number)}>\r\n          <MenuItem value={10}>10px</MenuItem>\r\n          <MenuItem value={12}>12px</MenuItem>\r\n          <MenuItem value={14}>14px</MenuItem>\r\n          <MenuItem value={16}>16px</MenuItem>\r\n          <MenuItem value={18}>18px</MenuItem>\r\n          <MenuItem value={20}>20px</MenuItem>\r\n          <MenuItem value={22}>22px</MenuItem>\r\n          <MenuItem value={24}>24px</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>Theme</InputLabel>\r\n        <Select value={theme} onChange={(e) => handleThemeChange(e.target.value as string)}>\r\n          <MenuItem value={\"monokai\"}>Monokai</MenuItem>\r\n          <MenuItem value={\"material-darker\"}>Dark Theme</MenuItem>\r\n          <MenuItem value={\"default\"}>Light Theme</MenuItem>\r\n          <MenuItem value={\"neat\"}>Light Theme Alternate</MenuItem>\r\n          <MenuItem value={\"eclipse\"}>Eclipse (Light)</MenuItem>\r\n          <MenuItem value={\"dracula\"}>Dracula</MenuItem>\r\n          <MenuItem value={\"3024-night\"}>Brogrammer</MenuItem>\r\n          <MenuItem value={\"material-palenight\"}>Palenight</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>Keybinds</InputLabel>\r\n        <Select value={keybinds} onChange={(e) => handleKeybindsChange(e.target.value as string)}>\r\n          <MenuItem value={\"sublime\"}>Default</MenuItem>\r\n          <MenuItem value={\"vim\"}>Vim</MenuItem>\r\n          <MenuItem value={\"emacs\"}>Emacs</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","//@ts-nocheck\r\n/* eslint-disable no-use-before-define */\r\n// please dont expect me to re-write css for this mess X-X\r\nimport React from \"react\";\r\nimport { useTheme, fade, makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport Autocomplete, { AutocompleteCloseReason } from \"@material-ui/lab/Autocomplete\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { LabelType } from \"types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"1rem\",\r\n      flexGrow: 1,\r\n      fontSize: 13,\r\n    },\r\n    button: {\r\n      fontSize: 13,\r\n      width: \"100%\",\r\n      textAlign: \"left\",\r\n      paddingBottom: 8,\r\n      color: \"#586069\",\r\n      fontWeight: 600,\r\n      \"&:hover,&:focus\": {\r\n        color: \"#0366d6\",\r\n      },\r\n      \"& span\": {\r\n        width: \"100%\",\r\n      },\r\n      \"& svg\": {\r\n        width: 16,\r\n        height: 16,\r\n      },\r\n    },\r\n    tag: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 3,\r\n      height: 20,\r\n      padding: \".15em 4px\",\r\n      fontWeight: 600,\r\n      lineHeight: \"15px\",\r\n      borderRadius: 2,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    },\r\n    popper: {\r\n      border: \"1px solid rgba(27,31,35,.15)\",\r\n      boxShadow: \"0 3px 12px rgba(27,31,35,.15)\",\r\n      borderRadius: 3,\r\n      width: 300,\r\n      zIndex: 5,\r\n      fontSize: 13,\r\n      color: \"#d8d5d0\",\r\n      backgroundColor: \"#272a2b\",\r\n    },\r\n    header: {\r\n      borderBottom: \"1px solid #585a5c\",\r\n      padding: \"8px 10px\",\r\n      fontWeight: 600,\r\n    },\r\n    inputBase: {\r\n      padding: 10,\r\n      width: \"100%\",\r\n      color: \"white\",\r\n      borderBottom: \"1px solid #d8d5d0\",\r\n      \"& input\": {\r\n        borderRadius: 4,\r\n        backgroundColor: \"#1e1f1f\",\r\n        padding: 8,\r\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n        border: \"1px solid #585a5c\",\r\n        fontSize: 14,\r\n        \"&:focus\": {\r\n          boxShadow: `${fade(\"#0055bb\", 0.25)} 0 0 0 0.2rem`,\r\n          borderColor: \"#0055bb\",\r\n        },\r\n      },\r\n    },\r\n    paper: {\r\n      boxShadow: \"none\",\r\n      margin: 0,\r\n      color: \"#d8d5d0\",\r\n      background: \"#191c1d\",\r\n      fontSize: 13,\r\n      \"& .MuiAutocomplete-noOptions\": {\r\n        color: \"#edeceb !important\",\r\n      },\r\n    },\r\n    option: {\r\n      minHeight: \"auto\",\r\n      alignItems: \"flex-start\",\r\n      padding: 8,\r\n      '&[aria-selected=\"true\"]': {\r\n        backgroundColor: \"#424242\",\r\n      },\r\n      '&[data-focus=\"true\"]': {\r\n        backgroundColor: \"#37474f\",\r\n      },\r\n    },\r\n    popperDisablePortal: {\r\n      position: \"relative\",\r\n    },\r\n    iconSelected: {\r\n      width: 17,\r\n      height: 17,\r\n      marginRight: 5,\r\n      marginLeft: -2,\r\n    },\r\n    color: {\r\n      width: 14,\r\n      height: 14,\r\n      flexShrink: 0,\r\n      borderRadius: 3,\r\n      marginRight: 8,\r\n      marginTop: 2,\r\n    },\r\n    text: {\r\n      flexGrow: 1,\r\n    },\r\n    close: {\r\n      opacity: 0.6,\r\n      width: 18,\r\n      height: 18,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AutoCompleteLabel({ value, setValue, labels, type }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  // default values we are adding 2 okays\r\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setPendingValue(value);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\r\n    if (reason === \"toggleInput\") {\r\n      return;\r\n    }\r\n    setValue(pendingValue);\r\n    if (anchorEl) {\r\n      anchorEl.focus();\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"autocomplete-label\" : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <ButtonBase disableRipple className={classes.button} aria-describedby={id} onClick={handleClick}>\r\n          <span>{type}</span>\r\n          <SettingsIcon />\r\n        </ButtonBase>\r\n        {value.map((label) => (\r\n          <div\r\n            key={label.name}\r\n            className={classes.tag}\r\n            style={{\r\n              backgroundColor: label.color,\r\n              color: theme.palette.getContrastText(label.color),\r\n            }}\r\n          >\r\n            {label.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\" className={classes.popper}>\r\n        <div className={classes.header}>Selects everything if no options is selected</div>\r\n        <Autocomplete\r\n          open\r\n          onClose={handleClose}\r\n          multiple\r\n          classes={{\r\n            paper: classes.paper,\r\n            option: classes.option,\r\n            popperDisablePortal: classes.popperDisablePortal,\r\n          }}\r\n          value={pendingValue}\r\n          onChange={(event, newValue) => {\r\n            setPendingValue(newValue);\r\n          }}\r\n          disableCloseOnSelect\r\n          disablePortal\r\n          renderTags={() => null}\r\n          noOptionsText=\"No Match Found\"\r\n          renderOption={(option, { selected }) => (\r\n            <React.Fragment>\r\n              <DoneIcon\r\n                className={classes.iconSelected}\r\n                style={{ visibility: selected ? \"visible\" : \"hidden\" }}\r\n              />\r\n              <span className={classes.color} style={{ backgroundColor: option.color }} />\r\n              <div className={classes.text}>\r\n                {option.name}\r\n                <br />\r\n                {option.description}\r\n              </div>\r\n              <CloseIcon className={classes.close} style={{ visibility: selected ? \"visible\" : \"hidden\" }} />\r\n            </React.Fragment>\r\n          )}\r\n          options={[...labels].sort((a, b) => {\r\n            // Display the selected labels first.\r\n            let ai = value.indexOf(a);\r\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\r\n            let bi = value.indexOf(b);\r\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\r\n            return ai - bi;\r\n          })}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <InputBase\r\n              ref={params.InputProps.ref}\r\n              inputProps={params.inputProps}\r\n              autoFocus\r\n              className={classes.inputBase}\r\n            />\r\n          )}\r\n        />\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { createRef, useEffect, useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport styles from \"./ProblemList.module.css\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { QuestionListResponse, TabsContextTypes } from \"types\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\n\r\nconst getColor = (diff: string) => {\r\n  if (diff === \"easy\") return \"#1faa00\";\r\n  else if (diff === \"medium\") return \"#fbc02d\";\r\n  else return \"#dd2c00\";\r\n};\r\n\r\nconst CssPagination = withStyles({\r\n  root: {\r\n    // backgroundColor: \"#3e3e42\",\r\n\r\n    color: \"white\",\r\n    \"& svg\": {\r\n      fill: \"white\",\r\n    },\r\n    \"& button\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n})(Pagination);\r\n\r\nconst CssListItem = withStyles({\r\n  root: {\r\n    // backgroundColor: \"#3e3e42\",\r\n    transition: \"background 3s ease in\",\r\n    padding: \"0.5rem !important\",\r\n    \"align-items\": \"flex-start !important\",\r\n    \"&:hover\": {\r\n      background: \"rgba(200, 200, 200, 0.1)\",\r\n      \"border-radius\": \"10px\",\r\n    },\r\n  },\r\n})(ListItem);\r\n\r\nconst PaginationComponent = ({ rows }: { rows: QuestionListResponse[] }) => {\r\n  const { filterResponseData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = React.useState(1);\r\n  const navRef = createRef<HTMLElement>();\r\n  const { roomID: id } = useRoomID();\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    const height = Math.floor(navRef.current?.clientHeight / 38);\r\n    setRowsPerPage(height);\r\n  }, []);\r\n\r\n  const getQuestion = (question_id: number) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/get-problem`,\r\n      data: { question_id: question_id },\r\n      responseType: \"json\",\r\n    }).then((response) => {\r\n      filterResponseData(response.data, id);\r\n    });\r\n  };\r\n\r\n  const count = Math.floor(\r\n    rows.length % rowsPerPage === 0 ? rows.length / rowsPerPage : rows.length / rowsPerPage + 1\r\n  );\r\n  return (\r\n    <>\r\n      <Grid item className={styles[\"pagination-container\"]}>\r\n        <List component=\"nav\" aria-label=\"contacts\" className={styles[\"list-container\"]} ref={navRef}>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((el: QuestionListResponse, index) => {\r\n            return (\r\n              <CssListItem\r\n                key={index}\r\n                button\r\n                className={styles[\"list-item\"]}\r\n                onClick={() => getQuestion(el.question_id)}\r\n              >\r\n                <div style={{ flexGrow: 1 }}>{`${el.question_id}. ${el.question_title}`}</div>\r\n                <div style={{ color: getColor(el.difficulty), paddingLeft: \"8px\", fontWeight: \"bold\" }}>\r\n                  {el.difficulty}\r\n                </div>\r\n              </CssListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </Grid>\r\n      <Grid item className={styles[\"pagination-group\"]}>\r\n        <CssPagination\r\n          shape=\"rounded\"\r\n          count={count}\r\n          page={page}\r\n          onChange={(event, val) => setPage(val)}\r\n          color=\"primary\"\r\n          className={styles[\"pagination-element\"]}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport AutoCompleteLabel from \"./Autocomplete\";\r\nimport { Button, ButtonGroup, Divider, IconButton, TextField, withStyles } from \"@material-ui/core\";\r\nimport ArrowForwardRoundedIcon from \"@material-ui/icons/ArrowForwardRounded\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { allCompanies, allDifficulties, allTags } from \"./data\";\r\nimport ListPagination from \"./ListPagination\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styles from \"./ProblemList.module.css\";\r\nimport { LabelType, QuestionListResponse, ScrappedDataType, TabsContextTypes } from \"types\";\r\nimport { tagsData, companiesData, difficultyData } from \"./data\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport Url from \"url-parse\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\n\r\ninterface AppProps {\r\n  companies: LabelType[];\r\n  tags: LabelType[];\r\n  difficulty: LabelType[];\r\n  url: string;\r\n  setCompanies: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setTags: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setDifficulty: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setUrl: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: \"12px\",\r\n      padding: \"0px\",\r\n      outline: \"none\",\r\n      color: \"#edf2fb\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid #0055bb \",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst CssButton = withStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      background: \"rgba(200, 200, 200, 0.1)\",\r\n    },\r\n  },\r\n})(Button);\r\n\r\nconst ProblemList: React.FC<AppProps> = ({\r\n  companies,\r\n  difficulty,\r\n  tags,\r\n  url,\r\n  setCompanies,\r\n  setDifficulty,\r\n  setTags,\r\n  setUrl,\r\n}) => {\r\n  const [response, setResponse] = useState<QuestionListResponse[]>([]);\r\n  const [errorText, setErrorText] = useState({ error: false, comment: \"\" });\r\n  const { roomID } = useRoomID();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(`${SERVER_URL}/api/fetch-problems`, prepareData())\r\n      .then((res: AxiosResponse<QuestionListResponse[]>) => setResponse(res.data));\r\n  }, []);\r\n\r\n  const { filterResponseData, handleScrappedData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  const NextButton = () => {\r\n    const getQuestionData = async () => {\r\n      const { hostname } = new Url(url);\r\n      if (hostname !== \"codeforces.com\" && hostname !== \"atcoder.jp\") {\r\n        setErrorText({\r\n          error: true,\r\n          comment: \"Domain should either be codeforces or atcoder\",\r\n        });\r\n      } else {\r\n        const { data }: AxiosResponse<{ error: boolean; htmlString: string }> = await axios({\r\n          method: \"POST\",\r\n          url: `${SERVER_URL}/api/fetch-contest-problem`,\r\n          responseType: \"json\",\r\n          data: {\r\n            url: url,\r\n            hostname: hostname,\r\n          },\r\n        });\r\n        const { error, htmlString } = data;\r\n\r\n        if (error) {\r\n          setErrorText({\r\n            error: true,\r\n            comment: \"Unable To fetch question\",\r\n          });\r\n        } else {\r\n          handleScrappedData(\r\n            {\r\n              htmlString,\r\n              hostname,\r\n            },\r\n            roomID,\r\n            true\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Button\r\n        className={styles[\"adornment-button\"]}\r\n        style={{ color: \"#0055bb\" }}\r\n        onClick={async () => {\r\n          await getQuestionData();\r\n        }}\r\n      >\r\n        <ArrowForwardRoundedIcon />\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const prepareData = () => {\r\n    const c = companies.map((el) => el.name);\r\n    const d = difficulty.map((el) => el.name);\r\n    const t = tags.map((el) => el.name);\r\n    return {\r\n      companies: c.length ? c : allCompanies,\r\n      difficulty: d.length ? d : allDifficulties,\r\n      tags: t.length ? t : allTags,\r\n    };\r\n  };\r\n\r\n  const fetchProblems = async () => {\r\n    const response: AxiosResponse<QuestionListResponse[]> = await axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/fetch-problems`,\r\n      data: prepareData(),\r\n      responseType: \"json\",\r\n    });\r\n    setResponse(response.data);\r\n  };\r\n  const getRandomQuestion = () => {\r\n    const randomID = Math.floor(Math.random() * 169);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/get-problem`,\r\n      data: { question_id: randomID },\r\n      responseType: \"json\",\r\n    }).then((response) => filterResponseData(response.data, roomID));\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container className={styles.root}>\r\n        <Grid item className={styles[\"request-field\"]}>\r\n          <label>Enter Codeforces Or Atcoder Question URL:</label>\r\n          <CssTextField\r\n            onChange={(e) => {\r\n              setUrl(e.target.value as string);\r\n            }}\r\n            value={url}\r\n            error={errorText.error}\r\n            helperText={errorText.comment}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: <NextButton />,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item className={styles.autocomplete}>\r\n          <AutoCompleteLabel\r\n            value={companies}\r\n            setValue={setCompanies}\r\n            labels={companiesData}\r\n            type=\"Companies\"\r\n          />\r\n          <AutoCompleteLabel value={tags} setValue={setTags} labels={tagsData} type=\"Tags\" />\r\n          <AutoCompleteLabel\r\n            value={difficulty}\r\n            setValue={setDifficulty}\r\n            labels={difficultyData}\r\n            type=\"Difficulty\"\r\n          />\r\n        </Grid>\r\n        <Grid item className={styles[\"btn-group\"]}>\r\n          <ButtonGroup color=\"inherit\">\r\n            <CssButton onClick={getRandomQuestion}>Random Problem</CssButton>\r\n            <CssButton\r\n              onClick={async () => {\r\n                await fetchProblems();\r\n              }}\r\n            >\r\n              Filter Problems\r\n            </CssButton>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Divider className={styles.divider} />\r\n        <Grid item container direction=\"column\" className={styles.pagination}>\r\n          <ListPagination rows={response} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProblemList;\r\n","import React from \"react\";\nimport parse from \"html-react-parser\";\nimport \"./ProblemPage.css\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Box, Divider, Grid } from \"@material-ui/core\";\nimport { QuestionDataSS } from \"types\";\n\nconst LeetCode = ({ questionData }: { questionData: QuestionDataSS }) => {\n  const { question_data, companies, tags } = questionData;\n\n  return (\n    <div>\n      <Box className=\"leetcode\">\n        <h1>{question_data.question_title}</h1>\n        {parse(question_data.question)}\n        <Divider />\n        <Grid container>\n          <Grid item className=\"container-item\">\n            <div className={\"chips\"}>\n              {tags.map((tag, index) => (\n                <Chip label={tag} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={\"container-item\"}>\n            <div className=\"chips\">\n              {companies.map((company, index) => (\n                <Chip label={company} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={\"container-item\"}>\n            <a href={`${question_data.problem_url}/discuss`} target=\"_blank\" rel=\" \">\n              <h4>Solution</h4>\n            </a>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default LeetCode;\n","//@ts-nocheck\r\nimport React, { useRef, useState, createRef } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport \"./ProblemPage.css\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Divider, Grid } from \"@material-ui/core\";\r\nimport { ScrappedDataType } from \"types\";\r\nimport renderMathInElement from \"katex/dist/contrib/auto-render\";\r\nimport \"katex/dist/katex.min.css\";\r\n\r\nconst LeetCode = ({ scrappedData }: { scrappedData: ScrappedDataType }) => {\r\n  const { hostname, htmlString } = scrappedData;\r\n  const MathRef = createRef<HTMLElement>();\r\n\r\n  React.useEffect(() => {\r\n    if (MathRef) {\r\n      renderMathInElement(MathRef.current!, {\r\n        delimiters: [\r\n          { left: \"$$$\", right: \"$$$\", display: true },\r\n          { left: \"\\\\[\", right: \"\\\\]\", display: true },\r\n          { left: \"%%\", right: \"%%\", display: true },\r\n          { left: \"\\\\(\", right: \"\\\\)\", display: false },\r\n        ],\r\n      });\r\n    }\r\n  }, [MathRef]);\r\n\r\n  return (\r\n    <div>\r\n      {hostname === \"codeforces.com\" ? (\r\n        <div className={\"codeforces\"} ref={MathRef}>\r\n          {parse(htmlString)}\r\n        </div>\r\n      ) : (\r\n        <div className={\"atcoder\"} ref={MathRef}>\r\n          {parse(htmlString)}\r\n        </div>\r\n      )}\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\nexport default LeetCode;\r\n<div></div>;\r\n","import React, { useContext } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Box, Divider, Grid } from \"@material-ui/core\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { TabsContextTypes } from \"types\";\r\nimport LeetCode from \"./LeetCode\";\r\nimport CodeForces from \"./CodeForces\";\r\n\r\nconst ProblemPage = () => {\r\n  const { questionData, showScrapped, scrappedData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  return (\r\n    <div style={{ margin: \"1rem\" }}>\r\n      {showScrapped ? <CodeForces scrappedData={scrappedData} /> : <LeetCode questionData={questionData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProblemPage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"./ReactTabs.css\";\r\nimport Settings from \"./SettingsPage\";\r\nimport ProblemList from \"./ProblemList/ProblemList\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { LabelType, TabsContextTypes, QuestionDataSS, ScrappedDataType } from \"types\";\r\nimport ProblemPage from \"./ProblemPage/ProblemPage\";\r\nimport { tagsData, companiesData } from \"./ProblemList/data\";\r\nimport { socket } from \"service/socket\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\n\r\nexport default function TabsComponent() {\r\n  const { roomID } = useRoomID();\r\n  const { tabIndex, onTabsChange, onQuestionDataChange, handleScrappedData } = useContext(\r\n    TabsContext\r\n  ) as TabsContextTypes;\r\n  const [companies, setCompanies] = useState<LabelType[]>([companiesData[0]]);\r\n  const [tags, setTags] = useState<LabelType[]>([tagsData[0]]);\r\n  const [difficulty, setDifficulty] = useState<LabelType[]>([]);\r\n  const [url, setUrl] = useState<string>(\"https://codeforces.com/problemset/problem/1217/B\");\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-selected-question\", (value: QuestionDataSS) => {\r\n      onQuestionDataChange(value);\r\n    });\r\n\r\n    socket.on(\"emit-codeforces\", (value: ScrappedDataType) => {\r\n      handleScrappedData(value, roomID, false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => onTabsChange(index)} className=\"tabs_root\">\r\n      <TabList style={{ background: \"#252526\" }}>\r\n        <Tab>Problem</Tab>\r\n        <Tab>Problem List</Tab>\r\n        <Tab>Settings</Tab>\r\n      </TabList>\r\n      <TabPanel>\r\n        <ProblemPage />\r\n      </TabPanel>\r\n      <TabPanel style={{ flexGrow: 1 }}>\r\n        <ProblemList\r\n          companies={companies}\r\n          tags={tags}\r\n          difficulty={difficulty}\r\n          url={url}\r\n          setCompanies={setCompanies}\r\n          setTags={setTags}\r\n          setDifficulty={setDifficulty}\r\n          setUrl={setUrl}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <Settings />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n","import React, { useState, createRef, useRef, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InputOutputFile from \"component/InputOutputFile/InputOutputFile\";\r\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\r\nimport \"react-reflex/styles.css\";\r\nimport style from \"./Room.module.css\";\r\nimport { socket } from \"service/socket\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ChatApp from \"component/TextChat\";\r\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRoomID } from \"service/RoomIdContext\";\r\nimport CodeMirror from \"component/Editor/CodeMirrorEditor\";\r\nimport clsx from \"clsx\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { UserContextTypes, GuestNameContextTypes, UserInfoSS } from \"types\";\r\nimport TabsPanel from \"component/QuestionsPane/Tabs\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Dashboard = () => {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n  const CodeMirrorRef = useRef<any>();\r\n  const TextAreaRef = createRef<HTMLDivElement>();\r\n  const [rows, setRows] = useState(5);\r\n  const [sid, setSid] = useState(\"\");\r\n  const [goBack, setGoBack] = useState(false);\r\n  const [partnerUser, setPartnerUser] = useState<UserInfoSS>();\r\n  const [editorInstance, setEditorInstance] = useState<any>(null);\r\n  const { id } = useParams<Record<string, string>>();\r\n  const { setRoomID } = useRoomID();\r\n\r\n  useEffect(() => {\r\n    setRoomID(id);\r\n  }, [id]);\r\n\r\n  const prepareData = (): UserInfoSS => {\r\n    return {\r\n      name: user?.name ? user.name : guestName,\r\n      image_link: user?.image_link ? user.image_link : \"\",\r\n      roomID: id,\r\n    };\r\n  };\r\n\r\n  const action = (key: any) => (\r\n    <>\r\n      <Button\r\n        style={{ color: \"white\" }}\r\n        onClick={() => {\r\n          localStorage.setItem(\"shouldShow\", JSON.stringify(false));\r\n          closeSnackbar(key);\r\n        }}\r\n      >\r\n        Don't Show Again\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const displayNotification = (data: UserInfoSS, enter: boolean) => {\r\n    const text = enter ? \"joined the room\" : \"left the room\";\r\n    const variantStyle = enter ? \"success\" : \"error\";\r\n    enqueueSnackbar(`${data.name} ${text}`, {\r\n      preventDuplicate: true,\r\n      variant: variantStyle,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const retrivedKeyString = localStorage.getItem(\"shouldShow\");\r\n    const retrivedKey = retrivedKeyString ? JSON.parse(retrivedKeyString) : true;\r\n\r\n    if (retrivedKey) {\r\n      enqueueSnackbar(\"Open the same link in another tab to see realtime collabotation\", {\r\n        action,\r\n      });\r\n    }\r\n\r\n    socket.emit(\"join-room\", prepareData());\r\n\r\n    socket.on(\"store-sid\", (id: string) => setSid(id));\r\n    socket.on(\"new-user-joined\", (data: UserInfoSS) => {\r\n      setPartnerUser(data);\r\n      displayNotification(data, true);\r\n    });\r\n\r\n    socket.on(\"room-full\", () => {\r\n      setGoBack(true);\r\n    });\r\n\r\n    socket.on(\"user-left\", (data: UserInfoSS) => {\r\n      displayNotification(data, false);\r\n    });\r\n  }, []);\r\n\r\n  const resetEditorLayout = () => {\r\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\r\n    const adjustedRows = height > 340 ? height / 27 : height / 39;\r\n    setRows(Math.floor(adjustedRows));\r\n    editorInstance.refresh();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.root}>\r\n        <ReflexContainer orientation=\"horizontal\">\r\n          <ReflexElement style={{ paddingTop: \"1rem\" }}>\r\n            <ReflexContainer orientation=\"vertical\">\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement className={style[\"pane-color\"]}>\r\n                    <TabsPanel />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* End of 1st content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement flex={0.45}>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement style={{ display: \"flex\" }}>\r\n                    <CodeMirror editorInstance={editorInstance} setEditorInstance={setEditorInstance} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter\r\n                    className={clsx(style.splitter, style[\"splitter-horizontal\"])}\r\n                    onStopResize={() => resetEditorLayout()}\r\n                  />\r\n                  <ReflexElement flex={0.3}>\r\n                    <InputOutputFile rows={rows} TextAreaRef={TextAreaRef} editorInstance={editorInstance} />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* 3rd content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  {/* 0.12 */}\r\n                  <ReflexElement className={style[\"pane-color\"]} flex={0.18}>\r\n                    <VoiceChat params={id} user={prepareData()} partnerUser={partnerUser} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter className={clsx(style.splitter, style[\"splitter-horizontal\"])} />\r\n                  <ReflexElement className={style[\"chat-app\"]}>\r\n                    {/* Chat App Component */}\r\n                    <ChatApp userInfo={prepareData()} socketID={sid} />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n            </ReflexContainer>\r\n          </ReflexElement>\r\n          <ReflexElement className={style.footer} flex={0.028}>\r\n            Made with <span>&#9829;</span> by Rishabh Malhotra{\"  \"}•{\"  \"}\r\n            <a href=\"https://github.com/Rishabh-malhotraa/caucus\" target=\"__blank\">\r\n              Github\r\n            </a>\r\n          </ReflexElement>\r\n        </ReflexContainer>\r\n      </div>\r\n      {goBack ? <Redirect to={{ pathname: \"/home\", state: { showNotification: true } }} /> : <></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}