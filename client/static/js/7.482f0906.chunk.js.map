{"version":3,"sources":["component/QuestionsPane/ProblemList/ProblemList.module.css","component/InputOutputFile/InputOutputFile.module.css","pages/Room/Room.module.css","component/InputOutputFile/InputOutputFile.tsx","component/TextChat/ChatMessage-styles.ts","component/TextChat/ChatMessage.jsx","component/TextChat/index.tsx","service/getRandomAvatar.ts","component/VoiceChat/VoiceChat.tsx","component/Editor/CodeMirrorAdapter.js","service/getRandomColor.ts","component/Editor/CodeMirrorEditor.tsx","component/QuestionsPane/SettingsPage.tsx","component/QuestionsPane/ProblemList/Autocomplete.tsx","component/QuestionsPane/ProblemList/ListPagination.tsx","component/QuestionsPane/ProblemList/ProblemList.tsx","component/QuestionsPane/ProblemPage/LeetCode.tsx","component/QuestionsPane/ProblemPage/CodeForces.tsx","component/QuestionsPane/ProblemPage/ProblemPage.tsx","component/QuestionsPane/Tabs.tsx","pages/Room/Room.tsx"],"names":["module","exports","CssTextField","withStyles","root","padding","height","width","outline","color","borderBottomColor","borderColor","TextField","InputOutputFile","TextAreaRef","rows","editorInstance","id","useParams","useState","value","setValue","loading","setLoading","inputText","setInputText","output","memory","cpuTime","outputData","setOutputData","language","useContext","SettingContext","enqueueSnackbar","useSnackbar","useEffect","socket","on","inputData","outputResponse","variant","submitProblem","a","axios","method","url","SERVER_URL","data","script","getValue","stdin","responseType","response","emit","roomID","RenderTextArea","index","className","styles","loader","type","style","minHeight","textAlign","ref","Paper","toolbar","Tabs","onChange","event","indicatorColor","textColor","centered","Tab","label","Box","Button","endIcon","onClick","size","inputTextFn","target","multiline","palette","spacing","radius","rightBgColor","primary","main","avatar","leftRow","rightRow","msg","borderRadius","marginBottom","display","wordBreak","fontFamily","fontSize","left","borderTopRightRadius","borderBottomRightRadius","backgroundColor","right","borderTopLeftRadius","borderBottomLeftRadius","common","white","leftFirst","leftLast","rightFirst","rightLast","ChatMsg","name","props","classes","messages","side","GridContainerProps","GridItemProps","AvatarProps","getTypographyProps","Grid","container","justify","item","Avatar","src","cx","xs","map","i","TypographyProps","Typography","align","length","defaultProps","useStyles","makeStyles","createStyles","paddding","formStyle","background","boxSizing","backdropFilter","inputStyle","flexGrow","margin","border","formButton","ChatApp","userInfo","socketID","chatBoxRef","useRef","message","setMessage","body","setBody","receivedMessages","newMessage","current","scrollIntoView","flexDirection","fontWeight","element","image_link","onSubmit","e","preventDefault","messageObject","autoComplete","placeholder","getRandomColor","Math","floor","random","LightTooltip","theme","tooltip","boxShadow","shadows","Tooltip","RenderIcons","user","TransitionComponent","Zoom","title","placement","alt","getRandomAvatar","charAt","Icons","params","partnerUser","cmOrigin","typeObserver","binding","_mux","cmDoc","cm","getEditor","anchor","indexFromPos","getCursor","head","switchSel","tmp","performChange","delta","d","retain","insert","pos","posFromIndex","replaceRange","delete","math","start","end","operation","setSelection","scroll","targetObserver","changes","doc","transact","diff","toString","remove","change","from","delLen","removed","s","reduce","text","join","createEmptyLinePlaceholder","document","createElement","setAttribute","emptyTxt","insertBefore","createTextNode","sel","updateRemoteSelection","y","cursors","clientId","awareness","aw","getStates","get","m","undefined","caret","clear","forEach","cursor","Y","JSON","parse","to","headpos","anchorpos","caretEl","username","classList","add","userDiv","invert","setTimeout","createRemoteCaret","func","awCursor","line","ch","push","markText","CodeMirror","Pos","css","inclusiveRight","inclusiveLeft","setBookmark","widget","insertLeft","set","codemirrorCursorActivity","getLocalState","hasFocus","wrapper","ownerDocument","newAnchor","newHead","currentAnchor","currentHead","setLocalStateField","stringify","CodeMirrorBinding","textType","codeMirror","yUndoManager","getDoc","this","_onStackItemAdded","stackItem","changedParentTypes","has","_beforeChangeSelection","meta","_onStackItemPopped","_beforeChange","trackedOrigins","editorUndo","endOperation","undo","startOperation","editorRedo","redo","addKeyMap","createMutex","_typeObserver","_targetObserver","instance","_cursors","Map","_changedCursors","Set","_debounceCursorEvent","eventloop","_awarenessListener","f","clientID","added","updated","_cursorListener","_blurListeer","observe","unobserve","off","palettes","DEFAULT","LIGHT_12","DARK_12","CodeMirrorEditor","setEditorInstance","keybinds","UserContext","guestName","GuestNameContext","provider","ydoc","yText","getText","WebsocketProvider","CDRT_SERVER","err","val","colorScheme","autoScroll","options","mode","keyMap","lineWrapping","smartIndent","lineNumbers","foldGutter","tabSize","gutters","autoCloseTags","matchBrackets","autoCloseBrackets","extraKeys","editorDidMount","editor","window","handleEditorDidMount","setSize","Settings","handleFontSizeChange","handleLanguageChange","handleThemeChange","handleKeybindsChange","CssFormControl","fill","FormControl","InputLabel","Select","labelId","MenuItem","button","paddingBottom","tag","justifyContent","alignItems","marginTop","lineHeight","whiteSpace","overflow","textOverflow","popper","zIndex","header","borderBottom","inputBase","transition","transitions","create","fade","paper","option","popperDisablePortal","position","iconSelected","marginRight","marginLeft","flexShrink","close","opacity","AutoCompleteLabel","labels","React","anchorEl","setAnchorEl","pendingValue","setPendingValue","useTheme","open","Boolean","Fragment","ButtonBase","disableRipple","aria-describedby","currentTarget","getContrastText","Popper","Autocomplete","onClose","reason","focus","multiple","newValue","disableCloseOnSelect","disablePortal","renderTags","noOptionsText","renderOption","selected","visibility","description","sort","b","ai","indexOf","bi","getOptionLabel","renderInput","InputBase","InputProps","inputProps","autoFocus","getColor","CssPagination","Pagination","PaginationComponent","filterResponseData","TabsContext","rowsPerPage","setRowsPerPage","page","setPage","navRef","createRef","clientHeight","count","List","component","aria-label","slice","el","ListItem","question_id","then","question_title","difficulty","paddingLeft","shape","ProblemList","companies","tags","setCompanies","setDifficulty","setTags","setUrl","setResponse","error","comment","errorText","setErrorText","post","prepareData","res","handleScrappedData","NextButton","getQuestionData","Url","hostname","htmlString","c","t","allCompanies","allDifficulties","allTags","fetchProblems","helperText","endAdornment","autocomplete","companiesData","tagsData","difficultyData","ButtonGroup","randomID","Divider","divider","direction","pagination","ListPagination","LeetCode","questionData","question_data","question","Chip","company","href","problem_url","rel","scrappedData","MathRef","renderMathInElement","delimiters","ProblemPage","showScrapped","CodeForces","TabsComponent","tabIndex","onTabsChange","onQuestionDataChange","selectedIndex","onSelect","Dashboard","closeSnackbar","setRows","sid","setSid","goBack","setGoBack","setPartnerUser","action","key","localStorage","setItem","displayNotification","enter","variantStyle","preventDuplicate","retrivedKeyString","getItem","resetEditorLayout","adjustedRows","refresh","orientation","paddingTop","clsx","splitter","onStopResize","flex","VoiceChat","footer","pathname","state","showNotification"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,gBAAgB,mCAAmC,mBAAmB,sCAAsC,aAAe,kCAAkC,YAAY,+BAA+B,WAAa,gCAAgC,QAAU,6BAA6B,uBAAuB,0CAA0C,iBAAiB,oCAAoC,YAAY,+BAA+B,mBAAmB,sCAAsC,qBAAqB,0C,0CCA9jBD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,QAAU,iCAAiC,UAAU,iCAAiC,YAAY,mCAAmC,OAAS,kC,oBCArMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,aAAa,yBAAyB,uBAAuB,mCAAmC,sBAAsB,kCAAkC,WAAW,uBAAuB,SAAW,uBAAuB,oBAAoB,gCAAgC,sBAAsB,kCAAkC,OAAS,uB,qSCoBrZC,G,OAAeC,YAAW,CAC9BC,KAAM,CAEJC,QAAS,OACTC,OAAQ,OACRC,MAAO,OACP,uBAAwB,CACtBC,QAAS,OACTC,MAAO,cAET,sBAAuB,CACrBA,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAxBAR,CA4BlBS,MA0IYC,EAxI6B,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACxDC,EAAOC,cAAPD,GAD6E,EAE3DE,mBAAS,GAFkD,mBAE9EC,EAF8E,KAEvEC,EAFuE,OAGvDF,oBAAS,GAH8C,mBAG9EG,EAH8E,KAGrEC,EAHqE,OAInDJ,mBAAS,IAJ0C,mBAI9EK,EAJ8E,KAInEC,EAJmE,OAKjDN,mBAA8B,CAChEO,OAAQ,GACRC,OAAQ,EACRC,QAAS,IAR0E,mBAK9EC,EAL8E,KAKlEC,EALkE,KAW7EC,EAAaC,qBAAWC,KAAxBF,SACAG,EAAoBC,cAApBD,gBAERE,qBAAU,WACRC,IAAOC,GAAG,mBAAmB,SAACC,GAC5Bd,EAAac,MAEfF,IAAOC,GAAG,sBAAsB,SAACE,GAC/BN,EAC4B,OAA1BM,EAAeb,QAA6C,OAA1Ba,EAAeb,OAC7C,0BACA,wBACJ,CACEc,QAAmC,OAA1BD,EAAeb,QAA6C,OAA1Ba,EAAeb,OAAkB,QAAU,YAG1FG,EAAcU,GACdnB,EAAS,QAEV,IAEH,IAAMqB,EAAa,uCAAG,4BAAAC,EAAA,6DACpBpB,GAAW,GACXF,EAAS,GAFW,SAGGuB,IAAM,CAC3BC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,gBACHC,KAAM,CACJC,OAAQjC,EAAekC,WACvBnB,SAAUA,EACVoB,MAAO3B,GAET4B,aAAc,SAXI,OAGdC,EAHc,OAapBhB,IAAOiB,KAAK,gBAAiB,CAAEN,KAAMK,EAASL,KAAMO,OAAQtC,IAC5DiB,EAC2B,OAAzBmB,EAASL,KAAKrB,QAA4C,OAAzB0B,EAASL,KAAKrB,OAC3C,0BACA,uBACJ,CACEc,QAAkC,OAAzBY,EAASL,KAAKrB,QAA4C,OAAzB0B,EAASL,KAAKrB,OAAkB,QAAU,YAGxFG,EAAcuB,EAASL,MACvBzB,GAAW,GAvBS,2CAAH,qDAwCbiC,EAAiB,SAAC,GAAiC,EAA/BC,MACxB,OAAOnC,EACL,qBAAKoC,UAAWC,IAAOC,OAAvB,SACE,cAAC,IAAD,CAAQC,KAAK,OAAOpD,MAAM,UAAUH,OAAQ,GAAIC,MAAO,OAGzD,qBACEuD,MAAO,CACLzD,QAAS,OACT0D,UAAW,MACXC,UAAW,OACXvD,MAA6B,OAAtBoB,EAAWF,QAAyC,OAAtBE,EAAWF,OAAkB,UAAY,WALlF,SAQE,8BAAME,EAAWH,YAKvB,OACE,sBAAKgC,UAAWC,IAAOvD,KAAM6D,IAAKnD,EAAlC,UACE,eAACoD,EAAA,EAAD,CAAOR,UAAWC,IAAOQ,QAAzB,UACE,eAACC,EAAA,EAAD,CACEhD,MAAOA,EACPiD,SAAU,SAACC,EAAOlD,GArCxBC,EAqCsDD,IAChDmD,eAAe,UACfC,UAAU,UACVC,UAAQ,EALV,UAOE,cAACC,EAAA,EAAD,CAAKC,MAAM,UACX,cAACD,EAAA,EAAD,CAAKC,MAAM,cAEb,cAACC,EAAA,EAAD,CAAKlB,UAAWC,IAAO,WAAvB,SACE,cAACkB,EAAA,EAAD,CACEpC,QAAQ,OACRhC,MAAM,UACNqE,QAAS,cAAC,IAAD,IACTC,QAAO,sBAAE,sBAAApC,EAAA,sEACDD,IADC,2CAJX,2BAYJ,qBAAKgB,UAAWC,IAAO,aAAvB,SACa,IAAVvC,EACC,cAAClB,EAAD,CAEE8E,KAAK,SACLvC,QAAQ,WACRrB,MAAOI,EACP6C,SAAU,SAACC,GAAD,OA9DA,SAAClD,GACnBK,EAAaL,GACbiB,IAAOiB,KAAK,aAAc,CAAEN,KAAM5B,EAAOmC,OAAQtC,IA4DpBgE,CAAYX,EAAMY,OAAO9D,QAC9C+D,WAAS,EACTpE,KAAMA,GANF,KASN,cAACyC,EAAD,CAAgBC,MAAOrC,U,gGChIlBuC,EAnDA,SAAC,GAAiC,IAA/ByB,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QACnBC,EAASD,EAAQ,KACjBL,EAAOK,EAAQ,GACfE,EAAeH,EAAQI,QAAQC,KAErC,MAAO,CACLC,OAAQ,CACNnF,MAAOyE,EACP1E,OAAQ0E,GAEVW,QAAS,CACP3B,UAAW,QAEb4B,SAAU,CACR5B,UAAW,SAEb6B,IAAK,CACHxF,QAASgF,EAAQ,EAAG,GACpBS,aAAc,EACdC,aAAc,EACdC,QAAS,eACTC,UAAW,aACXC,WACE,gJACFC,SAAU,QAEZC,KAAM,CACJC,qBAAsBf,EACtBgB,wBAAyBhB,EACzBiB,gBAAiB,WAEnBC,MAAO,CACLC,oBAAqBnB,EACrBoB,uBAAwBpB,EACxBiB,gBAAiBhB,EACjB9E,MAAO2E,EAAQuB,OAAOC,OAExBC,UAAW,CACTJ,oBAAqBnB,GAEvBwB,SAAU,CACRJ,uBAAwBpB,GAE1ByB,WAAY,CACVV,qBAAsBf,GAExB0B,UAAW,CACTV,wBAAyBhB,KC5BzB2B,E,MAAU9G,GAAWwD,EAAQ,CAAEuD,KAAM,WAA3B/G,EAAwC,SAACgH,GAAW,IAEhEC,EAQED,EARFC,QACA1B,EAOEyB,EAPFzB,OACA2B,EAMEF,EANFE,SACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,mBACAC,EAGEL,EAHFK,cACAC,EAEEN,EAFFM,YACAC,EACEP,EADFO,mBAWF,OACE,eAACC,EAAA,EAAD,yBACEC,WAAS,EACTvC,QAAS,EACTwC,QAAkB,UAATP,EAAmB,WAAa,cACrCC,GAJN,cAMY,SAATD,GACC,cAACK,EAAA,EAAD,yBAAMG,MAAI,GAAKN,GAAf,aACE,cAACO,EAAA,EAAD,yBACEC,IAAKtC,GACD+B,GAFN,IAGE/D,UAAWuE,YAAGb,EAAQ1B,OAAQ+B,EAAY/D,iBAIhD,cAACiE,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,EAAf,SACGb,EAASc,KAAI,SAACtC,EAAKuC,GAClB,IA3Ba3E,EA2BP4E,EAAkBX,EAAmB7B,EAAKuC,EAAGjB,GACnD,OAEE,aADA,CACA,OAAuBzD,UAAW0D,EAAQ,GAAD,OAAIE,EAAJ,QAAzC,SACE,cAACgB,EAAA,EAAD,yBACEC,MAAO,QACHF,GAFN,IAGE3E,UAAWuE,YACTb,EAAQvB,IACRuB,EAAQE,IApCH7D,EAqCO2E,EApCZ,IAAV3E,EACK2D,EAAQ,GAAD,OAAIE,EAAJ,UAEZ7D,IAAU4D,EAASmB,OAAS,EACvBpB,EAAQ,GAAD,OAAIE,EAAJ,SAET,IA+BOe,EAAgB3E,WAPpB,SAUGmC,MAXKA,EAAI5E,IAAMmH,eA8BhCnB,EAAQwB,aAAe,CACrB/C,OAAQ,GACR2B,SAAU,GACVC,KAAM,OACNC,mBAAoB,GACpBC,cAAe,GACfC,YAAa,GACbC,mBAAoB,iBAAO,KAGdT,Q,kBC/FTyB,EAAYC,aAAW,kBAC3BC,YAAa,CACXxI,KAAM,CACJyI,SAAU,OACVvI,OAAQ,WAEVwI,UAAW,CACTC,WAAY,oBACZ1I,QAAS,UACT2F,QAAS,OACTgD,UAAW,aACXC,eAAgB,cAElBC,WAAY,CACV7I,QAAS,SACT8I,SAAU,EACVrD,aAAc,OACdvF,MAAO,OACP6I,OAAQ,UACR9I,OAAQ,OACRiG,gBAAiB,UACjB9F,MAAO,aACP4I,OAAQ,oBACR,UAAW,CACT7I,QAAS,OACT6I,OAAQ,sBAGZC,WAAY,CACVP,WAAY,OACZM,OAAQ,OACRhJ,QAAS,SACT+I,OAAQ,UACRtD,aAAc,MACdtF,QAAS,OACTC,MAAO,aA+FE8I,EApFC,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,SACrBrC,EAAUsB,IACVgB,EAAaC,iBAAuB,MAF4C,EAIxDxI,mBAAS,IAJ+C,mBAI/EyI,EAJ+E,KAItEC,EAJsE,OAK9D1I,mBAAyB,IALqC,mBAK/E2I,EAL+E,KAKzEC,EALyE,KAOtF3H,qBAAU,WACRC,IAAOC,GAAG,WAAW,SAACwH,GACpBE,EAAiBF,MAEnB,IAAME,EAAmB,SAACC,GACxBF,GAAQ,SAACD,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAiBG,UAGpB,IAqBH,OAJA7H,qBAAU,WACJsH,EAAWQ,SAASR,EAAWQ,QAAQC,mBAC1C,CAACL,IAGF,mCACE,sBACEhG,MAAO,CACLkC,QAAS,OACT1F,OAAQ,UACR8J,cAAe,UAJnB,UAOE,oBACEtG,MAAO,CAAEsF,OAAQ,kBAAmB/I,QAAS,MAAOkG,gBAAiB,UAAW8D,WAAY,KAD9F,uBAKA,qBAAKvG,MAAO,CAAEqF,SAAU,EAAGC,OAAQ,QAAnC,SACGU,EAAK3B,KAAI,SAACmC,EAAS7G,GAClB,OAAI6G,EAAQb,WAAaA,EAErB,cAAC,EAAD,CAEE/D,OAAQ4E,EAAQd,SAASe,WACzBjD,KAAM,QACND,SAAQ,YAAMiD,EAAQjD,WAHjB5D,GAQT,cAAC,EAAD,CAAqB4D,SAAQ,YAAMiD,EAAQjD,UAAW3B,OAAQ4E,EAAQd,SAASe,YAAjE9G,QAIpB,qBAAKK,MAAO,GAAIG,IAAKyF,EAArB,SACE,sBAAMc,SAnDM,SAACC,GAEnB,GADAA,EAAEC,iBACGd,EAAL,CACA,IAAMe,EAA8B,CAClCtD,SAAU,CAACuC,GACXH,SAAUA,EACVD,SAAUA,GAEZO,GAAQ,SAACD,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAiBa,OAEnBd,EAAW,IACXxH,IAAOiB,KAAK,eAAgBqH,KAuCO1J,GAAG,YAAYyC,UAAW0D,EAAQ0B,UAA/D,SACE,uBACEpF,UAAW0D,EAAQ8B,WACnB0B,aAAa,MACbC,YAAY,oBACZzJ,MAAOwI,EACPvF,SAAU,SAACoG,GAAD,OAAOZ,EAAWY,EAAEvF,OAAO9D,oB,kBC9GpC0J,EAjBQ,WACrB,IAAMpF,EAAS,CACb,+EACA,0EACA,0EACA,iEACA,+EACA,+EACA,+EACA,0EACA,uDACA,kEAGF,OAAOA,EAAOqF,KAAKC,MAAMD,KAAKE,SAAWvF,EAAO8C,UCA5C0C,EAAe/K,aAAW,SAACgL,GAAD,MAAmB,CACjDC,QAAS,CACP7E,gBAAiB4E,EAAM/F,QAAQuB,OAAOC,MACtCnG,MAAO,mBACP4K,UAAWF,EAAMG,QAAQ,GACzBnF,SAAU,OACVL,aAAc,WANG3F,CAQjBoL,KAEEC,EAAc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KACrB,OAAKA,EAEH,mCACE,cAACP,EAAD,CAAcQ,oBAAqBC,IAAMC,OAAW,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMvE,OAAQ,WAAY2E,UAAU,SAApF,SACE,cAAC9D,EAAA,EAAD,CACE+D,IAAKL,EAAKvE,KACVc,IAAKyD,EAAKlB,YAAcwB,IACxBjI,MAAO,CAAEvD,MAAO,OAAQD,OAAQ,OAAQ8I,OAAQ,cAHlD,SAKGqC,EAAKvE,KAAK8E,OAAO,SATR,8BAyBLC,GATmB,SAAC,GAAkC,EAAhCC,OAAiC,IAAzBC,EAAwB,EAAxBA,YAAaV,EAAW,EAAXA,KACxD,OACE,sBAAK3H,MAAO,CAAEkC,QAAS,QAAvB,UACE,cAAC,EAAD,CAAayF,KAAMA,KACP,OAAXU,QAAW,IAAXA,OAAA,EAAAA,EAAa5I,QAAS,cAAC,EAAD,CAAakI,KAAMU,IAAkB,iC,0HChCrDC,GAAW,sBAMlBC,GAAe,SAACC,EAAShI,GAC7BgI,EAAQC,MAAK,WACX,IAAMC,EAAQF,EAAQE,MAChBC,EAAKD,EAAME,YAKbC,EAASF,EAAGG,aAAaH,EAAGI,UAAU,WACtCC,EAAOL,EAAGG,aAAaH,EAAGI,UAAU,SAClCE,EAAYD,EAAOH,EAEzB,GAAII,EAAW,CACb,IAAMC,EAAMF,EACZA,EAAOH,EACPA,EAASK,EAEX,IAAMC,EAAgB,WAGpB,IAFA,IAAMC,EAAQ5I,EAAM4I,MAChBzJ,EAAQ,EACH2E,EAAI,EAAGA,EAAI9D,EAAM4I,MAAM1E,OAAQJ,IAAK,CAC3C,IAAM+E,EAAID,EAAM9E,GAChB,GAAI+E,EAAEC,OACJ3J,GAAS0J,EAAEC,YACN,GAAID,EAAEE,OAAQ,EACf5J,EAAQkJ,GAAWA,EAASG,GAAQrJ,IAAUkJ,KAChDA,GAAUQ,EAAEE,OAAO7E,QAEjB/E,EAAQqJ,IACVA,GAAQK,EAAEE,OAAO7E,QAEnB,IAAM8E,EAAMd,EAAMe,aAAa9J,GAC/B+I,EAAMgB,aAAaL,EAAEE,OAAQC,EAAKA,EAAKlB,IACvC3I,GAAS0J,EAAEE,OAAO7E,YACb,GAAI2E,EAAEM,OAAQ,CACfhK,EAAQkJ,IACVA,EAASe,KAASf,EAASQ,EAAEM,OAAQhK,IAEnCA,EAAQqJ,IACVA,EAAOY,KAASZ,EAAOK,EAAEM,OAAQhK,IAEnC,IAAMkK,EAAQnB,EAAMe,aAAa9J,GAC3BmK,EAAMpB,EAAMe,aAAa9J,EAAQ0J,EAAEM,QACzCjB,EAAMgB,aAAa,GAAIG,EAAOC,EAAKxB,OAUzC,GALIK,EACFA,EAAGoB,UAAUZ,GAEbA,IAEEF,EAAW,CACb,IAAMC,EAAMF,EACZA,EAAOH,EACPA,EAASK,EAEXP,EAAGqB,aAAarB,EAAGc,aAAaZ,GAASF,EAAGc,aAAaT,GAAO,CAC9DiB,QAAQ,QAKRC,GAAiB,SAAC1B,EAAS2B,GAC/B3B,EAAQC,MAAK,WACXD,EAAQ4B,IAAIC,UAAS,WACnB,GAAIF,EAAQzF,OAAS,EAAG,CAGtB,IAAM2E,EAAIiB,KAAsB9B,EAAQzI,KAAKwK,WAAY/B,EAAQE,MAAMtJ,YACvEoJ,EAAQzI,KAAK4J,OAAON,EAAE1J,MAAO0J,EAAEmB,QAC/BhC,EAAQzI,KAAKwJ,OAAOF,EAAE1J,MAAO0J,EAAEE,YAC1B,CACL,IAAMkB,EAASN,EAAQ,GACjBN,EAAQrB,EAAQE,MAAMI,aAAa2B,EAAOC,MAC1CC,EAASF,EAAOG,QAAQvG,KAAI,SAACwG,GAAD,OAAOA,EAAEnG,UAAQoG,OAAOlB,MAAYa,EAAOG,QAAQlG,OAAS,EAC1FiG,EAAS,GACXnC,EAAQzI,KAAK4J,OAAOE,EAAOc,GAEzBF,EAAOM,KAAKrG,OAAS,GACvB8D,EAAQzI,KAAKwJ,OAAOM,EAAOY,EAAOM,KAAKC,KAAK,UAG/CxC,OAkBDyC,GAA6B,SAACtO,GAClC,IAAMoK,EAAcmE,SAASC,cAAc,QAC3CpE,EAAYqE,aAAa,QAAS,sBAClC,IAAMC,EAAWH,SAASC,cAAc,QACxCE,EAASC,aAAaJ,SAASK,eAAe,IAAK,MACnD,IAAMC,EAAMN,SAASC,cAAc,QAQnC,OAPAK,EAAIJ,aAAa,QAAS,oBAC1BI,EAAIJ,aACF,QADF,iHAE4GzO,EAF5G,qCAIAoK,EAAYuE,aAAaE,EAAK,MAC9BzE,EAAYuE,aAAaD,EAAU,MAC5BtE,GAGH0E,GAAwB,SAACC,EAAG/C,EAAI5I,EAAM4L,EAASC,EAAUC,GAE7D,IAAMC,EAAKD,EAAUE,YAAYC,IAAIJ,GAE/BK,EAAIN,EAAQK,IAAIJ,GAQtB,QAPUM,IAAND,IACEA,EAAEE,OACJF,EAAEE,MAAMC,QAEVH,EAAET,IAAIa,SAAQ,SAACb,GAAD,OAASA,EAAIY,WAC3BT,EAAQhC,OAAOiC,SAENM,IAAPJ,EAAJ,CAGA,IAAMnE,EAAOmE,EAAGnE,MAAQ,GACN,MAAdA,EAAKhL,QACPgL,EAAKhL,MAAQ,WAEE,MAAbgL,EAAKvE,OACPuE,EAAKvE,KAAL,gBAAqBwI,IAEvB,IAAMU,EAASR,EAAGQ,OAClB,GAAc,MAAVA,GAAmC,MAAjBA,EAAOzD,QAAiC,MAAfyD,EAAOtD,KAAtD,CAGA,IAAMH,EAAS0D,KAA6CC,KAAKC,MAAMH,EAAOzD,QAAS6C,GACjF1C,EAAOuD,KAA6CC,KAAKC,MAAMH,EAAOtD,MAAO0C,GACnF,GAAe,OAAX7C,GAA4B,OAATG,GAAiBH,EAAO9I,OAASA,GAAQiJ,EAAKjJ,OAASA,EAAM,CAClF,IAEI2K,EAAMgC,EAFJC,EAAUhE,EAAGc,aAAaT,EAAKrJ,OAC/BiN,EAAYjE,EAAGc,aAAaZ,EAAOlJ,OAErCqJ,EAAKrJ,MAAQkJ,EAAOlJ,OACtB+K,EAAOiC,EACPD,EAAKE,IAELlC,EAAOkC,EACPF,EAAKC,GAEP,IAAME,EArEgB,SAACC,EAAUnQ,GACnC,IAAMwP,EAAQjB,SAASC,cAAc,QACrCgB,EAAMY,UAAUC,IAAI,gBACpBb,EAAMf,aAAa,QAAnB,wBAA6CzO,IAC7C,IAAMsQ,EAAU/B,SAASC,cAAc,OAOvC,OANA8B,EAAQ7B,aAAa,QAArB,4BAAmDzO,GAAnD,iBAAsEuQ,KAAOvQ,GAAO,KACpFsQ,EAAQ3B,aAAaJ,SAASK,eAAeuB,GAAW,MACxDX,EAAMb,aAAa2B,EAAS,MAC5BE,YAAW,WACThB,EAAMY,UAAUC,IAAI,eACnB,KACIb,EA0DWiB,CAAkBzF,EAAKvE,KAAMuE,EAAKhL,OAGhDsP,GACAoB,KAAkBvB,EAAGQ,OAAOzD,OAAQoD,EAAEqB,SAASzE,SAC/CwE,KAAkBvB,EAAGQ,OAAOtD,KAAMiD,EAAEqB,SAAStE,OAE7C6D,EAAQE,UAAUC,IAAI,aAExB,IAAMxB,EAAM,GAEZ,GAAIxC,EAAKrJ,QAAUkJ,EAAOlJ,MAAO,CAY/B,IAXI+K,EAAK6C,OAASb,EAAGa,MAAoB,IAAZ7C,EAAK8C,KAEhChC,EAAIiC,KACF9E,EAAG+E,SAAShD,EAAM,IAAIiD,KAAWC,IAAIlD,EAAK6C,KAAO,EAAG,GAAI,CACtDM,IAAI,qBAAD,OAAuBlG,EAAKhL,MAA5B,OACHmR,gBAAgB,EAChBC,eAAe,KAGnBrD,EAAO,IAAIiD,KAAWC,IAAIlD,EAAK6C,KAAO,EAAG,IAEpC7C,EAAK6C,OAASb,EAAGa,MAEtB/B,EAAIiC,KACF9E,EAAGqF,YAAY,IAAIL,KAAWC,IAAIlD,EAAK6C,KAAM,GAAI,CAC/CU,OAAQhD,GAA2BtD,EAAKhL,UAG5C+N,EAAO,IAAIiD,KAAWC,IAAIlD,EAAK6C,KAAO,EAAG,GAE3C/B,EAAIiC,KACF9E,EAAG+E,SAAShD,EAAMgC,EAAI,CACpBmB,IAAI,qBAAD,OAAuBlG,EAAKhL,MAA5B,OACHmR,gBAAgB,EAChBC,eAAe,KAKrB,IAAM5B,EACJX,EAAI9G,OAAS,GAAKgI,IAAOC,GAA0B,IAAfA,EAAQa,GACxC,KACA7E,EAAGqF,YAAYrB,EAAS,CAAEsB,OAAQpB,EAASqB,YAAY,IAC7DvC,EAAQwC,IAAIvC,EAAU,CAAEO,QAAOX,MAAK8B,SAAUhB,QAI5C8B,GAA2B,SAAC1C,EAAG/C,EAAI5I,EAAM8L,GAC7C,IAAMC,EAAKD,EAAUwC,gBACrB,GAAK1F,EAAG2F,YAAoB,MAANxC,GAAenD,EAAGzG,QAAQqM,QAAQC,cAAcF,WAAtE,CAGA,IAAMG,EAAYlC,KAAsCxM,EAAM4I,EAAGG,aAAaH,EAAGI,UAAU,YACrF2F,EAAUnC,KAAsCxM,EAAM4I,EAAGG,aAAaH,EAAGI,UAAU,UACrF4F,EAAgB,KAChBC,EAAc,KACD,MAAb9C,EAAGQ,SACLqC,EAAgBpC,KAAiCC,KAAKC,MAAMX,EAAGQ,OAAOzD,SACtE+F,EAAcrC,KAAiCC,KAAKC,MAAMX,EAAGQ,OAAOtD,QAGvD,MAAb8C,EAAGQ,QACFC,KAA2BoC,EAAeF,IAC1ClC,KAA2BqC,EAAaF,IAEzC7C,EAAUgD,mBAAmB,SAAU,CACrChG,OAAQ2D,KAAKsC,UAAUL,GACvBzF,KAAMwD,KAAKsC,UAAUJ,OAkLdK,GAjKb,WAOE,WAAYC,EAAUC,GAA6D,IAAD,OAAhDpD,EAAgD,uDAApC,KAAoC,yDAAJ,GAAI,IAA5BqD,oBAA4B,MAAb,KAAa,uBAChF,IAAM9E,EAAM4E,EAAS5E,IACf1B,EAAQuG,EAAWE,SAsBzB,GArBAC,KAAKhF,IAAMA,EACXgF,KAAKrP,KAAOiP,EACZI,KAAKzG,GAAKsG,EACVG,KAAK1G,MAAQA,EACb0G,KAAKvD,UAAYA,GAAa,KAC9BuD,KAAKF,aAAeA,EACpBE,KAAKC,kBAAoB,YAAwC,IAArCC,EAAoC,EAApCA,UAAoC,EAAzBC,mBAEdC,IAAIR,IAAa,EAAKS,wBAC3CH,EAAUI,KAAKvB,IAAI,EAAM,EAAKsB,yBAGlCL,KAAKO,mBAAqB,YAAoB,IACtCnE,EADqC,EAAhB8D,UACLI,KAAK1D,IAAI,GAC/B,GAAIR,EAAK,CACP,IAAM3C,EAAS0D,KAA6Cf,EAAI3C,OAAQuB,GAAKzK,MACvEqJ,EAAOuD,KAA6Cf,EAAIxC,KAAMoB,GAAKzK,MACzEsP,EAAWjF,aAAaiF,EAAWxF,aAAaZ,GAASoG,EAAWxF,aAAaT,IACjF,EAAK4G,kBAGLV,EAAc,CAChBA,EAAaW,eAAe7C,IAAIoC,MAChC,IAAMU,EAAa,SAACnH,GAIlBA,EAAGoH,eACHb,EAAac,OACbrH,EAAGsH,kBAECC,EAAa,SAACvH,GAClBA,EAAGoH,eACHb,EAAaiB,OACbxH,EAAGsH,kBAELhB,EAAWmB,UAAU,CAEnB,SAAUN,EACV,eAAgBI,EAChB,SAAUA,EAEV,QAASJ,EACT,cAAeI,EACf,QAASA,IAGXhB,EAAa1Q,GAAG,mBAAoB4Q,KAAKC,mBACzCH,EAAa1Q,GAAG,oBAAqB4Q,KAAKO,oBAG5CP,KAAK3G,KAAO4H,eAEZ3H,EAAMnL,SAASyR,EAASzE,YAExB6E,KAAKkB,cAAgB,SAAC9P,GAAD,OAAW+H,GAAa,EAAM/H,IACnD4O,KAAKmB,gBAAkB,SAACC,EAAUrG,GAC5BqG,EAASrB,WAAazG,GACxBwB,GAAe,EAAMC,IAGzBiF,KAAKqB,SAAW,IAAIC,IACpBtB,KAAKuB,gBAAkB,IAAIC,IAC3BxB,KAAKyB,qBAAuBC,KAA0B,IACtD1B,KAAK2B,mBAAqB,SAACvQ,GACzB,GAAIyO,EAAWE,WAAazG,EAA5B,CAGA,IAAMsI,EAAI,SAACpF,GACLA,IAAaxB,EAAI6G,UACnB,EAAKN,gBAAgB3D,IAAIpB,IAG7BpL,EAAM0Q,MAAM7E,QAAQ2E,GACpBxQ,EAAMoK,QAAQyB,QAAQ2E,GACtBxQ,EAAM2Q,QAAQ9E,QAAQ2E,GAClB,EAAKL,gBAAgBzP,KAAO,GAC9B,EAAK2P,sBAAqB,WACxB,EAAKF,gBAAgBtE,SAAQ,SAACT,GAC5BH,GAAsBrB,EAAK6E,EAAYD,EAAU,EAAKyB,SAAU7E,EAAUC,MAE5E,EAAK8E,gBAAgBvE,aAI3BgD,KAAKgC,gBAAkB,WACjBnC,EAAWE,WAAazG,GAC1ByE,YAAW,WACTiB,GAAyBhE,EAAK6E,EAAYD,EAAUnD,KACnD,IAGPuD,KAAKiC,aAAe,kBAAMxF,EAAUgD,mBAAmB,SAAU,OAEjEG,EAASsC,QAAQlC,KAAKkB,eAEtBrB,EAAWzQ,GAAG,UAAW4Q,KAAKmB,iBAI9BnB,KAAKK,uBAAyB,KAC9BL,KAAKQ,cAAgB,WAEnB,EAAKnH,MAAK,WAER,IAAMI,EAAS0D,KACbyC,EACAC,EAAWnG,aAAamG,EAAWlG,UAAU,YAEzCC,EAAOuD,KACXyC,EACAC,EAAWnG,aAAamG,EAAWlG,UAAU,UAE/C,EAAK0G,uBAAyB,CAAE5G,SAAQG,YAG5CiG,EAAWzQ,GAAG,eAAgB4Q,KAAKQ,eAC/B/D,IACFoD,EAAWzQ,GAAG,UAAW4Q,KAAKiC,cAC9BxF,EAAUrN,GAAG,SAAU4Q,KAAK2B,oBAE5B9B,EAAWzQ,GAAG,iBAAkB4Q,KAAKgC,iBACrCnC,EAAWzQ,GAAG,OAAQ4Q,KAAKiC,cAC3BpC,EAAWzQ,GAAG,QAAS4Q,KAAKgC,kBArIlC,uDA0IIhC,KAAKrP,KAAKwR,UAAUnC,KAAKkB,eACzBlB,KAAKzG,GAAG6I,IAAI,UAAWpC,KAAKiC,cAE5BjC,KAAKzG,GAAG6I,IAAI,UAAWpC,KAAKmB,iBAC5BnB,KAAKzG,GAAG6I,IAAI,eAAgBpC,KAAKQ,eAEjCR,KAAKzG,GAAG6I,IAAI,iBAAkBpC,KAAKgC,iBACnChC,KAAKzG,GAAG6I,IAAI,QAASpC,KAAKgC,iBAC1BhC,KAAKzG,GAAG6I,IAAI,OAAQpC,KAAKiC,cACrBjC,KAAKvD,WACPuD,KAAKvD,UAAU2F,IAAI,SAAUpC,KAAK2B,oBAEhC3B,KAAKF,eACPE,KAAKF,aAAasC,IAAI,mBAAoBpC,KAAKC,mBAC/CD,KAAKF,aAAasC,IAAI,oBAAqBpC,KAAKO,oBAChDP,KAAKF,aAAaW,eAAelG,OAAOyF,OAE1CA,KAAKrP,KAAO,KACZqP,KAAKzG,GAAK,KACVyG,KAAK1G,MAAQ,SA7JjB,K,0PCzNM+I,GAAW,CACfC,QA9Cc,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA4BAC,SAjBe,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAMAC,QA1Bc,CACd,UACA,UACA,UACA,UACA,YC4EaC,GAlF8B,SAAC,GAA2C,IAAzC3U,EAAwC,EAAxCA,eAAgB4U,EAAwB,EAAxBA,kBAOlDrS,EAAWrC,cAAfD,GAP8E,GAS1DkB,cAApBD,gBACwCF,qBAAWC,MAAnDF,EAV8E,EAU9EA,SAAUoE,EAVoE,EAUpEA,SAAUgF,EAV0D,EAU1DA,MAAO0K,EAVmD,EAUnDA,SAE3BpK,EAASzJ,qBAAW8T,MAApBrK,KACAsK,EAAc/T,qBAAWgU,MAAzBD,UAGFnF,GAAe,OAAJnF,QAAI,IAAJA,OAAA,EAAAA,EAAMvE,MAAOuE,EAAKvE,KAAO6O,EAoC1C,OAlCA3T,qBAAU,WACR,GAAsB,MAAlBpB,EAAwB,CAAC,IAAD,EAKtBiV,EAJEC,EAAc,IAAI7F,KAClB8F,EAAQD,EAAKE,QAAQ,cACrBpD,EAAe,IAAI3C,KAAc8F,GAGvC,IAEEF,EAAW,IAAII,KAAkBC,IAAa/S,EAAQ2S,GAQtD,MAAOK,IAET,IAAM5G,EAAS,UAAGsG,SAAH,aAAG,EAAUtG,UACtB6G,EDPkB,SAAC/V,GAC7B,IAAMgW,EAAwBlB,GAAS9U,GACvC,OAAOgW,EAAY1L,KAAKC,MAAMD,KAAKE,SAAWwL,EAAYjO,SCK1CsC,CAAe,WAClB,OAAT6E,QAAS,IAATA,KAAWgD,mBAAmB,OAAQ,CAEpCzL,KAAM0J,EAENnQ,MAAO+V,IAGU,IAAI3D,GAAkBsD,EAAOnV,EAAgB2O,EAAW,CACzEqD,oBAGH,CAAChS,IAGF,qBAAK8C,MAAO,CAAEE,UAAW,OAAQzD,MAAO,OAAQ4F,SAAS,GAAD,OAAKA,EAAL,OAAxD,SACE,cAAC,gBAAD,CACEuQ,YAAU,EACVC,QAAS,CACPC,KAAM7U,EACNoJ,MAAOA,EACP0L,OAAQhB,EACRiB,cAAc,EACdC,aAAa,EACbC,aAAa,EACbC,YAAY,EACZC,QAAS,EACTC,QAAS,CAAC,yBAA0B,yBACpCC,eAAe,EACfC,eAAe,EACfC,mBAAmB,EACnBC,UAAW,CACT,aAAc,iBAGlBC,eAAgB,SAACC,IAxEM,SAACA,GAE5BC,OAAOD,OAASA,EAChB7B,EAAkB6B,GAsEZE,CAAqBF,GACrBA,EAAOG,QAAQ,OAAQ,c,kECuBlBC,GAhHE,WAAO,IAAD,EAUjB7V,qBAAWC,KARbF,EAFmB,EAEnBA,SACAoE,EAHmB,EAGnBA,SACAgF,EAJmB,EAInBA,MACA0K,EALmB,EAKnBA,SACAiC,EANmB,EAMnBA,qBACAC,EAPmB,EAOnBA,qBACAC,EARmB,EAQnBA,kBACAC,EATmB,EASnBA,qBAGMhX,EAAOC,cAAPD,GAEFiX,EAAiB/X,YAAW,CAChCC,KAAM,CACJG,MAAO,MACP6I,OAAQ,OACR,QAAS,CACP+O,KAAM,WAGR,WAAY,CACVxX,YAAa,WAEf,UAAW,CACTA,YAAa,WAGf,oBAAqB,CACnBF,MAAO,SAET,kBAAmB,CACjB8F,gBAAiB,QACjB9F,MAAO,SAET,SAAU,CACRuF,QAAS,OACToE,cAAe,YAxBEjK,CA2BpBiY,MAQH,OANAhW,qBAAU,WACRC,IAAOC,GAAG,6BAA6B,SAACC,GACtCwV,EAAqBxV,EAAWtB,GAAI,QAErC,IAGD,sBAAK6C,MAAO,CAAEsF,OAAQ,aAAtB,UACE,eAAC8O,EAAD,CAAgBzV,QAAQ,SAAxB,UACE,cAAC4V,GAAA,EAAD,CAAYpX,GAAG,kBAAkB6C,MAAO,CAAErD,MAAO,SAAjD,sBAGA,eAAC6X,GAAA,EAAD,CACEC,QAAQ,kBACRnX,MAAOW,EACPsC,SAAU,SAACoG,GAAD,OAAOsN,EAAqBtN,EAAEvF,OAAO9D,MAAiBH,GAAI,IAHtE,UAKE,cAACuX,GAAA,EAAD,CAAUpX,MAAO,gBAAjB,iBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,cAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,gBAAjB,oBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,kBAAjB,wBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,iBAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,YAAjB,oBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,aAAjB,iBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,cAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,iBAAjB,2BAIJ,eAAC8W,EAAD,CAAgBzV,QAAQ,SAAxB,UACE,cAAC4V,GAAA,EAAD,CAAYvU,MAAO,CAAErD,MAAO,SAA5B,sBACA,eAAC6X,GAAA,EAAD,CAAQlX,MAAO+E,EAAU9B,SAAU,SAACoG,GAAD,OAAOqN,EAAqBrN,EAAEvF,OAAO9D,QAAxE,UACE,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,kBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,GAAjB,wBAIJ,eAAC8W,EAAD,CAAgBzV,QAAQ,SAAxB,UACE,cAAC4V,GAAA,EAAD,CAAYvU,MAAO,CAAErD,MAAO,SAA5B,mBACA,eAAC6X,GAAA,EAAD,CAAQlX,MAAO+J,EAAO9G,SAAU,SAACoG,GAAD,OAAOuN,EAAkBvN,EAAEvF,OAAO9D,QAAlE,UACE,cAACoX,GAAA,EAAD,CAAUpX,MAAO,UAAjB,qBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,kBAAjB,wBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,UAAjB,yBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,OAAjB,mCACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,UAAjB,6BACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,UAAjB,qBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,aAAjB,wBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,qBAAjB,6BAIJ,eAAC8W,EAAD,CAAgBzV,QAAQ,SAAxB,UACE,cAAC4V,GAAA,EAAD,CAAYvU,MAAO,CAAErD,MAAO,SAA5B,sBACA,eAAC6X,GAAA,EAAD,CAAQlX,MAAOyU,EAAUxR,SAAU,SAACoG,GAAD,OAAOwN,EAAqBxN,EAAEvF,OAAO9D,QAAxE,UACE,cAACoX,GAAA,EAAD,CAAUpX,MAAO,UAAjB,qBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,MAAjB,iBACA,cAACoX,GAAA,EAAD,CAAUpX,MAAO,QAAjB,6B,yHClGJsH,GAAYC,aAAW,SAACwC,GAAD,OAC3BvC,YAAa,CACXxI,KAAM,CACJgJ,OAAQ,OACRD,SAAU,EACVhD,SAAU,IAEZsS,OAAQ,CACNtS,SAAU,GACV5F,MAAO,OACPyD,UAAW,OACX0U,cAAe,EACfjY,MAAO,UACP4J,WAAY,IACZ,kBAAmB,CACjB5J,MAAO,WAET,SAAU,CACRF,MAAO,QAET,QAAS,CACPA,MAAO,GACPD,OAAQ,KAGZqY,IAAK,CACH3S,QAAS,OACT4S,eAAgB,SAChBC,WAAY,SACZC,UAAW,EACXxY,OAAQ,GACRD,QAAS,YACTgK,WAAY,IACZ0O,WAAY,OACZjT,aAAc,EACdkT,WAAY,SACZC,SAAU,SACVC,aAAc,YAEhBC,OAAQ,CACN9P,OAAQ,+BACRgC,UAAW,gCACXvF,aAAc,EACdvF,MAAO,IACP6Y,OAAQ,EACRjT,SAAU,GACV1F,MAAO,UACP8F,gBAAiB,WAEnB8S,OAAQ,CACNC,aAAc,oBACdjZ,QAAS,WACTgK,WAAY,KAEdkP,UAAW,CACTlZ,QAAS,GACTE,MAAO,OACPE,MAAO,QACP6Y,aAAc,oBACd,UAAW,CACTxT,aAAc,EACdS,gBAAiB,UACjBlG,QAAS,EACTmZ,WAAYrO,EAAMsO,YAAYC,OAAO,CAAC,eAAgB,eACtDrQ,OAAQ,oBACRlD,SAAU,GACV,UAAW,CACTkF,UAAU,GAAD,OAAKsO,aAAK,UAAW,KAArB,iBACThZ,YAAa,aAInBiZ,MAAO,CACLvO,UAAW,OACXjC,OAAQ,EACR3I,MAAO,UACPsI,WAAY,UACZ5C,SAAU,GACV,+BAAgC,CAC9B1F,MAAO,uBAGXoZ,OAAQ,CACN9V,UAAW,OACX8U,WAAY,aACZxY,QAAS,EACT,0BAA2B,CACzBkG,gBAAiB,WAEnB,uBAAwB,CACtBA,gBAAiB,YAGrBuT,oBAAqB,CACnBC,SAAU,YAEZC,aAAc,CACZzZ,MAAO,GACPD,OAAQ,GACR2Z,YAAa,EACbC,YAAa,GAEfzZ,MAAO,CACLF,MAAO,GACPD,OAAQ,GACR6Z,WAAY,EACZrU,aAAc,EACdmU,YAAa,EACbnB,UAAW,GAEbjK,KAAM,CACJ1F,SAAU,GAEZiR,MAAO,CACLC,QAAS,GACT9Z,MAAO,GACPD,OAAQ,SAKC,SAASga,GAAT,GAA+D,IAAlClZ,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUkZ,EAAgB,EAAhBA,OAAQ1W,EAAQ,EAARA,KAC7DuD,EAAUsB,KAD2D,EAE3C8R,IAAMrZ,SAA6B,MAFQ,mBAEpEsZ,EAFoE,KAE1DC,EAF0D,OAInCF,IAAMrZ,SAAsB,IAJO,mBAIpEwZ,EAJoE,KAItDC,EAJsD,KAKrEzP,EAAQ0P,eAkBRC,EAAOC,QAAQN,GACfxZ,EAAK6Z,EAAO,0BAAuB9K,EAEzC,OACE,eAAC,IAAMgL,SAAP,WACE,sBAAKtX,UAAW0D,EAAQhH,KAAxB,UACE,eAAC6a,GAAA,EAAD,CAAYC,eAAa,EAACxX,UAAW0D,EAAQqR,OAAQ0C,mBAAkBla,EAAI8D,QAtB7D,SAACT,GACnBsW,EAAgBxZ,GAChBsZ,EAAYpW,EAAM8W,gBAoBd,UACE,+BAAOvX,IACP,cAAC,KAAD,OAEDzC,EAAM+G,KAAI,SAACxD,GAAD,OACT,qBAEEjB,UAAW0D,EAAQuR,IACnB7U,MAAO,CACLyC,gBAAiB5B,EAAMlE,MACvBA,MAAO0K,EAAM/F,QAAQiW,gBAAgB1W,EAAMlE,QAL/C,SAQGkE,EAAMuC,MAPFvC,EAAMuC,YAWjB,eAACoU,GAAA,EAAD,CAAQra,GAAIA,EAAI6Z,KAAMA,EAAML,SAAUA,EAAU5O,UAAU,eAAenI,UAAW0D,EAAQ+R,OAA5F,UACE,qBAAKzV,UAAW0D,EAAQiS,OAAxB,0DACA,cAACkC,GAAA,EAAD,CACET,MAAI,EACJU,QAtCY,SAAClX,EAA8BmX,GAClC,gBAAXA,IAGJpa,EAASsZ,GACLF,GACFA,EAASiB,QAEXhB,EAAY,QA+BNiB,UAAQ,EACRvU,QAAS,CACPwS,MAAOxS,EAAQwS,MACfC,OAAQzS,EAAQyS,OAChBC,oBAAqB1S,EAAQ0S,qBAE/B1Y,MAAOuZ,EACPtW,SAAU,SAACC,EAAOsX,GAChBhB,EAAgBgB,IAElBC,sBAAoB,EACpBC,eAAa,EACbC,WAAY,kBAAM,MAClBC,cAAc,iBACdC,aAAc,SAACpC,EAAD,OAAWqC,EAAX,EAAWA,SAAX,OACZ,eAAC,IAAMlB,SAAP,WACE,cAAC,KAAD,CACEtX,UAAW0D,EAAQ4S,aACnBlW,MAAO,CAAEqY,WAAYD,EAAW,UAAY,YAE9C,sBAAMxY,UAAW0D,EAAQ3G,MAAOqD,MAAO,CAAEyC,gBAAiBsT,EAAOpZ,SACjE,sBAAKiD,UAAW0D,EAAQyH,KAAxB,UACGgL,EAAO3S,KACR,uBACC2S,EAAOuC,eAEV,cAAC,KAAD,CAAW1Y,UAAW0D,EAAQgT,MAAOtW,MAAO,CAAEqY,WAAYD,EAAW,UAAY,gBAGrFvF,QAAS,YAAI4D,GAAQ8B,MAAK,SAAC1Z,EAAG2Z,GAE5B,IAAIC,EAAKnb,EAAMob,QAAQ7Z,GACvB4Z,GAAa,IAARA,EAAYnb,EAAMoH,OAAS+R,EAAOiC,QAAQ7Z,GAAK4Z,EACpD,IAAIE,EAAKrb,EAAMob,QAAQF,GAEvB,OAAOC,GADPE,GAAa,IAARA,EAAYrb,EAAMoH,OAAS+R,EAAOiC,QAAQF,GAAKG,MAGtDC,eAAgB,SAAC7C,GAAD,OAAYA,EAAO3S,MACnCyV,YAAa,SAACzQ,GAAD,OACX,cAAC0Q,GAAA,EAAD,CACE3Y,IAAKiI,EAAO2Q,WAAW5Y,IACvB6Y,WAAY5Q,EAAO4Q,WACnBC,WAAS,EACTrZ,UAAW0D,EAAQmS,qB,kHCzN3ByD,GAAW,SAAC5O,GAChB,MAAa,SAATA,EAAwB,UACV,WAATA,EAA0B,UACvB,WAGR6O,GAAgB9c,YAAW,CAC/BC,KAAM,CAGJK,MAAO,QACP,QAAS,CACP0X,KAAM,SAER,WAAY,CACV1X,MAAO,WATSN,CAYnB+c,MAoEYC,GAlEa,SAAC,GAAgD,IAA9Cpc,EAA6C,EAA7CA,KACrBqc,EAAuBpb,qBAAWqb,MAAlCD,mBADkE,EAGpCjc,mBAAS,IAH2B,mBAGnEmc,EAHmE,KAGtDC,EAHsD,OAIlD/C,IAAMrZ,SAAS,GAJmC,mBAInEqc,EAJmE,KAI7DC,EAJ6D,KAKpEC,EAASC,sBACP1c,EAAOC,cAAPD,GAERmB,qBAAU,WAAO,IAAD,EAER9B,EAASyK,KAAKC,OAAM,UAAA0S,EAAOxT,eAAP,eAAgB0T,cAAe,IACzDL,EAAejd,KACd,IAEH,IAWMud,EAAQ9S,KAAKC,MACjBjK,EAAKyH,OAAS8U,IAAgB,EAAIvc,EAAKyH,OAAS8U,EAAcvc,EAAKyH,OAAS8U,EAAc,GAE5F,OACE,qCACE,cAAC3V,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAWC,KAAO,wBAA7B,SACE,cAACma,GAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,WAAWta,UAAWC,KAAO,kBAAmBM,IAAKyZ,EAAtF,UACIJ,EAAc,EACZvc,EAAKkd,OAAOT,EAAO,GAAKF,GAAcE,EAAO,GAAKF,EAAcA,GAChEvc,GACFoH,KAAI,SAAC+V,EAA0Bza,GAC/B,OACE,eAAC0a,GAAA,EAAD,CAEE1F,QAAM,EACN/U,UAAWC,KAAO,aAClBoB,QAAS,kBA3BFqZ,EA2BoBF,EAAGE,iBA1B1Cxb,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,oBACHC,KAAM,CAAEob,YAAaA,GACrBhb,aAAc,SACbib,MAAK,SAAChb,GACP+Z,EAAmB/Z,EAASL,KAAM/B,MAPlB,IAACmd,GAuBT,UAME,qBAAKta,MAAO,CAAEqF,SAAU,GAAxB,mBAAiC+U,EAAGE,YAApC,aAAoDF,EAAGI,kBACvD,qBAAKxa,MAAO,CAAErD,MAAOuc,GAASkB,EAAGK,YAAaC,YAAa,MAAOnU,WAAY,QAA9E,SACG6T,EAAGK,eAPD9a,UAcf,cAACkE,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAWC,KAAO,oBAA7B,SACE,cAACsZ,GAAD,CACEwB,MAAM,UACNZ,MAAOA,EACPL,KAAMA,EACNnZ,SAAU,SAACC,EAAOkS,GAAR,OAAgBiH,EAAQjH,IAClC/V,MAAM,UACNiD,UAAWC,KAAO,8B,qBChEtBzD,GAAeC,YAAW,CAC9BC,KAAM,CACJE,OAAQ,OACRC,MAAO,OACP,uBAAwB,CACtB4F,SAAU,OACV9F,QAAS,MACTG,QAAS,OACTC,MAAO,WAET,sBAAuB,CACrBA,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxB0I,OAAQ,yBAxBKlJ,CA4BlBS,KAiKY8d,GA/JyB,SAAC,GASlC,IARLC,EAQI,EARJA,UACAJ,EAOI,EAPJA,WACAK,EAMI,EANJA,KACA9b,EAKI,EALJA,IACA+b,EAII,EAJJA,aACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,QACAC,EACI,EADJA,OACI,EAC4B7d,mBAAiC,IAD7D,mBACGkC,EADH,KACa4b,EADb,OAE8B9d,mBAAS,CAAE+d,OAAO,EAAOC,QAAS,KAFhE,mBAEGC,EAFH,KAEcC,EAFd,KAGQ9b,EAAWrC,cAAfD,GAERmB,qBAAU,WACRQ,IACG0c,KADH,UACWvc,IADX,uBAC4Cwc,KACzClB,MAAK,SAACmB,GAAD,OAAgDP,EAAYO,EAAIxc,WACvE,IATC,MAW+ChB,qBAAWqb,MAAtDD,EAXJ,EAWIA,mBAAoBqC,EAXxB,EAWwBA,mBACpBxe,EAAOC,cAAPD,GAEFye,EAAa,WACjB,IAAMC,EAAe,uCAAG,sCAAAhd,EAAA,2DACD,IAAIid,KAAI9c,GACZ,oBADT+c,EADc,EACdA,WAC0C,eAAbA,EAFf,gBAGpBR,EAAa,CACXH,OAAO,EACPC,QAAS,kDALS,uCAQ0Dvc,IAAM,CAClFC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,8BACHK,aAAc,OACdJ,KAAM,CACJF,IAAKA,EACL+c,SAAUA,KAdM,gBAQZ7c,EARY,EAQZA,KASAkc,EAAsBlc,EAAtBkc,MAAOY,EAAe9c,EAAf8c,WAEXZ,EACFG,EAAa,CACXH,OAAO,EACPC,QAAS,6BAGXM,EACE,CACEK,aACAD,YAEFtc,GACA,GA/BgB,4CAAH,qDAqCrB,OACE,cAACsB,EAAA,EAAD,CACEnB,UAAWC,KAAO,oBAClBG,MAAO,CAAErD,MAAO,WAChBsE,QAAO,sBAAE,sBAAApC,EAAA,sEACDgd,IADC,2CAHX,SAOE,cAAC,KAAD,OAKAJ,EAAc,WAClB,IAAMQ,EAAIpB,EAAUxW,KAAI,SAAC+V,GAAD,OAAQA,EAAGhX,QAC7BiG,EAAIoR,EAAWpW,KAAI,SAAC+V,GAAD,OAAQA,EAAGhX,QAC9B8Y,EAAIpB,EAAKzW,KAAI,SAAC+V,GAAD,OAAQA,EAAGhX,QAC9B,MAAO,CACLyX,UAAWoB,EAAEvX,OAASuX,EAAIE,KAC1B1B,WAAYpR,EAAE3E,OAAS2E,EAAI+S,KAC3BtB,KAAMoB,EAAExX,OAASwX,EAAIG,OAInBC,EAAa,uCAAG,4BAAAzd,EAAA,sEAC0CC,IAAM,CAClEC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,uBACHC,KAAMuc,IACNnc,aAAc,SALI,OACdC,EADc,OAOpB4b,EAAY5b,EAASL,MAPD,2CAAH,qDAkBnB,OACE,mCACE,eAAC2E,EAAA,EAAD,CAAMC,WAAS,EAAClE,UAAWC,KAAOvD,KAAlC,UACE,eAACuH,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAWC,KAAO,iBAA7B,UACE,8EACA,cAAC,GAAD,CACEU,SAAU,SAACoG,GACTuU,EAAOvU,EAAEvF,OAAO9D,QAElBA,MAAO0B,EACPoc,MAAOE,EAAUF,MACjBmB,WAAYjB,EAAUD,QACtB1c,QAAQ,WACRuC,KAAK,QACL6X,WAAY,CACVyD,aAAc,cAACZ,EAAD,UAKpB,eAAC/X,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAWC,KAAO4c,aAA7B,UACE,cAACjG,GAAD,CACElZ,MAAOud,EACPtd,SAAUwd,EACVtE,OAAQiG,KACR3c,KAAK,cAEP,cAACyW,GAAD,CAAmBlZ,MAAOwd,EAAMvd,SAAU0d,EAASxE,OAAQkG,KAAU5c,KAAK,SAC1E,cAACyW,GAAD,CACElZ,MAAOmd,EACPld,SAAUyd,EACVvE,OAAQmG,KACR7c,KAAK,kBAGT,cAAC8D,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAWC,KAAO,aAA7B,SACE,eAACgd,GAAA,EAAD,CAAalgB,MAAM,UAAnB,UACE,cAACoE,EAAA,EAAD,CAAQE,QA9CQ,WACxB,IAAM6b,EAAW7V,KAAKC,MAAsB,IAAhBD,KAAKE,UACjCrI,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,oBACHC,KAAM,CAAEob,YAAawC,GACrBxd,aAAc,SACbib,MAAK,SAAChb,GAAD,OAAc+Z,EAAmB/Z,EAASL,KAAM/B,OAuChD,4BACA,cAAC4D,EAAA,EAAD,CACEE,QAAO,sBAAE,sBAAApC,EAAA,sEACDyd,IADC,2CADX,kCASJ,cAACS,GAAA,EAAD,CAASnd,UAAWC,KAAOmd,UAC3B,cAACnZ,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACmZ,UAAU,SAASrd,UAAWC,KAAOqd,WAA1D,SACE,cAACC,GAAD,CAAgBlgB,KAAMsC,Y,6BCvKjB6d,GAnCE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,aACVC,EAAmCD,EAAnCC,cAAezC,EAAoBwC,EAApBxC,UAAWC,EAASuC,EAATvC,KAElC,OACE,8BACE,eAACha,EAAA,EAAD,CAAKlB,UAAU,WAAf,UACE,6BAAK0d,EAAc9C,iBAClB/N,aAAM6Q,EAAcC,UACrB,cAACR,GAAA,EAAD,IACA,eAAClZ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAU,iBAArB,SACE,qBAAKA,UAAW,QAAhB,SACGkb,EAAKzW,KAAI,SAACwQ,EAAKlV,GAAN,OACR,cAAC6d,GAAA,EAAD,CAAM3c,MAAOgU,EAAiBlY,MAAM,WAAbgD,UAI7B,cAACkE,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAW,iBAAtB,SACE,qBAAKA,UAAU,QAAf,SACGib,EAAUxW,KAAI,SAACoZ,EAAS9d,GAAV,OACb,cAAC6d,GAAA,EAAD,CAAM3c,MAAO4c,EAAqB9gB,MAAM,WAAbgD,UAIjC,cAACkE,EAAA,EAAD,CAAMG,MAAI,EAACpE,UAAW,iBAAtB,SACE,mBAAG8d,KAAI,UAAKJ,EAAcK,YAAnB,YAA0Cvc,OAAO,SAASwc,IAAI,IAArE,SACE,uD,UCSCR,I,OAhCE,SAAC,GAA0D,IAAxDS,EAAuD,EAAvDA,aACV9B,EAAyB8B,EAAzB9B,SAAUC,EAAe6B,EAAf7B,WACZ8B,EAAUjE,sBAehB,OAbAnD,IAAMpY,WAAU,WACVwf,GACFC,aAAoBD,EAAQ1X,QAAU,CACpC4X,WAAY,CACV,CAAE1b,KAAM,MAAOI,MAAO,MAAOR,SAAS,GACtC,CAAEI,KAAM,MAAOI,MAAO,MAAOR,SAAS,GACtC,CAAEI,KAAM,KAAMI,MAAO,KAAMR,SAAS,GACpC,CAAEI,KAAM,MAAOI,MAAO,MAAOR,SAAS,QAI3C,CAAC4b,IAGF,gCACgB,mBAAb/B,EACC,qBAAKnc,UAAW,aAAcO,IAAK2d,EAAnC,SACGrR,aAAMuP,KAGT,qBAAKpc,UAAW,UAAWO,IAAK2d,EAAhC,SACGrR,aAAMuP,KAGX,cAACe,GAAA,EAAD,SCnBSkB,GAVK,WAAO,IAAD,EAC6B/f,qBAAWqb,MAAxD8D,EADgB,EAChBA,aAAca,EADE,EACFA,aAAcL,EADZ,EACYA,aAEpC,OACE,qBAAK7d,MAAO,CAAEsF,OAAQ,QAAtB,SACG4Y,EAAe,cAACC,GAAD,CAAYN,aAAcA,IAAmB,cAAC,GAAD,CAAUR,aAAcA,OCD5E,SAASe,KAAiB,IAC3B3e,EAAWrC,cAAfD,GAD8B,EAEuCe,qBAC3Eqb,MADM8E,EAF8B,EAE9BA,SAAUC,EAFoB,EAEpBA,aAAcC,EAFM,EAENA,qBAAsB5C,EAFhB,EAEgBA,mBAFhB,EAKJte,mBAAsB,CAACqf,KAAc,KALjC,mBAK/B7B,EAL+B,KAKpBE,EALoB,OAMd1d,mBAAsB,CAACsf,KAAS,KANlB,mBAM/B7B,EAN+B,KAMzBG,EANyB,OAOF5d,mBAAsB,IAPpB,mBAO/Bod,EAP+B,KAOnBO,EAPmB,OAQhB3d,mBAAiB,oDARD,mBAQ/B2B,EAR+B,KAQ1Bkc,EAR0B,KAoBtC,OAVA5c,qBAAU,WACRC,IAAOC,GAAG,0BAA0B,SAAClB,GACnCihB,EAAqBjhB,MAGvBiB,IAAOC,GAAG,mBAAmB,SAAClB,GAC5Bqe,EAAmBre,EAAOmC,GAAQ,QAEnC,IAGD,eAAC,KAAD,CAAM+e,cAAeH,EAAUI,SAAU,SAAC9e,GAAD,OAAW2e,EAAa3e,IAAQC,UAAU,YAAnF,UACE,eAAC,KAAD,CAASI,MAAO,CAAEiF,WAAY,WAA9B,UACE,cAAC,KAAD,sBACA,cAAC,KAAD,2BACA,cAAC,KAAD,0BAEF,cAAC,KAAD,UACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAUjF,MAAO,CAAEqF,SAAU,GAA7B,SACE,cAAC,GAAD,CACEwV,UAAWA,EACXC,KAAMA,EACNL,WAAYA,EACZzb,IAAKA,EACL+b,aAAcA,EACdE,QAASA,EACTD,cAAeA,EACfE,OAAQA,MAGZ,cAAC,KAAD,UACE,cAAC,GAAD,SC0GOwD,UA/IG,WAAO,IAAD,EACqBrgB,cAAnCD,EADc,EACdA,gBAAiBugB,EADH,EACGA,cACjBhX,EAASzJ,qBAAW8T,MAApBrK,KACAsK,EAAc/T,qBAAWgU,MAAzBD,UAEFjV,GADgB6I,mBACFgU,uBALE,EAMExc,mBAAS,GANX,mBAMfJ,EANe,KAMT2hB,EANS,OAOAvhB,mBAAS,IAPT,mBAOfwhB,EAPe,KAOVC,EAPU,OAQMzhB,oBAAS,GARf,mBAQf0hB,EARe,KAQPC,EARO,OASgB3hB,qBAThB,mBASfgL,EATe,KASF4W,EATE,OAUsB5hB,mBAAc,MAVpC,mBAUfH,EAVe,KAUC4U,EAVD,KAWd3U,EAAOC,cAAPD,GAEFse,EAAc,WAClB,MAAO,CACLrY,MAAU,OAAJuE,QAAI,IAAJA,OAAA,EAAAA,EAAMvE,MAAOuE,EAAKvE,KAAO6O,EAC/BxL,YAAgB,OAAJkB,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,YAAakB,EAAKlB,WAAa,GACjDhH,OAAQtC,IAIN+hB,EAAS,SAACC,GAAD,OACb,mCACE,cAACpe,EAAA,EAAD,CACEf,MAAO,CAAErD,MAAO,SAChBsE,QAAS,WACPme,aAAaC,QAAQ,aAAc7S,KAAKsC,WAAU,IAClD6P,EAAcQ,IAJlB,iCAYEG,EAAsB,SAACpgB,EAAkBqgB,GAC7C,IAAMxU,EAAOwU,EAAQ,kBAAoB,gBACnCC,EAAeD,EAAQ,UAAY,QACzCnhB,EAAgB,GAAD,OAAIc,EAAKkE,KAAT,YAAiB2H,GAAQ,CACtC0U,kBAAkB,EAClB9gB,QAAS6gB,KAIblhB,qBAAU,WACR,IAAMohB,EAAoBN,aAAaO,QAAQ,gBAC3BD,GAAoBlT,KAAKC,MAAMiT,KAGjDthB,EAAgB,kEAAmE,CACjF8gB,WAIJ3gB,IAAOiB,KAAK,YAAaic,KAEzBld,IAAOC,GAAG,aAAa,SAACrB,GAAD,OAAgB2hB,EAAO3hB,MAC9CoB,IAAOC,GAAG,mBAAmB,SAACU,GAC5B+f,EAAe/f,GACfogB,EAAoBpgB,GAAM,MAG5BX,IAAOC,GAAG,aAAa,WACrBwgB,GAAU,MAGZzgB,IAAOC,GAAG,aAAa,SAACU,GACtBogB,EAAoBpgB,GAAM,QAE3B,IAEH,IAAM0gB,EAAoB,WACxB,IAAMpjB,EAASyK,KAAKC,MAAMlK,EAAaoJ,QAAS0T,cAC1C+F,EAAerjB,EAAS,IAAMA,EAAS,GAAKA,EAAS,GAC3DoiB,EAAQ3X,KAAKC,MAAM2Y,IACnB3iB,EAAe4iB,WAGjB,OACE,qCACE,qBAAKlgB,UAAWI,IAAM1D,KAAtB,SACE,eAAC,IAAD,CAAiByjB,YAAY,aAA7B,UACE,cAAC,IAAD,CAAe/f,MAAO,CAAEggB,WAAY,QAApC,SACE,eAAC,IAAD,CAAiBD,YAAY,WAA7B,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAiBA,YAAY,aAA7B,SACE,cAAC,IAAD,CAAengB,UAAWI,IAAM,cAAhC,SACE,cAAC,GAAD,UAKN,cAAC,IAAD,CACEJ,UAAWqgB,YAAKjgB,IAAMkgB,SAAUlgB,IAAM,sBACtCmgB,aAAc,kBAAMP,OAEtB,cAAC,IAAD,CAAeQ,KAAM,IAArB,SACE,eAAC,IAAD,CAAiBL,YAAY,aAA7B,UACE,cAAC,IAAD,CAAe/f,MAAO,CAAEkC,QAAS,QAAjC,SACE,cAAC,GAAD,CAAYhF,eAAgBA,EAAgB4U,kBAAmBA,MAEjE,cAAC,IAAD,CACElS,UAAWqgB,YAAKjgB,IAAMkgB,SAAUlgB,IAAM,wBACtCmgB,aAAc,kBAAMP,OAEtB,cAAC,IAAD,CAAeQ,KAAM,GAArB,SACE,cAAC,EAAD,CAAiBnjB,KAAMA,EAAMD,YAAaA,EAAaE,eAAgBA,WAK7E,cAAC,IAAD,CACE0C,UAAWqgB,YAAKjgB,IAAMkgB,SAAUlgB,IAAM,sBACtCmgB,aAAc,kBAAMP,OAEtB,cAAC,IAAD,UACE,eAAC,IAAD,CAAiBG,YAAY,aAA7B,UAEE,cAAC,IAAD,CAAengB,UAAWI,IAAM,cAAeogB,KAAM,IAArD,SACE,cAACC,GAAD,CAAWjY,OAAQjL,EAAIwK,KAAM8T,IAAepT,YAAaA,MAE3D,cAAC,IAAD,CAAgBzI,UAAWqgB,YAAKjgB,IAAMkgB,SAAUlgB,IAAM,0BACtD,cAAC,IAAD,CAAeJ,UAAWI,IAAM,YAAhC,SAEE,cAAC,EAAD,CAAS0F,SAAU+V,IAAe9V,SAAUkZ,gBAMtD,eAAC,IAAD,CAAejf,UAAWI,IAAMsgB,OAAQF,KAAM,KAA9C,uBACY,0CADZ,uBACqD,KADrD,SAC4D,KAC1D,mBAAG1C,KAAK,8CAA8Ctc,OAAO,UAA7D,4BAML2d,EAAS,cAAC,IAAD,CAAUrS,GAAI,CAAE6T,SAAU,QAASC,MAAO,CAAEC,kBAAkB,MAAe","file":"static/js/7.482f0906.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProblemList_root__2FzmS\",\"request-field\":\"ProblemList_request-field__1CDjc\",\"adornment-button\":\"ProblemList_adornment-button__BVaWd\",\"autocomplete\":\"ProblemList_autocomplete__2P27U\",\"btn-group\":\"ProblemList_btn-group__2JIvX\",\"pagination\":\"ProblemList_pagination__33K6A\",\"divider\":\"ProblemList_divider__2rLxt\",\"pagination-container\":\"ProblemList_pagination-container__ecGX0\",\"list-container\":\"ProblemList_list-container__2kEGV\",\"list-item\":\"ProblemList_list-item__3aQZ9\",\"pagination-group\":\"ProblemList_pagination-group__33ceG\",\"pagination-element\":\"ProblemList_pagination-element__2kb7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputOutputFile_root__2Ij68\",\"toolbar\":\"InputOutputFile_toolbar__1SH2H\",\"btn-box\":\"InputOutputFile_btn-box__3sO5L\",\"text-area\":\"InputOutputFile_text-area__3j61z\",\"loader\":\"InputOutputFile_loader__f36d9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Room_root__Q64jF\",\"header\":\"Room_header__3-ybm\",\"pane-color\":\"Room_pane-color__2gUSJ\",\"monaco-remote-cursor\":\"Room_monaco-remote-cursor__JpKw9\",\"middle-pane-content\":\"Room_middle-pane-content__1-kSC\",\"chat-app\":\"Room_chat-app__3_RGZ\",\"splitter\":\"Room_splitter__3pMl4\",\"splitter-verticle\":\"Room_splitter-verticle__3q8IZ\",\"splitter-horizontal\":\"Room_splitter-horizontal__2OiuS\",\"footer\":\"Room_footer__x0rKd\"};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Paper, Tab, Tabs, Button, Box, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\nimport styles from \"./InputOutputFile.module.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\ninterface AppProps {\r\n  TextAreaRef: React.RefObject<HTMLDivElement>;\r\n  editorInstance: any;\r\n  rows: number;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    // #115293\r\n    padding: \"1rem\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      outline: \"none\",\r\n      color: \"whitesmoke\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst InputOutputFile: React.FC<AppProps> = ({ TextAreaRef, rows, editorInstance }) => {\r\n  const { id } = useParams<Record<string, string>>();\r\n  const [value, setValue] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [outputData, setOutputData] = useState<Record<string, any>>({\r\n    output: \"\",\r\n    memory: 1,\r\n    cpuTime: 1,\r\n  });\r\n\r\n  const { language } = useContext(SettingContext) as SettingsContextType;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-input-data\", (inputData: string) => {\r\n      setInputText(inputData);\r\n    });\r\n    socket.on(\"emit-code-executed\", (outputResponse: Record<string, any>) => {\r\n      enqueueSnackbar(\r\n        outputResponse.memory === null || outputResponse.memory === null\r\n          ? \"Error in code-execution\"\r\n          : \"Code ran successfully\",\r\n        {\r\n          variant: outputResponse.memory === null || outputResponse.memory === null ? \"error\" : \"success\",\r\n        }\r\n      );\r\n      setOutputData(outputResponse);\r\n      setValue(1);\r\n    });\r\n  }, []);\r\n\r\n  const submitProblem = async () => {\r\n    setLoading(true);\r\n    setValue(1);\r\n    const response = await axios({\r\n      method: \"POST\",\r\n      url: `${SERVER_URL}/api/execute`,\r\n      data: {\r\n        script: editorInstance.getValue(),\r\n        language: language,\r\n        stdin: inputText,\r\n      },\r\n      responseType: \"json\",\r\n    });\r\n    socket.emit(\"code-executed\", { data: response.data, roomID: id });\r\n    enqueueSnackbar(\r\n      response.data.memory === null || response.data.memory === null\r\n        ? \"Error in code-execution\"\r\n        : \"Code ran succesfully\",\r\n      {\r\n        variant: response.data.memory === null || response.data.memory === null ? \"error\" : \"success\",\r\n      }\r\n    );\r\n    setOutputData(response.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const inputTextFn = (value: string) => {\r\n    setInputText(value);\r\n    socket.emit(\"input-data\", { data: value, roomID: id });\r\n  };\r\n\r\n  /**\r\n   * Here we render text area based on index position and additional\r\n   * logic for handling how to display the output on code execution\r\n   * @param index - Tabs Index value 0 from output 1 from input\r\n   */\r\n  const RenderTextArea = ({ index }: { index: number }) => {\r\n    return loading ? (\r\n      <div className={styles.loader}>\r\n        <Loader type=\"Grid\" color=\"#f5f5f5\" height={80} width={80} />\r\n      </div>\r\n    ) : (\r\n      <div\r\n        style={{\r\n          padding: \"1rem\",\r\n          minHeight: \"70%\",\r\n          textAlign: \"left\",\r\n          color: outputData.memory === null || outputData.memory === null ? \"#dd2c00\" : \"inherit\",\r\n        }}\r\n      >\r\n        <pre>{outputData.output}</pre>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root} ref={TextAreaRef}>\r\n      <Paper className={styles.toolbar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={(event, value) => handleChange(event, value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          centered\r\n        >\r\n          <Tab label=\"Input\"></Tab>\r\n          <Tab label=\"Output\"></Tab>\r\n        </Tabs>\r\n        <Box className={styles[\"btn-box\"]}>\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"inherit\"\r\n            endIcon={<SendRoundedIcon />}\r\n            onClick={async () => {\r\n              await submitProblem();\r\n            }}\r\n          >\r\n            Run Code\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      <div className={styles[\"text-area\"]}>\r\n        {value === 0 ? (\r\n          <CssTextField\r\n            key=\"1\"\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            value={inputText}\r\n            onChange={(event) => inputTextFn(event.target.value)}\r\n            multiline\r\n            rows={rows}\r\n          />\r\n        ) : (\r\n          <RenderTextArea index={value} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputOutputFile;\r\n","import { Theme } from \"@material-ui/core/styles\";\r\nconst styles = ({ palette, spacing }: Theme) => {\r\n  const radius = spacing(2.5);\r\n  const size = spacing(4);\r\n  const rightBgColor = palette.primary.main;\r\n  // if you want the same as facebook messenger, use this color '#09f'\r\n  return {\r\n    avatar: {\r\n      width: size,\r\n      height: size,\r\n    },\r\n    leftRow: {\r\n      textAlign: \"left\",\r\n    },\r\n    rightRow: {\r\n      textAlign: \"right\",\r\n    },\r\n    msg: {\r\n      padding: spacing(1, 2),\r\n      borderRadius: 4,\r\n      marginBottom: 4,\r\n      display: \"inline-block\",\r\n      wordBreak: \"break-word\",\r\n      fontFamily:\r\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n      fontSize: \"14px\",\r\n    },\r\n    left: {\r\n      borderTopRightRadius: radius,\r\n      borderBottomRightRadius: radius,\r\n      backgroundColor: \"dimgrey\",\r\n    },\r\n    right: {\r\n      borderTopLeftRadius: radius,\r\n      borderBottomLeftRadius: radius,\r\n      backgroundColor: rightBgColor,\r\n      color: palette.common.white,\r\n    },\r\n    leftFirst: {\r\n      borderTopLeftRadius: radius,\r\n    },\r\n    leftLast: {\r\n      borderBottomLeftRadius: radius,\r\n    },\r\n    rightFirst: {\r\n      borderTopRightRadius: radius,\r\n    },\r\n    rightLast: {\r\n      borderBottomRightRadius: radius,\r\n    },\r\n  };\r\n};\r\nexport default styles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport styles from './ChatMessage-styles';\r\n\r\n// interface AppProps {\r\n//   classes?: any\r\n//   avatar: string;\r\n//   messages: string[];\r\n//   side: 'left' | 'right';\r\n//   GridContainerProps: Record<string, unknown>;\r\n//   GridItemProps: Record<string, unknown>;\r\n//   AvatarProps: Record<string, unknown>;\r\n//   getTypographyProps?: Function;\r\n// }\r\n\r\nconst ChatMsg = withStyles(styles, { name: 'ChatMsg' })((props) => {\r\n  const {\r\n    classes,\r\n    avatar,\r\n    messages,\r\n    side,\r\n    GridContainerProps,\r\n    GridItemProps,\r\n    AvatarProps,\r\n    getTypographyProps,\r\n  } = props;\r\n  const attachClass = (index) => {\r\n    if (index === 0) {\r\n      return classes[`${side}First`];\r\n    }\r\n    if (index === messages.length - 1) {\r\n      return classes[`${side}Last`];\r\n    }\r\n    return '';\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify={side === 'right' ? 'flex-end' : 'flex-start'}\r\n      {...GridContainerProps}\r\n    >\r\n      {side === 'left' && (\r\n        <Grid item {...GridItemProps}>\r\n          <Avatar\r\n            src={avatar}\r\n            {...AvatarProps}\r\n            className={cx(classes.avatar, AvatarProps.className)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={8}>\r\n        {messages.map((msg, i) => {\r\n          const TypographyProps = getTypographyProps(msg, i, props);\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <div key={msg.id || i} className={classes[`${side}Row`]}>\r\n              <Typography\r\n                align={'left'}\r\n                {...TypographyProps}\r\n                className={cx(\r\n                  classes.msg,\r\n                  classes[side],\r\n                  attachClass(i),\r\n                  TypographyProps.className\r\n                )}\r\n              >\r\n                {msg}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nChatMsg.propTypes = {\r\n  avatar: PropTypes.string,\r\n  messages: PropTypes.arrayOf(PropTypes.string),\r\n  side: PropTypes.oneOf(['left', 'right']),\r\n  GridContainerProps: PropTypes.shape({}),\r\n  GridItemProps: PropTypes.shape({}),\r\n  AvatarProps: PropTypes.shape({}),\r\n  getTypographyProps: PropTypes.func,\r\n};\r\nChatMsg.defaultProps = {\r\n  avatar: '',\r\n  messages: [],\r\n  side: 'left',\r\n  GridContainerProps: {},\r\n  GridItemProps: {},\r\n  AvatarProps: {},\r\n  getTypographyProps: () => ({}),\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { socket } from \"service/socket\";\r\nimport ChatMsg from \"./ChatMessage\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInfoSS } from \"types\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      paddding: \"1rem\",\r\n      height: \"inherit\",\r\n    },\r\n    formStyle: {\r\n      background: \"rgba(0, 0, 0,0.4)\",\r\n      padding: \"0.25rem\",\r\n      display: \"flex\",\r\n      boxSizing: \"border-box\",\r\n      backdropFilter: \"blur(10px)\",\r\n    },\r\n    inputStyle: {\r\n      padding: \"0 1rem\",\r\n      flexGrow: 1,\r\n      borderRadius: \"2rem\",\r\n      width: \"100%\",\r\n      margin: \"0.25rem\",\r\n      height: \"2rem\",\r\n      backgroundColor: \"#1A1D1E\",\r\n      color: \"whitesmoke\",\r\n      border: \"1px solid #3e3e42\",\r\n      \"&:focus\": {\r\n        outline: \"none\",\r\n        border: \"1px solid #0055bb\",\r\n      },\r\n    },\r\n    formButton: {\r\n      background: \"#333\",\r\n      border: \"none\",\r\n      padding: \"0 1rem\",\r\n      margin: \"0.25rem\",\r\n      borderRadius: \"3px\",\r\n      outline: \"none\",\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface MessageProps {\r\n  messages: string[];\r\n  socketID: string;\r\n  userInfo: UserInfoSS;\r\n}\r\n\r\nconst ChatApp = ({ userInfo, socketID }: { userInfo: UserInfoSS; socketID: string }) => {\r\n  const classes = useStyles();\r\n  const chatBoxRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [body, setBody] = useState<MessageProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (body: MessageProps) => {\r\n      receivedMessages(body);\r\n    });\r\n    const receivedMessages = (newMessage: MessageProps) => {\r\n      setBody((body) => {\r\n        return [...body, newMessage];\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!message) return;\r\n    const messageObject: MessageProps = {\r\n      messages: [message],\r\n      socketID: socketID,\r\n      userInfo: userInfo,\r\n    };\r\n    setBody((body) => {\r\n      return [...body, messageObject];\r\n    });\r\n    setMessage(\"\");\r\n    socket.emit(\"send-message\", messageObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) chatBoxRef.current.scrollIntoView();\r\n  }, [body]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          height: \"inherit\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{ margin: \"0px 0px 8px 0px\", padding: \"4px\", backgroundColor: \"#252526\", fontWeight: 600 }}\r\n        >\r\n          MESSENGER\r\n        </h1>\r\n        <div style={{ flexGrow: 1, margin: \"1rem\" }}>\r\n          {body.map((element, index) => {\r\n            if (element.socketID === socketID) {\r\n              return (\r\n                <ChatMsg\r\n                  key={index}\r\n                  avatar={element.userInfo.image_link}\r\n                  side={\"right\"}\r\n                  messages={[...element.messages]}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <ChatMsg key={index} messages={[...element.messages]} avatar={element.userInfo.image_link} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div style={{}} ref={chatBoxRef}>\r\n          <form onSubmit={sendMessage} id=\"chat-form\" className={classes.formStyle}>\r\n            <input\r\n              className={classes.inputStyle}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Start Chatting...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n","const getRandomColor = () => {\r\n  const avatar = [\r\n    \"https://i.pinimg.com/originals/57/47/06/57470642bba41d1b079cb9926117fe6e.jpg\", // goku\r\n    \"https://i.pinimg.com/236x/b6/d9/58/b6d9586cb24fdd802dd70d0c6b17f2b0.jpg\", // jerry 1\r\n    \"https://i.pinimg.com/236x/9d/aa/e2/9daae24f4ca34cfecb368d0590930934.jpg\", // jerry2\r\n    \"https://i1.sndcdn.com/avatars-000406450287-rukoyr-t500x500.jpg\", // squirtle\r\n    \"https://i.pinimg.com/originals/97/9e/a3/979ea3e13fe19f047f1918c640531edf.jpg\", // pikachu\r\n    \"https://i.pinimg.com/originals/6a/b8/ed/6ab8ed1a70bd7c744c7fda2fd0803b18.jpg\", // winneh\r\n    \"https://i.pinimg.com/originals/5a/6e/49/5a6e498e40b1dcd9e0fef062db163e93.jpg\", // tigor\r\n    \"https://i.pinimg.com/564x/1d/fc/27/1dfc278c0f56a18c98ada502916ee70b.jpg\", // stich\r\n    \"https://avatars.githubusercontent.com/u/47313528?v=4\", // github avatar\r\n    \"https://i1.sndcdn.com/avatars-000542389239-i206kr-t500x500.jpg\", // doge\r\n  ];\r\n\r\n  return avatar[Math.floor(Math.random() * avatar.length)];\r\n};\r\n\r\nexport default getRandomColor;\r\n","import React from \"react\";\r\nimport { Avatar, Button, withStyles, Theme, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport { UserInfoSS } from \"types\";\r\nimport getRandomAvatar from \"service/getRandomAvatar\";\r\n/**\r\n * Invoke Call Peer when the component loads and if the guest user is empty then chill just return\r\n */\r\n\r\ninterface AppProps {\r\n  params: string;\r\n  partnerUser?: UserInfoSS;\r\n  user?: UserInfoSS;\r\n}\r\n\r\nconst LightTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 1)\",\r\n    boxShadow: theme.shadows[2],\r\n    fontSize: \"14px\",\r\n    borderRadius: \"25px\",\r\n  },\r\n}))(Tooltip);\r\n\r\nconst RenderIcons = ({ user }: { user?: UserInfoSS }) => {\r\n  if (!user) return <></>;\r\n  return (\r\n    <>\r\n      <LightTooltip TransitionComponent={Zoom} title={user?.name || \"John Doe\"} placement=\"bottom\">\r\n        <Avatar\r\n          alt={user.name}\r\n          src={user.image_link || getRandomAvatar()}\r\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\r\n        >\r\n          {user.name.charAt(0)}\r\n        </Avatar>\r\n      </LightTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Icons: React.FC<AppProps> = ({ params, partnerUser, user }) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <RenderIcons user={user} />\r\n      {partnerUser?.roomID ? <RenderIcons user={partnerUser} /> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","/**\r\n * @module bindings/textarea\r\n */\r\n\r\nimport { createMutex } from \"lib0/mutex.js\";\r\nimport * as math from \"lib0/math.js\";\r\nimport * as Y from \"yjs\";\r\nimport * as func from \"lib0/function.js\";\r\nimport * as eventloop from \"lib0/eventloop.js\";\r\nimport * as diff from \"lib0/diff.js\";\r\nimport CodeMirror from \"codemirror\";\r\nimport invert from \"invert-color\";\r\n\r\nexport const cmOrigin = \"prosemirror-binding\";\r\n\r\n/**\r\n * @param {CodemirrorBinding} binding\r\n * @param {any} event\r\n */\r\nconst typeObserver = (binding, event) => {\r\n  binding._mux(() => {\r\n    const cmDoc = binding.cmDoc;\r\n    const cm = cmDoc.getEditor();\r\n    // Normally the position is right-associated\r\n    // But when remote changes happen, it looks like the remote user is hijacking your position.\r\n    // Just for remote insertions, we make the collapsed cursor left-associated.\r\n    // If selection is not collapsed, we only make \"to\" left associated\r\n    let anchor = cm.indexFromPos(cm.getCursor(\"anchor\"));\r\n    let head = cm.indexFromPos(cm.getCursor(\"head\"));\r\n    const switchSel = head < anchor;\r\n    // normalize selection so that anchor < head, switch back later\r\n    if (switchSel) {\r\n      const tmp = head;\r\n      head = anchor;\r\n      anchor = tmp;\r\n    }\r\n    const performChange = () => {\r\n      const delta = event.delta;\r\n      let index = 0;\r\n      for (let i = 0; i < event.delta.length; i++) {\r\n        const d = delta[i];\r\n        if (d.retain) {\r\n          index += d.retain;\r\n        } else if (d.insert) {\r\n          if (index < anchor || (anchor < head && index === anchor)) {\r\n            anchor += d.insert.length;\r\n          }\r\n          if (index < head) {\r\n            head += d.insert.length;\r\n          }\r\n          const pos = cmDoc.posFromIndex(index);\r\n          cmDoc.replaceRange(d.insert, pos, pos, cmOrigin);\r\n          index += d.insert.length;\r\n        } else if (d.delete) {\r\n          if (index < anchor) {\r\n            anchor = math.max(anchor - d.delete, index);\r\n          }\r\n          if (index < head) {\r\n            head = math.max(head - d.delete, index);\r\n          }\r\n          const start = cmDoc.posFromIndex(index);\r\n          const end = cmDoc.posFromIndex(index + d.delete);\r\n          cmDoc.replaceRange(\"\", start, end, cmOrigin);\r\n        }\r\n      }\r\n    };\r\n    // if possible, bundle the changes using cm.operation\r\n    if (cm) {\r\n      cm.operation(performChange);\r\n    } else {\r\n      performChange();\r\n    }\r\n    if (switchSel) {\r\n      const tmp = head;\r\n      head = anchor;\r\n      anchor = tmp;\r\n    }\r\n    cm.setSelection(cm.posFromIndex(anchor), cm.posFromIndex(head), {\r\n      scroll: false,\r\n    });\r\n  });\r\n};\r\n\r\nconst targetObserver = (binding, changes) => {\r\n  binding._mux(() => {\r\n    binding.doc.transact(() => {\r\n      if (changes.length > 1) {\r\n        // If there are several consecutive changes, we can't reliably compute the positions anymore. See y-codemirror#11\r\n        // Instead, we will compute the diff and apply the changes\r\n        const d = diff.simpleDiffString(binding.type.toString(), binding.cmDoc.getValue());\r\n        binding.type.delete(d.index, d.remove);\r\n        binding.type.insert(d.index, d.insert);\r\n      } else {\r\n        const change = changes[0];\r\n        const start = binding.cmDoc.indexFromPos(change.from);\r\n        const delLen = change.removed.map((s) => s.length).reduce(math.add) + change.removed.length - 1;\r\n        if (delLen > 0) {\r\n          binding.type.delete(start, delLen);\r\n        }\r\n        if (change.text.length > 0) {\r\n          binding.type.insert(start, change.text.join(\"\\n\"));\r\n        }\r\n      }\r\n    }, binding);\r\n  });\r\n};\r\n\r\nconst createRemoteCaret = (username, color) => {\r\n  const caret = document.createElement(\"span\");\r\n  caret.classList.add(\"remote-caret\");\r\n  caret.setAttribute(\"style\", `border-color: ${color}`);\r\n  const userDiv = document.createElement(\"div\");\r\n  userDiv.setAttribute(\"style\", `background-color: ${color}`, `color: ${invert(color, true)}`);\r\n  userDiv.insertBefore(document.createTextNode(username), null);\r\n  caret.insertBefore(userDiv, null);\r\n  setTimeout(() => {\r\n    caret.classList.add(\"hide-name\");\r\n  }, 2000);\r\n  return caret;\r\n};\r\n\r\nconst createEmptyLinePlaceholder = (color) => {\r\n  const placeholder = document.createElement(\"span\");\r\n  placeholder.setAttribute(\"style\", \"user-select: none;\");\r\n  const emptyTxt = document.createElement(\"span\");\r\n  emptyTxt.insertBefore(document.createTextNode(\"\"), null);\r\n  const sel = document.createElement(\"span\");\r\n  sel.setAttribute(\"class\", \"y-line-selection\");\r\n  sel.setAttribute(\r\n    \"style\",\r\n    `display: inline-block; position: absolute; left: 4px; right: 4px; top: 0; bottom: 0; background-color: ${color}50; mix-blend-mode: color-dodge;`\r\n  );\r\n  placeholder.insertBefore(sel, null);\r\n  placeholder.insertBefore(emptyTxt, null);\r\n  return placeholder;\r\n};\r\n\r\nconst updateRemoteSelection = (y, cm, type, cursors, clientId, awareness) => {\r\n  // redraw caret and selection for clientId\r\n  const aw = awareness.getStates().get(clientId);\r\n  // destroy current text mark\r\n  const m = cursors.get(clientId);\r\n  if (m !== undefined) {\r\n    if (m.caret) {\r\n      m.caret.clear();\r\n    }\r\n    m.sel.forEach((sel) => sel.clear());\r\n    cursors.delete(clientId);\r\n  }\r\n  if (aw === undefined) {\r\n    return;\r\n  }\r\n  const user = aw.user || {};\r\n  if (user.color == null) {\r\n    user.color = \"#ffa500\";\r\n  }\r\n  if (user.name == null) {\r\n    user.name = `User: ${clientId}`;\r\n  }\r\n  const cursor = aw.cursor;\r\n  if (cursor == null || cursor.anchor == null || cursor.head == null) {\r\n    return;\r\n  }\r\n  const anchor = Y.createAbsolutePositionFromRelativePosition(JSON.parse(cursor.anchor), y);\r\n  const head = Y.createAbsolutePositionFromRelativePosition(JSON.parse(cursor.head), y);\r\n  if (anchor !== null && head !== null && anchor.type === type && head.type === type) {\r\n    const headpos = cm.posFromIndex(head.index);\r\n    const anchorpos = cm.posFromIndex(anchor.index);\r\n    let from, to;\r\n    if (head.index < anchor.index) {\r\n      from = headpos;\r\n      to = anchorpos;\r\n    } else {\r\n      from = anchorpos;\r\n      to = headpos;\r\n    }\r\n    const caretEl = createRemoteCaret(user.name, user.color);\r\n    // if position was \"relatively\" the same, do not show name again and hide instead\r\n    if (\r\n      m &&\r\n      func.equalityFlat(aw.cursor.anchor, m.awCursor.anchor) &&\r\n      func.equalityFlat(aw.cursor.head, m.awCursor.head)\r\n    ) {\r\n      caretEl.classList.add(\"hide-name\");\r\n    }\r\n    const sel = [];\r\n\r\n    if (head.index !== anchor.index) {\r\n      if (from.line !== to.line && from.ch !== 0) {\r\n        // start of selection will only be a simple text-selection\r\n        sel.push(\r\n          cm.markText(from, new CodeMirror.Pos(from.line + 1, 0), {\r\n            css: `background-color: ${user.color}50;`,\r\n            inclusiveRight: false,\r\n            inclusiveLeft: false,\r\n          })\r\n        );\r\n        from = new CodeMirror.Pos(from.line + 1, 0);\r\n      }\r\n      while (from.line !== to.line) {\r\n        // middle of selection is always a whole-line selection. We add a widget at the first position which will fill the background.\r\n        sel.push(\r\n          cm.setBookmark(new CodeMirror.Pos(from.line, 0), {\r\n            widget: createEmptyLinePlaceholder(user.color),\r\n          })\r\n        );\r\n        from = new CodeMirror.Pos(from.line + 1, 0);\r\n      }\r\n      sel.push(\r\n        cm.markText(from, to, {\r\n          css: `background-color: ${user.color}50;`,\r\n          inclusiveRight: false,\r\n          inclusiveLeft: false,\r\n        })\r\n      );\r\n    }\r\n    // only render caret if not the complete last line was selected (in this case headpos.ch === 0)\r\n    const caret =\r\n      sel.length > 0 && to === headpos && headpos.ch === 0\r\n        ? null\r\n        : cm.setBookmark(headpos, { widget: caretEl, insertLeft: true });\r\n    cursors.set(clientId, { caret, sel, awCursor: cursor });\r\n  }\r\n};\r\n\r\nconst codemirrorCursorActivity = (y, cm, type, awareness) => {\r\n  const aw = awareness.getLocalState();\r\n  if (!cm.hasFocus() || aw == null || !cm.display.wrapper.ownerDocument.hasFocus()) {\r\n    return;\r\n  }\r\n  const newAnchor = Y.createRelativePositionFromTypeIndex(type, cm.indexFromPos(cm.getCursor(\"anchor\")));\r\n  const newHead = Y.createRelativePositionFromTypeIndex(type, cm.indexFromPos(cm.getCursor(\"head\")));\r\n  let currentAnchor = null;\r\n  let currentHead = null;\r\n  if (aw.cursor != null) {\r\n    currentAnchor = Y.createRelativePositionFromJSON(JSON.parse(aw.cursor.anchor));\r\n    currentHead = Y.createRelativePositionFromJSON(JSON.parse(aw.cursor.head));\r\n  }\r\n  if (\r\n    aw.cursor == null ||\r\n    !Y.compareRelativePositions(currentAnchor, newAnchor) ||\r\n    !Y.compareRelativePositions(currentHead, newHead)\r\n  ) {\r\n    awareness.setLocalStateField(\"cursor\", {\r\n      anchor: JSON.stringify(newAnchor),\r\n      head: JSON.stringify(newHead),\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * A binding that binds a YText to a CodeMirror editor.\r\n *\r\n * @example\r\n *   const ytext = ydocument.define('codemirror', Y.Text)\r\n *   const editor = new CodeMirror(document.querySelector('#container'), {\r\n *     mode: 'javascript',\r\n *     lineNumbers: true\r\n *   })\r\n *   const binding = new CodemirrorBinding(ytext, editor)\r\n *\r\n */\r\nexport class CodemirrorBinding {\r\n  /**\r\n   * @param {Y.Text} textType\r\n   * @param {import('codemirror').Editor} codeMirror\r\n   * @param {any | null} [awareness]\r\n   * @param {{ yUndoManager?: Y.UndoManager }} [options]\r\n   */\r\n  constructor(textType, codeMirror, awareness = null, { yUndoManager = null } = {}) {\r\n    const doc = textType.doc;\r\n    const cmDoc = codeMirror.getDoc();\r\n    this.doc = doc;\r\n    this.type = textType;\r\n    this.cm = codeMirror;\r\n    this.cmDoc = cmDoc;\r\n    this.awareness = awareness || null;\r\n    this.yUndoManager = yUndoManager;\r\n    this._onStackItemAdded = ({ stackItem, changedParentTypes }) => {\r\n      // only store metadata if this type was affected\r\n      if (changedParentTypes.has(textType) && this._beforeChangeSelection) {\r\n        stackItem.meta.set(this, this._beforeChangeSelection);\r\n      }\r\n    };\r\n    this._onStackItemPopped = ({ stackItem }) => {\r\n      const sel = stackItem.meta.get(this);\r\n      if (sel) {\r\n        const anchor = Y.createAbsolutePositionFromRelativePosition(sel.anchor, doc).index;\r\n        const head = Y.createAbsolutePositionFromRelativePosition(sel.head, doc).index;\r\n        codeMirror.setSelection(codeMirror.posFromIndex(anchor), codeMirror.posFromIndex(head));\r\n        this._beforeChange();\r\n      }\r\n    };\r\n    if (yUndoManager) {\r\n      yUndoManager.trackedOrigins.add(this); // track changes performed by this editor binding\r\n      const editorUndo = (cm) => {\r\n        // Keymaps always start with an active operation.\r\n        // End the current operation so that the event is fired at the correct moment.\r\n        // @todo check cm.curOp in typeListener and endOperation always.\r\n        cm.endOperation();\r\n        yUndoManager.undo();\r\n        cm.startOperation();\r\n      };\r\n      const editorRedo = (cm) => {\r\n        cm.endOperation();\r\n        yUndoManager.redo();\r\n        cm.startOperation();\r\n      };\r\n      codeMirror.addKeyMap({\r\n        // pc\r\n        \"Ctrl-Z\": editorUndo,\r\n        \"Shift-Ctrl-Z\": editorRedo,\r\n        \"Ctrl-Y\": editorRedo,\r\n        // mac\r\n        \"Cmd-Z\": editorUndo,\r\n        \"Shift-Cmd-Z\": editorRedo,\r\n        \"Cmd-Y\": editorRedo,\r\n      });\r\n\r\n      yUndoManager.on(\"stack-item-added\", this._onStackItemAdded);\r\n      yUndoManager.on(\"stack-item-popped\", this._onStackItemPopped);\r\n    }\r\n\r\n    this._mux = createMutex();\r\n    // set initial value\r\n    cmDoc.setValue(textType.toString());\r\n    // observe type and target\r\n    this._typeObserver = (event) => typeObserver(this, event);\r\n    this._targetObserver = (instance, changes) => {\r\n      if (instance.getDoc() === cmDoc) {\r\n        targetObserver(this, changes);\r\n      }\r\n    };\r\n    this._cursors = new Map();\r\n    this._changedCursors = new Set();\r\n    this._debounceCursorEvent = eventloop.createDebouncer(10);\r\n    this._awarenessListener = (event) => {\r\n      if (codeMirror.getDoc() !== cmDoc) {\r\n        return;\r\n      }\r\n      const f = (clientId) => {\r\n        if (clientId !== doc.clientID) {\r\n          this._changedCursors.add(clientId);\r\n        }\r\n      };\r\n      event.added.forEach(f);\r\n      event.removed.forEach(f);\r\n      event.updated.forEach(f);\r\n      if (this._changedCursors.size > 0) {\r\n        this._debounceCursorEvent(() => {\r\n          this._changedCursors.forEach((clientId) => {\r\n            updateRemoteSelection(doc, codeMirror, textType, this._cursors, clientId, awareness);\r\n          });\r\n          this._changedCursors.clear();\r\n        });\r\n      }\r\n    };\r\n    this._cursorListener = () => {\r\n      if (codeMirror.getDoc() === cmDoc) {\r\n        setTimeout(() => {\r\n          codemirrorCursorActivity(doc, codeMirror, textType, awareness);\r\n        }, 0);\r\n      }\r\n    };\r\n    this._blurListeer = () => awareness.setLocalStateField(\"cursor\", null);\r\n\r\n    textType.observe(this._typeObserver);\r\n    // @ts-ignore\r\n    codeMirror.on(\"changes\", this._targetObserver);\r\n    /**\r\n     * @type {{ anchor: Y.RelativePosition, head: Y.RelativePosition } | null}\r\n     */\r\n    this._beforeChangeSelection = null;\r\n    this._beforeChange = () => {\r\n      // update the the beforeChangeSelection that is stored befor each change to the editor (except when applying remote changes)\r\n      this._mux(() => {\r\n        // store the selection before the change is applied so we can restore it with the undo manager.\r\n        const anchor = Y.createRelativePositionFromTypeIndex(\r\n          textType,\r\n          codeMirror.indexFromPos(codeMirror.getCursor(\"anchor\"))\r\n        );\r\n        const head = Y.createRelativePositionFromTypeIndex(\r\n          textType,\r\n          codeMirror.indexFromPos(codeMirror.getCursor(\"head\"))\r\n        );\r\n        this._beforeChangeSelection = { anchor, head };\r\n      });\r\n    };\r\n    codeMirror.on(\"beforeChange\", this._beforeChange);\r\n    if (awareness) {\r\n      codeMirror.on(\"swapDoc\", this._blurListeer);\r\n      awareness.on(\"change\", this._awarenessListener);\r\n      // @ts-ignore\r\n      codeMirror.on(\"cursorActivity\", this._cursorListener);\r\n      codeMirror.on(\"blur\", this._blurListeer);\r\n      codeMirror.on(\"focus\", this._cursorListener);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.type.unobserve(this._typeObserver);\r\n    this.cm.off(\"swapDoc\", this._blurListeer);\r\n    // @ts-ignore\r\n    this.cm.off(\"changes\", this._targetObserver);\r\n    this.cm.off(\"beforeChange\", this._beforeChange);\r\n    // @ts-ignore\r\n    this.cm.off(\"cursorActivity\", this._cursorListener);\r\n    this.cm.off(\"focus\", this._cursorListener);\r\n    this.cm.off(\"blur\", this._blurListeer);\r\n    if (this.awareness) {\r\n      this.awareness.off(\"change\", this._awarenessListener);\r\n    }\r\n    if (this.yUndoManager) {\r\n      this.yUndoManager.off(\"stack-item-added\", this._onStackItemAdded);\r\n      this.yUndoManager.off(\"stack-item-popped\", this._onStackItemPopped);\r\n      this.yUndoManager.trackedOrigins.delete(this);\r\n    }\r\n    this.type = null;\r\n    this.cm = null;\r\n    this.cmDoc = null;\r\n  }\r\n}\r\n\r\nexport const CodeMirrorBinding = CodemirrorBinding;\r\n","const DEFAULT = [\r\n  \"#F44336\", // red\r\n  \"#388E3C\", // green\r\n  \"#3F51B5\", // indigo\r\n  \"#FF9800\", // orange\r\n  \"#9C27B0\", // purple\r\n  \"#795548\", // brown\r\n  \"#03A9F4\", // light blue\r\n  \"#627a86\", // blue grey\r\n  \"#620E00\", // maroon\r\n  \"#f05fae\", // bright purple\r\n  \"#b49666\", // light brown\r\n  \"#257275\", // blue green\r\n  \"#7f5075\", // medium purple\r\n  \"#2a7287\", // slate blue\r\n  \"#5973d6\", // royal blue\r\n  \"#e31a1c\", // red\r\n  \"#1f78b4\", // dark blue\r\n  \"#33a02c\", // dark green\r\n  \"#6a3d9a\", // dark purple\r\n];\r\n\r\nconst DARK_12 = [\r\n  \"#fb9a99\", // pink\r\n  \"#ffff99\", // yellow\r\n  \"#778899\", // slate gray\r\n  \"#cab2d6\", // light purple\r\n  \"#b15928\", // brown\r\n];\r\n\r\nconst LIGHT_12 = [\r\n  \"#fb8072\", // red\r\n  \"#80b1d3\", // light blue\r\n  \"#b3de69\", // green\r\n  \"#fdb462\", // orange\r\n  \"#fccde5\", // light purple\r\n  \"#8dd3c7\", // Aqua\r\n  \"#ffffb3\", // light yellow\r\n  \"#bebada\", // purple\r\n  \"#ccebc5\", // light green\r\n  \"#ffed6f\", // dark yellow\r\n  \"#778899\", // gray\r\n  \"#bc80bd\", // dark purple\r\n];\r\n\r\nconst palettes = {\r\n  DEFAULT: DEFAULT,\r\n  LIGHT_12: LIGHT_12,\r\n  DARK_12: DARK_12,\r\n};\r\n\r\ntype paletteOptions = \"DEFAULT\" | \"LIGHT_12\" | \"DARK_12\";\r\nexport const getRandomColor = (color: paletteOptions) => {\r\n  const colorScheme: string[] = palettes[color];\r\n  return colorScheme[Math.floor(Math.random() * colorScheme.length)];\r\n};\r\n","import React, { useEffect, useContext, useRef } from \"react\";\r\nimport { CDRT_SERVER } from \"config.keys\";\r\nimport { CodeMirrorBinding } from \"./CodeMirrorAdapter\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./CodeMirrorImports.ts\";\r\nimport { GuestNameContextTypes, SettingsContextType, UserContextTypes } from \"types\";\r\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport * as Y from \"yjs\";\r\nimport { WebsocketProvider } from \"y-websocket\";\r\nimport { WebrtcProvider } from \"y-webrtc\";\r\nimport { getRandomColor } from \"service/getRandomColor\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\ninterface AppProps {\r\n  editorInstance: any;\r\n  setEditorInstance: React.Dispatch<any>;\r\n}\r\n\r\nconst CodeMirrorEditor: React.FC<AppProps> = ({ editorInstance, setEditorInstance }) => {\r\n  const handleEditorDidMount = (editor: any) => {\r\n    //@ts-ignore\r\n    window.editor = editor;\r\n    setEditorInstance(editor);\r\n  };\r\n\r\n  const { id: roomID } = useParams<Record<string, string>>();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { language, fontSize, theme, keybinds } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n\r\n  // if login then user that else guest name else randome name :)))\r\n  const username = user?.name ? user.name : guestName;\r\n\r\n  useEffect(() => {\r\n    if (editorInstance != null) {\r\n      const ydoc: Y.Doc = new Y.Doc();\r\n      const yText = ydoc.getText(\"codemirror\");\r\n      const yUndoManager = new Y.UndoManager(yText);\r\n\r\n      let provider;\r\n      try {\r\n        //@ts-ignore\r\n        provider = new WebsocketProvider(CDRT_SERVER, roomID, ydoc);\r\n        // provider = new WebrtcProvider(roomID, ydoc, {\r\n        //   signaling: [\r\n        //     \"wss://signaling.yjs.dev\",\r\n        //     \"wss://y-webrtc-signaling-eu.herokuapp.com\",\r\n        //     \"wss://y-webrtc-signaling-us.herokuapp.com\",\r\n        //   ],\r\n        // });\r\n      } catch (err) {}\r\n\r\n      const awareness = provider?.awareness;\r\n      const val = getRandomColor(\"DEFAULT\");\r\n      awareness?.setLocalStateField(\"user\", {\r\n        // Define a print name that should be displayed\r\n        name: username,\r\n        // Define a color that should be associated to the user:\r\n        color: val, // should be a hex color: ;\r\n      });\r\n\r\n      const getBinding = new CodeMirrorBinding(yText, editorInstance, awareness, {\r\n        yUndoManager,\r\n      });\r\n    }\r\n  }, [editorInstance]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"left\", width: \"100%\", fontSize: `${fontSize}px` }}>\r\n      <CodeMirror\r\n        autoScroll\r\n        options={{\r\n          mode: language,\r\n          theme: theme,\r\n          keyMap: keybinds,\r\n          lineWrapping: true,\r\n          smartIndent: true,\r\n          lineNumbers: true,\r\n          foldGutter: true,\r\n          tabSize: 2,\r\n          gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n          autoCloseTags: true,\r\n          matchBrackets: true,\r\n          autoCloseBrackets: true,\r\n          extraKeys: {\r\n            \"Ctrl-Space\": \"autocomplete\",\r\n          },\r\n        }}\r\n        editorDidMount={(editor) => {\r\n          handleEditorDidMount(editor);\r\n          editor.setSize(\"100%\", \"100%\");\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeMirrorEditor;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Select, withStyles } from \"@material-ui/core\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const {\r\n    language,\r\n    fontSize,\r\n    theme,\r\n    keybinds,\r\n    handleFontSizeChange,\r\n    handleLanguageChange,\r\n    handleThemeChange,\r\n    handleKeybindsChange,\r\n  } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const CssFormControl = withStyles({\r\n    root: {\r\n      width: \"70%\",\r\n      margin: \"1rem\",\r\n      \"& svg\": {\r\n        fill: \"#3f51b5\",\r\n      },\r\n\r\n      \"&:before\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:after\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n\r\n      \"& .MuiSelect-root\": {\r\n        color: \"white\",\r\n      },\r\n      \"&.MuiPaper-root\": {\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n      },\r\n      \"& > ul\": {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n  })(FormControl);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-programming-language\", (inputData: string) => {\r\n      handleLanguageChange(inputData, id, false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem 0rem\" }}>\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel id=\"language-select\" style={{ color: \"white\" }}>\r\n          Language\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"langauge-select\"\r\n          value={language}\r\n          onChange={(e) => handleLanguageChange(e.target.value as string, id, true)}\r\n        >\r\n          <MenuItem value={\"text/x-c++src\"}>C++</MenuItem>\r\n          <MenuItem value={\"text/x-java\"}>Java</MenuItem>\r\n          <MenuItem value={\"text/x-python\"}>Python</MenuItem>\r\n          <MenuItem value={\"text/javascript\"}>JavaScript</MenuItem>\r\n          <MenuItem value={\"text/x-rustsrc\"}>Rust</MenuItem>\r\n          <MenuItem value={\"text/x-go\"}>GoLang</MenuItem>\r\n          <MenuItem value={\"text/x-php\"}>PHP</MenuItem>\r\n          <MenuItem value={\"text/x-ruby\"}>Ruby</MenuItem>\r\n          <MenuItem value={\"text/x-haskell\"}>Haskell</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>FontSize</InputLabel>\r\n        <Select value={fontSize} onChange={(e) => handleFontSizeChange(e.target.value as number)}>\r\n          <MenuItem value={10}>10px</MenuItem>\r\n          <MenuItem value={12}>12px</MenuItem>\r\n          <MenuItem value={14}>14px</MenuItem>\r\n          <MenuItem value={16}>16px</MenuItem>\r\n          <MenuItem value={18}>18px</MenuItem>\r\n          <MenuItem value={20}>20px</MenuItem>\r\n          <MenuItem value={22}>22px</MenuItem>\r\n          <MenuItem value={24}>24px</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>Theme</InputLabel>\r\n        <Select value={theme} onChange={(e) => handleThemeChange(e.target.value as string)}>\r\n          <MenuItem value={\"monokai\"}>Monokai</MenuItem>\r\n          <MenuItem value={\"material-darker\"}>Dark Theme</MenuItem>\r\n          <MenuItem value={\"default\"}>Light Theme</MenuItem>\r\n          <MenuItem value={\"neat\"}>Light Theme Alternate</MenuItem>\r\n          <MenuItem value={\"eclipse\"}>Eclipse (Light)</MenuItem>\r\n          <MenuItem value={\"dracula\"}>Dracula</MenuItem>\r\n          <MenuItem value={\"3024-night\"}>Brogrammer</MenuItem>\r\n          <MenuItem value={\"material-palenight\"}>Palenight</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>Keybinds</InputLabel>\r\n        <Select value={keybinds} onChange={(e) => handleKeybindsChange(e.target.value as string)}>\r\n          <MenuItem value={\"sublime\"}>Default</MenuItem>\r\n          <MenuItem value={\"vim\"}>Vim</MenuItem>\r\n          <MenuItem value={\"emacs\"}>Emacs</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","//@ts-nocheck\r\n/* eslint-disable no-use-before-define */\r\n// please dont expect me to re-write css for this mess X-X\r\nimport React from \"react\";\r\nimport { useTheme, fade, makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport Autocomplete, { AutocompleteCloseReason } from \"@material-ui/lab/Autocomplete\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { LabelType } from \"types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"1rem\",\r\n      flexGrow: 1,\r\n      fontSize: 13,\r\n    },\r\n    button: {\r\n      fontSize: 13,\r\n      width: \"100%\",\r\n      textAlign: \"left\",\r\n      paddingBottom: 8,\r\n      color: \"#586069\",\r\n      fontWeight: 600,\r\n      \"&:hover,&:focus\": {\r\n        color: \"#0366d6\",\r\n      },\r\n      \"& span\": {\r\n        width: \"100%\",\r\n      },\r\n      \"& svg\": {\r\n        width: 16,\r\n        height: 16,\r\n      },\r\n    },\r\n    tag: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 3,\r\n      height: 20,\r\n      padding: \".15em 4px\",\r\n      fontWeight: 600,\r\n      lineHeight: \"15px\",\r\n      borderRadius: 2,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    },\r\n    popper: {\r\n      border: \"1px solid rgba(27,31,35,.15)\",\r\n      boxShadow: \"0 3px 12px rgba(27,31,35,.15)\",\r\n      borderRadius: 3,\r\n      width: 300,\r\n      zIndex: 5,\r\n      fontSize: 13,\r\n      color: \"#d8d5d0\",\r\n      backgroundColor: \"#272a2b\",\r\n    },\r\n    header: {\r\n      borderBottom: \"1px solid #585a5c\",\r\n      padding: \"8px 10px\",\r\n      fontWeight: 600,\r\n    },\r\n    inputBase: {\r\n      padding: 10,\r\n      width: \"100%\",\r\n      color: \"white\",\r\n      borderBottom: \"1px solid #d8d5d0\",\r\n      \"& input\": {\r\n        borderRadius: 4,\r\n        backgroundColor: \"#1e1f1f\",\r\n        padding: 8,\r\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n        border: \"1px solid #585a5c\",\r\n        fontSize: 14,\r\n        \"&:focus\": {\r\n          boxShadow: `${fade(\"#0055bb\", 0.25)} 0 0 0 0.2rem`,\r\n          borderColor: \"#0055bb\",\r\n        },\r\n      },\r\n    },\r\n    paper: {\r\n      boxShadow: \"none\",\r\n      margin: 0,\r\n      color: \"#d8d5d0\",\r\n      background: \"#191c1d\",\r\n      fontSize: 13,\r\n      \"& .MuiAutocomplete-noOptions\": {\r\n        color: \"#edeceb !important\",\r\n      },\r\n    },\r\n    option: {\r\n      minHeight: \"auto\",\r\n      alignItems: \"flex-start\",\r\n      padding: 8,\r\n      '&[aria-selected=\"true\"]': {\r\n        backgroundColor: \"#424242\",\r\n      },\r\n      '&[data-focus=\"true\"]': {\r\n        backgroundColor: \"#37474f\",\r\n      },\r\n    },\r\n    popperDisablePortal: {\r\n      position: \"relative\",\r\n    },\r\n    iconSelected: {\r\n      width: 17,\r\n      height: 17,\r\n      marginRight: 5,\r\n      marginLeft: -2,\r\n    },\r\n    color: {\r\n      width: 14,\r\n      height: 14,\r\n      flexShrink: 0,\r\n      borderRadius: 3,\r\n      marginRight: 8,\r\n      marginTop: 2,\r\n    },\r\n    text: {\r\n      flexGrow: 1,\r\n    },\r\n    close: {\r\n      opacity: 0.6,\r\n      width: 18,\r\n      height: 18,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AutoCompleteLabel({ value, setValue, labels, type }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  // default values we are adding 2 okays\r\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setPendingValue(value);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\r\n    if (reason === \"toggleInput\") {\r\n      return;\r\n    }\r\n    setValue(pendingValue);\r\n    if (anchorEl) {\r\n      anchorEl.focus();\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"autocomplete-label\" : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <ButtonBase disableRipple className={classes.button} aria-describedby={id} onClick={handleClick}>\r\n          <span>{type}</span>\r\n          <SettingsIcon />\r\n        </ButtonBase>\r\n        {value.map((label) => (\r\n          <div\r\n            key={label.name}\r\n            className={classes.tag}\r\n            style={{\r\n              backgroundColor: label.color,\r\n              color: theme.palette.getContrastText(label.color),\r\n            }}\r\n          >\r\n            {label.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\" className={classes.popper}>\r\n        <div className={classes.header}>Selects everything if no options is selected</div>\r\n        <Autocomplete\r\n          open\r\n          onClose={handleClose}\r\n          multiple\r\n          classes={{\r\n            paper: classes.paper,\r\n            option: classes.option,\r\n            popperDisablePortal: classes.popperDisablePortal,\r\n          }}\r\n          value={pendingValue}\r\n          onChange={(event, newValue) => {\r\n            setPendingValue(newValue);\r\n          }}\r\n          disableCloseOnSelect\r\n          disablePortal\r\n          renderTags={() => null}\r\n          noOptionsText=\"No Match Found\"\r\n          renderOption={(option, { selected }) => (\r\n            <React.Fragment>\r\n              <DoneIcon\r\n                className={classes.iconSelected}\r\n                style={{ visibility: selected ? \"visible\" : \"hidden\" }}\r\n              />\r\n              <span className={classes.color} style={{ backgroundColor: option.color }} />\r\n              <div className={classes.text}>\r\n                {option.name}\r\n                <br />\r\n                {option.description}\r\n              </div>\r\n              <CloseIcon className={classes.close} style={{ visibility: selected ? \"visible\" : \"hidden\" }} />\r\n            </React.Fragment>\r\n          )}\r\n          options={[...labels].sort((a, b) => {\r\n            // Display the selected labels first.\r\n            let ai = value.indexOf(a);\r\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\r\n            let bi = value.indexOf(b);\r\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\r\n            return ai - bi;\r\n          })}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <InputBase\r\n              ref={params.InputProps.ref}\r\n              inputProps={params.inputProps}\r\n              autoFocus\r\n              className={classes.inputBase}\r\n            />\r\n          )}\r\n        />\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { createRef, useEffect, useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport styles from \"./ProblemList.module.css\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { QuestionListResponse, TabsContextTypes } from \"types\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst getColor = (diff: string) => {\r\n  if (diff === \"easy\") return \"#1faa00\";\r\n  else if (diff === \"medium\") return \"#fbc02d\";\r\n  else return \"#dd2c00\";\r\n};\r\n\r\nconst CssPagination = withStyles({\r\n  root: {\r\n    // backgroundColor: \"#3e3e42\",\r\n\r\n    color: \"white\",\r\n    \"& svg\": {\r\n      fill: \"white\",\r\n    },\r\n    \"& button\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n})(Pagination);\r\n\r\nconst PaginationComponent = ({ rows }: { rows: QuestionListResponse[] }) => {\r\n  const { filterResponseData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = React.useState(1);\r\n  const navRef = createRef<HTMLElement>();\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    const height = Math.floor(navRef.current?.clientHeight / 38);\r\n    setRowsPerPage(height);\r\n  }, []);\r\n\r\n  const getQuestion = (question_id: number) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/get-problem`,\r\n      data: { question_id: question_id },\r\n      responseType: \"json\",\r\n    }).then((response) => {\r\n      filterResponseData(response.data, id);\r\n    });\r\n  };\r\n\r\n  const count = Math.floor(\r\n    rows.length % rowsPerPage === 0 ? rows.length / rowsPerPage : rows.length / rowsPerPage + 1\r\n  );\r\n  return (\r\n    <>\r\n      <Grid item className={styles[\"pagination-container\"]}>\r\n        <List component=\"nav\" aria-label=\"contacts\" className={styles[\"list-container\"]} ref={navRef}>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((el: QuestionListResponse, index) => {\r\n            return (\r\n              <ListItem\r\n                key={index}\r\n                button\r\n                className={styles[\"list-item\"]}\r\n                onClick={() => getQuestion(el.question_id)}\r\n              >\r\n                <div style={{ flexGrow: 1 }}>{`${el.question_id}. ${el.question_title}`}</div>\r\n                <div style={{ color: getColor(el.difficulty), paddingLeft: \"8px\", fontWeight: \"bold\" }}>\r\n                  {el.difficulty}\r\n                </div>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </Grid>\r\n      <Grid item className={styles[\"pagination-group\"]}>\r\n        <CssPagination\r\n          shape=\"rounded\"\r\n          count={count}\r\n          page={page}\r\n          onChange={(event, val) => setPage(val)}\r\n          color=\"primary\"\r\n          className={styles[\"pagination-element\"]}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport AutoCompleteLabel from \"./Autocomplete\";\r\nimport { Button, ButtonGroup, Divider, IconButton, TextField, withStyles } from \"@material-ui/core\";\r\nimport ArrowForwardRoundedIcon from \"@material-ui/icons/ArrowForwardRounded\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { allCompanies, allDifficulties, allTags } from \"./data\";\r\nimport ListPagination from \"./ListPagination\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styles from \"./ProblemList.module.css\";\r\nimport { LabelType, QuestionListResponse, ScrappedDataType, TabsContextTypes } from \"types\";\r\nimport { tagsData, companiesData, difficultyData } from \"./data\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport Url from \"url-parse\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface AppProps {\r\n  companies: LabelType[];\r\n  tags: LabelType[];\r\n  difficulty: LabelType[];\r\n  url: string;\r\n  setCompanies: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setTags: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setDifficulty: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setUrl: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: \"12px\",\r\n      padding: \"0px\",\r\n      outline: \"none\",\r\n      color: \"#edf2fb\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid #0055bb \",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst ProblemList: React.FC<AppProps> = ({\r\n  companies,\r\n  difficulty,\r\n  tags,\r\n  url,\r\n  setCompanies,\r\n  setDifficulty,\r\n  setTags,\r\n  setUrl,\r\n}) => {\r\n  const [response, setResponse] = useState<QuestionListResponse[]>([]);\r\n  const [errorText, setErrorText] = useState({ error: false, comment: \"\" });\r\n  const { id: roomID } = useParams<Record<string, string>>();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(`${SERVER_URL}/api/fetch-problems`, prepareData())\r\n      .then((res: AxiosResponse<QuestionListResponse[]>) => setResponse(res.data));\r\n  }, []);\r\n\r\n  const { filterResponseData, handleScrappedData } = useContext(TabsContext) as TabsContextTypes;\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const NextButton = () => {\r\n    const getQuestionData = async () => {\r\n      const { hostname } = new Url(url);\r\n      if (hostname !== \"codeforces.com\" && hostname !== \"atcoder.jp\") {\r\n        setErrorText({\r\n          error: true,\r\n          comment: \"Domain should either be codeforces or atcoder\",\r\n        });\r\n      } else {\r\n        const { data }: AxiosResponse<{ error: boolean; htmlString: string }> = await axios({\r\n          method: \"POST\",\r\n          url: `${SERVER_URL}/api/fetch-contest-problem`,\r\n          responseType: \"json\",\r\n          data: {\r\n            url: url,\r\n            hostname: hostname,\r\n          },\r\n        });\r\n        const { error, htmlString } = data;\r\n\r\n        if (error) {\r\n          setErrorText({\r\n            error: true,\r\n            comment: \"Unable To fetch question\",\r\n          });\r\n        } else {\r\n          handleScrappedData(\r\n            {\r\n              htmlString,\r\n              hostname,\r\n            },\r\n            roomID,\r\n            true\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Button\r\n        className={styles[\"adornment-button\"]}\r\n        style={{ color: \"#0055bb\" }}\r\n        onClick={async () => {\r\n          await getQuestionData();\r\n        }}\r\n      >\r\n        <ArrowForwardRoundedIcon />\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const prepareData = () => {\r\n    const c = companies.map((el) => el.name);\r\n    const d = difficulty.map((el) => el.name);\r\n    const t = tags.map((el) => el.name);\r\n    return {\r\n      companies: c.length ? c : allCompanies,\r\n      difficulty: d.length ? d : allDifficulties,\r\n      tags: t.length ? t : allTags,\r\n    };\r\n  };\r\n\r\n  const fetchProblems = async () => {\r\n    const response: AxiosResponse<QuestionListResponse[]> = await axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/fetch-problems`,\r\n      data: prepareData(),\r\n      responseType: \"json\",\r\n    });\r\n    setResponse(response.data);\r\n  };\r\n  const getRandomQuestion = () => {\r\n    const randomID = Math.floor(Math.random() * 169);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/get-problem`,\r\n      data: { question_id: randomID },\r\n      responseType: \"json\",\r\n    }).then((response) => filterResponseData(response.data, id));\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container className={styles.root}>\r\n        <Grid item className={styles[\"request-field\"]}>\r\n          <label>Enter Codeforces Or Atcoder Question URL:</label>\r\n          <CssTextField\r\n            onChange={(e) => {\r\n              setUrl(e.target.value as string);\r\n            }}\r\n            value={url}\r\n            error={errorText.error}\r\n            helperText={errorText.comment}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: <NextButton />,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item className={styles.autocomplete}>\r\n          <AutoCompleteLabel\r\n            value={companies}\r\n            setValue={setCompanies}\r\n            labels={companiesData}\r\n            type=\"Companies\"\r\n          />\r\n          <AutoCompleteLabel value={tags} setValue={setTags} labels={tagsData} type=\"Tags\" />\r\n          <AutoCompleteLabel\r\n            value={difficulty}\r\n            setValue={setDifficulty}\r\n            labels={difficultyData}\r\n            type=\"Difficulty\"\r\n          />\r\n        </Grid>\r\n        <Grid item className={styles[\"btn-group\"]}>\r\n          <ButtonGroup color=\"inherit\">\r\n            <Button onClick={getRandomQuestion}>Random Problem</Button>\r\n            <Button\r\n              onClick={async () => {\r\n                await fetchProblems();\r\n              }}\r\n            >\r\n              Filter Problems\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Divider className={styles.divider} />\r\n        <Grid item container direction=\"column\" className={styles.pagination}>\r\n          <ListPagination rows={response} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProblemList;\r\n","import React from \"react\";\nimport parse from \"html-react-parser\";\nimport \"./ProblemPage.css\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Box, Divider, Grid } from \"@material-ui/core\";\nimport { QuestionDataSS } from \"types\";\n\nconst LeetCode = ({ questionData }: { questionData: QuestionDataSS }) => {\n  const { question_data, companies, tags } = questionData;\n\n  return (\n    <div>\n      <Box className=\"leetcode\">\n        <h1>{question_data.question_title}</h1>\n        {parse(question_data.question)}\n        <Divider />\n        <Grid container>\n          <Grid item className=\"container-item\">\n            <div className={\"chips\"}>\n              {tags.map((tag, index) => (\n                <Chip label={tag} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={\"container-item\"}>\n            <div className=\"chips\">\n              {companies.map((company, index) => (\n                <Chip label={company} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={\"container-item\"}>\n            <a href={`${question_data.problem_url}/discuss`} target=\"_blank\" rel=\" \">\n              <h4>Solution</h4>\n            </a>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default LeetCode;\n","//@ts-nocheck\r\nimport React, { useRef, useState, createRef } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport \"./ProblemPage.css\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Divider, Grid } from \"@material-ui/core\";\r\nimport { ScrappedDataType } from \"types\";\r\nimport renderMathInElement from \"katex/dist/contrib/auto-render\";\r\nimport \"katex/dist/katex.min.css\";\r\n\r\nconst LeetCode = ({ scrappedData }: { scrappedData: ScrappedDataType }) => {\r\n  const { hostname, htmlString } = scrappedData;\r\n  const MathRef = createRef<HTMLElement>();\r\n\r\n  React.useEffect(() => {\r\n    if (MathRef) {\r\n      renderMathInElement(MathRef.current!, {\r\n        delimiters: [\r\n          { left: \"$$$\", right: \"$$$\", display: true },\r\n          { left: \"\\\\[\", right: \"\\\\]\", display: true },\r\n          { left: \"%%\", right: \"%%\", display: true },\r\n          { left: \"\\\\(\", right: \"\\\\)\", display: false },\r\n        ],\r\n      });\r\n    }\r\n  }, [MathRef]);\r\n\r\n  return (\r\n    <div>\r\n      {hostname === \"codeforces.com\" ? (\r\n        <div className={\"codeforces\"} ref={MathRef}>\r\n          {parse(htmlString)}\r\n        </div>\r\n      ) : (\r\n        <div className={\"atcoder\"} ref={MathRef}>\r\n          {parse(htmlString)}\r\n        </div>\r\n      )}\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\nexport default LeetCode;\r\n<div></div>;\r\n","import React, { useContext } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Box, Divider, Grid } from \"@material-ui/core\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { TabsContextTypes } from \"types\";\r\nimport LeetCode from \"./LeetCode\";\r\nimport CodeForces from \"./CodeForces\";\r\n\r\nconst ProblemPage = () => {\r\n  const { questionData, showScrapped, scrappedData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  return (\r\n    <div style={{ margin: \"1rem\" }}>\r\n      {showScrapped ? <CodeForces scrappedData={scrappedData} /> : <LeetCode questionData={questionData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProblemPage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"./ReactTabs.css\";\r\nimport Settings from \"./SettingsPage\";\r\nimport ProblemList from \"./ProblemList/ProblemList\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { LabelType, TabsContextTypes, QuestionDataSS, ScrappedDataType } from \"types\";\r\nimport ProblemPage from \"./ProblemPage/ProblemPage\";\r\nimport { tagsData, companiesData } from \"./ProblemList/data\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function TabsComponent() {\r\n  const { id: roomID } = useParams<Record<string, string>>();\r\n  const { tabIndex, onTabsChange, onQuestionDataChange, handleScrappedData } = useContext(\r\n    TabsContext\r\n  ) as TabsContextTypes;\r\n  const [companies, setCompanies] = useState<LabelType[]>([companiesData[0]]);\r\n  const [tags, setTags] = useState<LabelType[]>([tagsData[0]]);\r\n  const [difficulty, setDifficulty] = useState<LabelType[]>([]);\r\n  const [url, setUrl] = useState<string>(\"https://codeforces.com/problemset/problem/1217/B\");\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-selected-question\", (value: QuestionDataSS) => {\r\n      onQuestionDataChange(value);\r\n    });\r\n\r\n    socket.on(\"emit-codeforces\", (value: ScrappedDataType) => {\r\n      handleScrappedData(value, roomID, false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => onTabsChange(index)} className=\"tabs_root\">\r\n      <TabList style={{ background: \"#252526\" }}>\r\n        <Tab>Problem</Tab>\r\n        <Tab>Problem List</Tab>\r\n        <Tab>Settings</Tab>\r\n      </TabList>\r\n      <TabPanel>\r\n        <ProblemPage />\r\n      </TabPanel>\r\n      <TabPanel style={{ flexGrow: 1 }}>\r\n        <ProblemList\r\n          companies={companies}\r\n          tags={tags}\r\n          difficulty={difficulty}\r\n          url={url}\r\n          setCompanies={setCompanies}\r\n          setTags={setTags}\r\n          setDifficulty={setDifficulty}\r\n          setUrl={setUrl}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <Settings />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n","import React, { useState, createRef, useRef, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InputOutputFile from \"component/InputOutputFile/InputOutputFile\";\r\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\r\nimport \"react-reflex/styles.css\";\r\nimport style from \"./Room.module.css\";\r\nimport { socket } from \"service/socket\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ChatApp from \"component/TextChat\";\r\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CodeMirror from \"component/Editor/CodeMirrorEditor\";\r\nimport clsx from \"clsx\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { UserContextTypes, GuestNameContextTypes, UserInfoSS } from \"types\";\r\nimport TabsPanel from \"component/QuestionsPane/Tabs\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Dashboard = () => {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n  const CodeMirrorRef = useRef<any>();\r\n  const TextAreaRef = createRef<HTMLDivElement>();\r\n  const [rows, setRows] = useState(5);\r\n  const [sid, setSid] = useState(\"\");\r\n  const [goBack, setGoBack] = useState(false);\r\n  const [partnerUser, setPartnerUser] = useState<UserInfoSS>();\r\n  const [editorInstance, setEditorInstance] = useState<any>(null);\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const prepareData = (): UserInfoSS => {\r\n    return {\r\n      name: user?.name ? user.name : guestName,\r\n      image_link: user?.image_link ? user.image_link : \"\",\r\n      roomID: id,\r\n    };\r\n  };\r\n\r\n  const action = (key: any) => (\r\n    <>\r\n      <Button\r\n        style={{ color: \"white\" }}\r\n        onClick={() => {\r\n          localStorage.setItem(\"shouldShow\", JSON.stringify(false));\r\n          closeSnackbar(key);\r\n        }}\r\n      >\r\n        Don't Show Again\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const displayNotification = (data: UserInfoSS, enter: boolean) => {\r\n    const text = enter ? \"joined the room\" : \"left the room\";\r\n    const variantStyle = enter ? \"success\" : \"error\";\r\n    enqueueSnackbar(`${data.name} ${text}`, {\r\n      preventDuplicate: true,\r\n      variant: variantStyle,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const retrivedKeyString = localStorage.getItem(\"shouldShow\");\r\n    const retrivedKey = retrivedKeyString ? JSON.parse(retrivedKeyString) : true;\r\n\r\n    if (retrivedKey) {\r\n      enqueueSnackbar(\"Open the same link in another tab to see realtime collabotation\", {\r\n        action,\r\n      });\r\n    }\r\n\r\n    socket.emit(\"join-room\", prepareData());\r\n\r\n    socket.on(\"store-sid\", (id: string) => setSid(id));\r\n    socket.on(\"new-user-joined\", (data: UserInfoSS) => {\r\n      setPartnerUser(data);\r\n      displayNotification(data, true);\r\n    });\r\n\r\n    socket.on(\"room-full\", () => {\r\n      setGoBack(true);\r\n    });\r\n\r\n    socket.on(\"user-left\", (data: UserInfoSS) => {\r\n      displayNotification(data, false);\r\n    });\r\n  }, []);\r\n\r\n  const resetEditorLayout = () => {\r\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\r\n    const adjustedRows = height > 340 ? height / 27 : height / 39;\r\n    setRows(Math.floor(adjustedRows));\r\n    editorInstance.refresh();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.root}>\r\n        <ReflexContainer orientation=\"horizontal\">\r\n          <ReflexElement style={{ paddingTop: \"1rem\" }}>\r\n            <ReflexContainer orientation=\"vertical\">\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement className={style[\"pane-color\"]}>\r\n                    <TabsPanel />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* End of 1st content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement flex={0.45}>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement style={{ display: \"flex\" }}>\r\n                    <CodeMirror editorInstance={editorInstance} setEditorInstance={setEditorInstance} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter\r\n                    className={clsx(style.splitter, style[\"splitter-horizontal\"])}\r\n                    onStopResize={() => resetEditorLayout()}\r\n                  />\r\n                  <ReflexElement flex={0.3}>\r\n                    <InputOutputFile rows={rows} TextAreaRef={TextAreaRef} editorInstance={editorInstance} />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* 3rd content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  {/* 0.12 */}\r\n                  <ReflexElement className={style[\"pane-color\"]} flex={0.18}>\r\n                    <VoiceChat params={id} user={prepareData()} partnerUser={partnerUser} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter className={clsx(style.splitter, style[\"splitter-horizontal\"])} />\r\n                  <ReflexElement className={style[\"chat-app\"]}>\r\n                    {/* Chat App Component */}\r\n                    <ChatApp userInfo={prepareData()} socketID={sid} />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n            </ReflexContainer>\r\n          </ReflexElement>\r\n          <ReflexElement className={style.footer} flex={0.028}>\r\n            Made with <span>&#9829;</span> by Rishabh Malhotra{\"  \"}•{\"  \"}\r\n            <a href=\"https://github.com/Rishabh-malhotraa/caucus\" target=\"__blank\">\r\n              Github\r\n            </a>\r\n          </ReflexElement>\r\n        </ReflexContainer>\r\n      </div>\r\n      {goBack ? <Redirect to={{ pathname: \"/home\", state: { showNotification: true } }} /> : <></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}