{"version":3,"sources":["component/InputOutputFile/InputOutputFile.tsx","component/TextChat/ChatMessage-styles.ts","component/TextChat/ChatMessage.jsx","component/TextChat/index.tsx","component/VoiceChat/VoiceChat.tsx","component/Editor/MonacoAdapter.js","component/Editor/MonacoEditor.tsx","component/QuestionsPane/SettingsPage.tsx","component/QuestionsPane/ProblemList/Autocomplete.tsx","component/QuestionsPane/ProblemList/ListPagination.tsx","component/QuestionsPane/ProblemList/ProblemList.tsx","component/QuestionsPane/ProblemPage/LeetCode.tsx","component/QuestionsPane/ProblemPage/CodeForces.tsx","component/QuestionsPane/ProblemPage/ProblemPage.tsx","component/QuestionsPane/Tabs.tsx","pages/Room/Room.tsx","component/QuestionsPane/ProblemList/ProblemList.module.css","component/InputOutputFile/InputOutputFile.module.css","pages/Room/Room.module.css"],"names":["CssTextField","withStyles","root","padding","height","width","outline","color","borderBottomColor","borderColor","TextField","InputOutputFile","TextAreaRef","rows","MonacoEditorRef","id","useParams","useState","value","setValue","loading","setLoading","inputText","setInputText","output","memory","cpuTime","outputData","setOutputData","language","useContext","SettingContext","enqueueSnackbar","useSnackbar","useEffect","socket","on","inputData","outputResponse","variant","submitProblem","a","axios","method","url","SERVER_URL","data","script","current","getValue","stdin","responseType","response","emit","roomID","RenderTextArea","index","className","styles","loader","type","style","minHeight","textAlign","ref","Paper","toolbar","Tabs","onChange","event","indicatorColor","textColor","centered","Tab","label","Box","Button","endIcon","onClick","size","inputTextFn","target","multiline","palette","spacing","radius","rightBgColor","primary","main","avatar","leftRow","rightRow","msg","borderRadius","marginBottom","display","wordBreak","fontFamily","fontSize","left","borderTopRightRadius","borderBottomRightRadius","backgroundColor","right","borderTopLeftRadius","borderBottomLeftRadius","common","white","leftFirst","leftLast","rightFirst","rightLast","ChatMsg","name","props","classes","messages","side","GridContainerProps","GridItemProps","AvatarProps","getTypographyProps","Grid","container","justify","item","Avatar","src","cx","xs","map","i","TypographyProps","Typography","align","length","defaultProps","useStyles","makeStyles","createStyles","paddding","formStyle","background","boxSizing","backdropFilter","inputStyle","flexGrow","margin","border","formButton","ChatApp","userInfo","socketID","chatBoxRef","useRef","message","setMessage","body","setBody","receivedMessages","newMessage","scrollIntoView","flexDirection","fontWeight","element","image_link","onSubmit","e","preventDefault","messageObject","autoComplete","placeholder","LightTooltip","theme","tooltip","boxShadow","shadows","Tooltip","RenderIcons","user","TransitionComponent","Zoom","title","placement","alt","Icons","params","partnerUser","MonacoConvergenceAdapter","monacoEditor","realtimeString","this","_monacoEditor","_model","_colorAssigner","ColorAssigner","Palettes","DEFAULT","_randomNumber","Math","floor","random","_initSharedData","_initSharedCursors","_initSharedSelection","_contentManager","MonacoCollabExt","editor","onInsert","text","insert","onReplace","model","startBatch","remove","completeBatch","onDelete","remoteSourceId","events","subscribe","delete","_remoteCursorManager","tooltips","tooltipDuration","_cursorReference","indexReference","references","key","forEach","reference","isLocal","_addRemoteCursor","_setLocalCursor","share","onDidChangeCursorPosition","position","getPosition","offset","getModel","getOffsetAt","set","remoteCursor","addCursor","sessionId","displayName","hide","dispose","cursorIndex","setOffset","_remoteSelectionManager","_selectionReference","rangeReference","_setLocalSelection","onDidChangeCursorSelection","_addRemoteSelection","selection","getSelection","isEmpty","isSet","clear","start","getStartPosition","end","getEndPosition","remoteSelection","addSelection","setOffsets","MonacoEditor","code","defaultCode","setCode","UserContext","guestName","GuestNameContext","username","Convergence","connectAnonymously","CONVERGENCE_URL","then","domain","models","openAutoCreate","collection","ephemeral","elementAt","bind","catch","error","console","log","overflow","onMount","handleEditorDidMount","options","wordWrap","autoIndent","Settings","handleFontSizeChange","handleLanguageChange","handleThemeChange","CssFormControl","fill","FormControl","InputLabel","Select","labelId","MenuItem","button","paddingBottom","tag","justifyContent","alignItems","marginTop","lineHeight","whiteSpace","textOverflow","popper","zIndex","header","borderBottom","inputBase","transition","transitions","create","fade","paper","option","popperDisablePortal","iconSelected","marginRight","marginLeft","flexShrink","close","opacity","AutoCompleteLabel","labels","React","anchorEl","setAnchorEl","pendingValue","setPendingValue","useTheme","open","Boolean","undefined","Fragment","ButtonBase","disableRipple","aria-describedby","currentTarget","getContrastText","Popper","Autocomplete","onClose","reason","focus","multiple","newValue","disableCloseOnSelect","disablePortal","renderTags","noOptionsText","renderOption","selected","visibility","description","sort","b","ai","indexOf","bi","getOptionLabel","renderInput","InputBase","InputProps","inputProps","autoFocus","CssPagination","Pagination","PaginationComponent","filterResponseData","TabsContext","rowsPerPage","setRowsPerPage","page","setPage","navRef","createRef","clientHeight","count","List","component","aria-label","slice","el","ListItem","question_id","question_title","diff","difficulty","paddingLeft","shape","val","ProblemList","companies","tags","setCompanies","setDifficulty","setTags","setUrl","setResponse","comment","errorText","setErrorText","post","prepareData","res","handleScrappedData","NextButton","getQuestionData","Url","hostname","htmlString","c","d","t","allCompanies","allDifficulties","allTags","fetchProblems","helperText","endAdornment","autocomplete","companiesData","tagsData","difficultyData","ButtonGroup","randomID","Divider","divider","direction","pagination","ListPagination","LeetCode","questionData","question_data","parse","question","Chip","company","href","problem_url","rel","scrappedData","MathRef","renderMathInElement","delimiters","ProblemPage","showScrapped","CodeForces","TabsComponent","tabIndex","onTabsChange","onQuestionDataChange","selectedIndex","onSelect","Dashboard","closeSnackbar","setDefaultCode","setRows","sid","setSid","goBack","setGoBack","setPartnerUser","action","localStorage","setItem","JSON","stringify","displayNotification","enter","variantStyle","preventDuplicate","retrivedKeyString","getItem","userCode","partnerCode","resetEditorLayout","adjustedRows","layout","orientation","paddingTop","clsx","splitter","onStopResize","flex","VoiceChat","footer","to","pathname","state","showNotification","module","exports"],"mappings":"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","file":"static/js/9.75c1b13c.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Paper, Tab, Tabs, Button, Box, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\nimport styles from \"./InputOutputFile.module.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\ninterface AppProps {\r\n  TextAreaRef: React.RefObject<HTMLDivElement>;\r\n  MonacoEditorRef: React.MutableRefObject<any>;\r\n  rows: number;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    // #115293\r\n    padding: \"1rem\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      outline: \"none\",\r\n      color: \"whitesmoke\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst InputOutputFile: React.FC<AppProps> = ({ TextAreaRef, rows, MonacoEditorRef }) => {\r\n  const { id } = useParams<Record<string, string>>();\r\n  const [value, setValue] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [outputData, setOutputData] = useState<Record<string, any>>({\r\n    output: \"\",\r\n    memory: 1,\r\n    cpuTime: 1,\r\n  });\r\n\r\n  const { language } = useContext(SettingContext) as SettingsContextType;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-input-data\", (inputData: string) => {\r\n      setInputText(inputData);\r\n    });\r\n    socket.on(\"emit-code-executed\", (outputResponse: Record<string, any>) => {\r\n      enqueueSnackbar(\r\n        outputResponse.memory === null || outputResponse.memory === null\r\n          ? \"Error in code-execution\"\r\n          : \"Code ran successfully\",\r\n        {\r\n          variant: outputResponse.memory === null || outputResponse.memory === null ? \"error\" : \"success\",\r\n        }\r\n      );\r\n      setOutputData(outputResponse);\r\n      setValue(1);\r\n    });\r\n  }, []);\r\n\r\n  const submitProblem = async () => {\r\n    setLoading(true);\r\n    setValue(1);\r\n    const response = await axios({\r\n      method: \"POST\",\r\n      url: `${SERVER_URL}/api/execute`,\r\n      data: {\r\n        script: MonacoEditorRef.current?.getValue(),\r\n        language: language,\r\n        stdin: inputText,\r\n      },\r\n      responseType: \"json\",\r\n    });\r\n    socket.emit(\"code-executed\", { data: response.data, roomID: id });\r\n    enqueueSnackbar(\r\n      response.data.memory === null || response.data.memory === null\r\n        ? \"Error in code-execution\"\r\n        : \"Code ran succesfully\",\r\n      {\r\n        variant: response.data.memory === null || response.data.memory === null ? \"error\" : \"success\",\r\n      }\r\n    );\r\n    setOutputData(response.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const inputTextFn = (value: string) => {\r\n    setInputText(value);\r\n    socket.emit(\"input-data\", { data: value, roomID: id });\r\n  };\r\n\r\n  /**\r\n   * Here we render text area based on index position and additional\r\n   * logic for handling how to display the output on code execution\r\n   * @param index - Tabs Index value 0 from output 1 from input\r\n   */\r\n  const RenderTextArea = ({ index }: { index: number }) => {\r\n    return loading ? (\r\n      <div className={styles.loader}>\r\n        <Loader type=\"Grid\" color=\"#f5f5f5\" height={80} width={80} />\r\n      </div>\r\n    ) : (\r\n      <div\r\n        style={{\r\n          padding: \"1rem\",\r\n          minHeight: \"70%\",\r\n          textAlign: \"left\",\r\n          color: outputData.memory === null || outputData.memory === null ? \"#dd2c00\" : \"inherit\",\r\n        }}\r\n      >\r\n        <pre>{outputData.output}</pre>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root} ref={TextAreaRef}>\r\n      <Paper className={styles.toolbar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={(event, value) => handleChange(event, value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          centered\r\n        >\r\n          <Tab label=\"Input\"></Tab>\r\n          <Tab label=\"Output\"></Tab>\r\n        </Tabs>\r\n        <Box className={styles[\"btn-box\"]}>\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"inherit\"\r\n            endIcon={<SendRoundedIcon />}\r\n            onClick={async () => {\r\n              await submitProblem();\r\n            }}\r\n          >\r\n            Run Code\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      <div className={styles[\"text-area\"]}>\r\n        {value === 0 ? (\r\n          <CssTextField\r\n            key=\"1\"\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            value={inputText}\r\n            onChange={(event) => inputTextFn(event.target.value)}\r\n            multiline\r\n            rows={rows}\r\n          />\r\n        ) : (\r\n          <RenderTextArea index={value} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputOutputFile;\r\n","import { Theme } from \"@material-ui/core/styles\";\r\nconst styles = ({ palette, spacing }: Theme) => {\r\n  const radius = spacing(2.5);\r\n  const size = spacing(4);\r\n  const rightBgColor = palette.primary.main;\r\n  // if you want the same as facebook messenger, use this color '#09f'\r\n  return {\r\n    avatar: {\r\n      width: size,\r\n      height: size,\r\n    },\r\n    leftRow: {\r\n      textAlign: \"left\",\r\n    },\r\n    rightRow: {\r\n      textAlign: \"right\",\r\n    },\r\n    msg: {\r\n      padding: spacing(1, 2),\r\n      borderRadius: 4,\r\n      marginBottom: 4,\r\n      display: \"inline-block\",\r\n      wordBreak: \"break-word\",\r\n      fontFamily:\r\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n      fontSize: \"14px\",\r\n    },\r\n    left: {\r\n      borderTopRightRadius: radius,\r\n      borderBottomRightRadius: radius,\r\n      backgroundColor: \"dimgrey\",\r\n    },\r\n    right: {\r\n      borderTopLeftRadius: radius,\r\n      borderBottomLeftRadius: radius,\r\n      backgroundColor: rightBgColor,\r\n      color: palette.common.white,\r\n    },\r\n    leftFirst: {\r\n      borderTopLeftRadius: radius,\r\n    },\r\n    leftLast: {\r\n      borderBottomLeftRadius: radius,\r\n    },\r\n    rightFirst: {\r\n      borderTopRightRadius: radius,\r\n    },\r\n    rightLast: {\r\n      borderBottomRightRadius: radius,\r\n    },\r\n  };\r\n};\r\nexport default styles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport styles from './ChatMessage-styles';\r\n\r\n// interface AppProps {\r\n//   classes?: any\r\n//   avatar: string;\r\n//   messages: string[];\r\n//   side: 'left' | 'right';\r\n//   GridContainerProps: Record<string, unknown>;\r\n//   GridItemProps: Record<string, unknown>;\r\n//   AvatarProps: Record<string, unknown>;\r\n//   getTypographyProps?: Function;\r\n// }\r\n\r\nconst ChatMsg = withStyles(styles, { name: 'ChatMsg' })((props) => {\r\n  const {\r\n    classes,\r\n    avatar,\r\n    messages,\r\n    side,\r\n    GridContainerProps,\r\n    GridItemProps,\r\n    AvatarProps,\r\n    getTypographyProps,\r\n  } = props;\r\n  const attachClass = (index) => {\r\n    if (index === 0) {\r\n      return classes[`${side}First`];\r\n    }\r\n    if (index === messages.length - 1) {\r\n      return classes[`${side}Last`];\r\n    }\r\n    return '';\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify={side === 'right' ? 'flex-end' : 'flex-start'}\r\n      {...GridContainerProps}\r\n    >\r\n      {side === 'left' && (\r\n        <Grid item {...GridItemProps}>\r\n          <Avatar\r\n            src={avatar}\r\n            {...AvatarProps}\r\n            className={cx(classes.avatar, AvatarProps.className)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={8}>\r\n        {messages.map((msg, i) => {\r\n          const TypographyProps = getTypographyProps(msg, i, props);\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <div key={msg.id || i} className={classes[`${side}Row`]}>\r\n              <Typography\r\n                align={'left'}\r\n                {...TypographyProps}\r\n                className={cx(\r\n                  classes.msg,\r\n                  classes[side],\r\n                  attachClass(i),\r\n                  TypographyProps.className\r\n                )}\r\n              >\r\n                {msg}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nChatMsg.propTypes = {\r\n  avatar: PropTypes.string,\r\n  messages: PropTypes.arrayOf(PropTypes.string),\r\n  side: PropTypes.oneOf(['left', 'right']),\r\n  GridContainerProps: PropTypes.shape({}),\r\n  GridItemProps: PropTypes.shape({}),\r\n  AvatarProps: PropTypes.shape({}),\r\n  getTypographyProps: PropTypes.func,\r\n};\r\nChatMsg.defaultProps = {\r\n  avatar: '',\r\n  messages: [],\r\n  side: 'left',\r\n  GridContainerProps: {},\r\n  GridItemProps: {},\r\n  AvatarProps: {},\r\n  getTypographyProps: () => ({}),\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { socket } from \"service/socket\";\r\nimport ChatMsg from \"./ChatMessage\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserInfoSS } from \"types\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      paddding: \"1rem\",\r\n      height: \"inherit\",\r\n    },\r\n    formStyle: {\r\n      background: \"rgba(0, 0, 0,0.4)\",\r\n      padding: \"0.25rem\",\r\n      display: \"flex\",\r\n      boxSizing: \"border-box\",\r\n      backdropFilter: \"blur(10px)\",\r\n    },\r\n    inputStyle: {\r\n      padding: \"0 1rem\",\r\n      flexGrow: 1,\r\n      borderRadius: \"2rem\",\r\n      width: \"100%\",\r\n      margin: \"0.25rem\",\r\n      height: \"2rem\",\r\n      backgroundColor: \"#1A1D1E\",\r\n      color: \"whitesmoke\",\r\n      border: \"1px solid #3e3e42\",\r\n      \"&:focus\": {\r\n        outline: \"none\",\r\n        border: \"1px solid #0055bb\",\r\n      },\r\n    },\r\n    formButton: {\r\n      background: \"#333\",\r\n      border: \"none\",\r\n      padding: \"0 1rem\",\r\n      margin: \"0.25rem\",\r\n      borderRadius: \"3px\",\r\n      outline: \"none\",\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface MessageProps {\r\n  messages: string[];\r\n  socketID: string;\r\n  userInfo: UserInfoSS;\r\n}\r\n\r\nconst ChatApp = ({ userInfo, socketID }: { userInfo: UserInfoSS; socketID: string }) => {\r\n  const classes = useStyles();\r\n  const chatBoxRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [body, setBody] = useState<MessageProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (body: MessageProps) => {\r\n      receivedMessages(body);\r\n    });\r\n    const receivedMessages = (newMessage: MessageProps) => {\r\n      setBody((body) => {\r\n        return [...body, newMessage];\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!message) return;\r\n    const messageObject: MessageProps = {\r\n      messages: [message],\r\n      socketID: socketID,\r\n      userInfo: userInfo,\r\n    };\r\n    setBody((body) => {\r\n      return [...body, messageObject];\r\n    });\r\n    setMessage(\"\");\r\n    socket.emit(\"send-message\", messageObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) chatBoxRef.current.scrollIntoView();\r\n  }, [body]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          height: \"inherit\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{ margin: \"0px 0px 8px 0px\", padding: \"4px\", backgroundColor: \"#252526\", fontWeight: 600 }}\r\n        >\r\n          MESSENGER\r\n        </h1>\r\n        <div style={{ flexGrow: 1, margin: \"1rem\" }}>\r\n          {body.map((element, index) => {\r\n            if (element.socketID === socketID) {\r\n              return (\r\n                <ChatMsg\r\n                  key={index}\r\n                  avatar={element.userInfo.image_link}\r\n                  side={\"right\"}\r\n                  messages={[...element.messages]}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <ChatMsg key={index} messages={[...element.messages]} avatar={element.userInfo.image_link} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div style={{}} ref={chatBoxRef}>\r\n          <form onSubmit={sendMessage} id=\"chat-form\" className={classes.formStyle}>\r\n            <input\r\n              className={classes.inputStyle}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Start Chatting...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n","import React from \"react\";\r\nimport { Avatar, Button, withStyles, Theme, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport { UserInfoSS } from \"types\";\r\n/**\r\n * Invoke Call Peer when the component loads and if the guest user is empty then chill just return\r\n */\r\n\r\ninterface AppProps {\r\n  params: string;\r\n  partnerUser?: UserInfoSS;\r\n  user?: UserInfoSS;\r\n}\r\n\r\nconst LightTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 1)\",\r\n    boxShadow: theme.shadows[2],\r\n    fontSize: \"14px\",\r\n    borderRadius: \"25px\",\r\n  },\r\n}))(Tooltip);\r\n\r\nconst RenderIcons = ({ user }: { user?: UserInfoSS }) => {\r\n  if (!user) return <></>;\r\n  return (\r\n    <>\r\n      <LightTooltip TransitionComponent={Zoom} title={user?.name || \"John Doe\"} placement=\"bottom\">\r\n        <Avatar\r\n          alt={user.name}\r\n          src={user.image_link}\r\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\r\n        ></Avatar>\r\n      </LightTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Icons: React.FC<AppProps> = ({ params, partnerUser, user }) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <RenderIcons user={user} />\r\n      {partnerUser?.roomID ? <RenderIcons user={partnerUser} /> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","import { ColorAssigner } from \"@convergence/color-assigner\";\r\nimport * as MonacoCollabExt from \"@convergencelabs/monaco-collab-ext\";\r\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.min.css\";\r\nclass MonacoConvergenceAdapter {\r\n  constructor(monacoEditor, realtimeString) {\r\n    this._monacoEditor = monacoEditor;\r\n    this._model = realtimeString;\r\n    this._colorAssigner = ColorAssigner.Palettes.DEFAULT;\r\n    this._randomNumber = Math.floor(Math.random() * 4);\r\n  }\r\n\r\n  bind() {\r\n    this._initSharedData();\r\n    this._initSharedCursors();\r\n    this._initSharedSelection();\r\n  }\r\n\r\n  _initSharedData() {\r\n    this._contentManager = new MonacoCollabExt.EditorContentManager({\r\n      editor: this._monacoEditor,\r\n      onInsert: (index, text) => {\r\n        this._model.insert(index, text);\r\n      },\r\n      onReplace: (index, length, text) => {\r\n        this._model.model().startBatch();\r\n        this._model.remove(index, length);\r\n        this._model.insert(index, text);\r\n        this._model.model().completeBatch();\r\n      },\r\n      onDelete: (index, length) => {\r\n        this._model.remove(index, length);\r\n      },\r\n      remoteSourceId: \"convergence\",\r\n    });\r\n\r\n    this._model.events().subscribe((e) => {\r\n      switch (e.name) {\r\n        case \"insert\":\r\n          this._contentManager.insert(e.index, e.value);\r\n          break;\r\n        case \"remove\":\r\n          this._contentManager.delete(e.index, e.value.length);\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  _initSharedCursors() {\r\n    this._remoteCursorManager = new MonacoCollabExt.RemoteCursorManager({\r\n      editor: this._monacoEditor,\r\n      tooltips: true,\r\n      tooltipDuration: 2,\r\n    });\r\n    this._cursorReference = this._model.indexReference(\"cursor\");\r\n\r\n    const references = this._model.references({ key: \"cursor\" });\r\n    references.forEach((reference) => {\r\n      if (!reference.isLocal()) {\r\n        this._addRemoteCursor(reference);\r\n      }\r\n    });\r\n\r\n    this._setLocalCursor();\r\n    this._cursorReference.share();\r\n\r\n    this._monacoEditor.onDidChangeCursorPosition((e) => {\r\n      this._setLocalCursor();\r\n    });\r\n\r\n    this._model.on(\"reference\", (e) => {\r\n      if (e.reference.key() === \"cursor\") {\r\n        this._addRemoteCursor(e.reference);\r\n      }\r\n    });\r\n  }\r\n\r\n  _setLocalCursor() {\r\n    const position = this._monacoEditor.getPosition();\r\n    const offset = this._monacoEditor.getModel().getOffsetAt(position);\r\n    this._cursorReference.set(offset);\r\n  }\r\n\r\n  _addRemoteCursor(reference) {\r\n    const color = this._colorAssigner[this._randomNumber];\r\n    const remoteCursor = this._remoteCursorManager.addCursor(\r\n      reference.sessionId(),\r\n      color,\r\n      reference.user().displayName\r\n    );\r\n\r\n    reference.on(\"cleared\", () => remoteCursor.hide());\r\n    reference.on(\"disposed\", () => remoteCursor.dispose());\r\n    reference.on(\"set\", () => {\r\n      const cursorIndex = reference.value();\r\n      remoteCursor.setOffset(cursorIndex);\r\n    });\r\n  }\r\n\r\n  _initSharedSelection() {\r\n    this._remoteSelectionManager = new MonacoCollabExt.RemoteSelectionManager({\r\n      editor: this._monacoEditor,\r\n    });\r\n\r\n    this._selectionReference = this._model.rangeReference(\"selection\");\r\n    this._setLocalSelection();\r\n    this._selectionReference.share();\r\n\r\n    this._monacoEditor.onDidChangeCursorSelection((e) => {\r\n      this._setLocalSelection();\r\n    });\r\n\r\n    const references = this._model.references({ key: \"selection\" });\r\n    references.forEach((reference) => {\r\n      if (!reference.isLocal()) {\r\n        this._addRemoteSelection(reference);\r\n      }\r\n    });\r\n\r\n    this._model.on(\"reference\", (e) => {\r\n      if (e.reference.key() === \"selection\") {\r\n        this._addRemoteSelection(e.reference);\r\n      }\r\n    });\r\n  }\r\n\r\n  _setLocalSelection() {\r\n    const selection = this._monacoEditor.getSelection();\r\n    if (!selection.isEmpty()) {\r\n      const start = this._monacoEditor.getModel().getOffsetAt(selection.getStartPosition());\r\n      const end = this._monacoEditor.getModel().getOffsetAt(selection.getEndPosition());\r\n      this._selectionReference.set({ start, end });\r\n    } else if (this._selectionReference.isSet()) {\r\n      this._selectionReference.clear();\r\n    }\r\n  }\r\n\r\n  _addRemoteSelection(reference) {\r\n    const color = this._colorAssigner[this._randomNumber];\r\n\r\n    const remoteSelection = this._remoteSelectionManager.addSelection(reference.sessionId(), color);\r\n\r\n    if (reference.isSet()) {\r\n      const selection = reference.value();\r\n      remoteSelection.setOffsets(selection.start, selection.end);\r\n    }\r\n\r\n    reference.on(\"cleared\", () => remoteSelection.hide());\r\n    reference.on(\"disposed\", () => remoteSelection.dispose());\r\n    reference.on(\"set\", () => {\r\n      const selection = reference.value();\r\n      remoteSelection.setOffsets(selection.start, selection.end);\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonacoConvergenceAdapter;\r\n","import React, { useEffect, useContext, useRef } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Convergence, RealTimeModel } from \"@convergence/convergence\";\r\nimport { CONVERGENCE_URL } from \"config.keys\";\r\nimport MonacoConvergenceAdapter from \"./MonacoAdapter\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { GuestNameContextTypes, SettingsContextType, UserContextTypes } from \"types\";\r\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.min.css\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface AppProps {\r\n  code: string;\r\n  defaultCode: string;\r\n  setCode: React.Dispatch<React.SetStateAction<string>>;\r\n  MonacoEditorRef: React.MutableRefObject<any>;\r\n}\r\n\r\nconst MonacoEditor: React.FC<AppProps> = ({ code, defaultCode, setCode, MonacoEditorRef }) => {\r\n  const handleEditorDidMount = (editor: any) => {\r\n    MonacoEditorRef.current = editor;\r\n  };\r\n\r\n  const { id: roomID } = useParams<Record<string, string>>();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { language, fontSize, theme } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n\r\n  // if login then user that else guest name else randome name :)))\r\n  const username = user?.name ? user.name : guestName;\r\n\r\n  useEffect(() => {\r\n    Convergence.connectAnonymously(CONVERGENCE_URL, username)\r\n      .then((domain) => {\r\n        // Now open the model, creating it using the initial data if it does not exist.\r\n        return domain.models().openAutoCreate({\r\n          collection: \"project-caucus`\",\r\n          id: roomID,\r\n          ephemeral: false,\r\n          data: { text: code },\r\n        });\r\n      })\r\n      .then((model) => {\r\n        //@ts-ignore\r\n        const adapter = new MonacoConvergenceAdapter(MonacoEditorRef.current, model.elementAt(\"text\"));\r\n        adapter.bind();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Could not open model \", error);\r\n        enqueueSnackbar(\r\n          \"Real-time collaboration won't work: unable to establish a connection with the server\",\r\n          {\r\n            variant: \"error\",\r\n          }\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // MonacoEditorRef.current?.setValue(\"\");\r\n    MonacoEditorRef.current?.setValue(defaultCode);\r\n    console.log(\"are you setting code here\");\r\n    console.log(defaultCode);\r\n    // if (defaultCode !== code) {\r\n    // }\r\n  }, [defaultCode]);\r\n  //@ts-ignore\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1, overflow: \"hidden\" }}>\r\n      <Editor\r\n        onMount={(editor) => handleEditorDidMount(editor)}\r\n        theme={theme}\r\n        // defaultValue={code}\r\n        language={language}\r\n        onChange={(value) => setCode(value || \"\")}\r\n        options={{ wordWrap: \"on\", fontSize: fontSize, autoIndent: \"advanced\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonacoEditor;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Select, withStyles } from \"@material-ui/core\";\r\nimport { SettingContext } from \"service/SettingsContext\";\r\nimport { SettingsContextType } from \"types\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const {\r\n    language,\r\n    fontSize,\r\n    theme,\r\n    handleFontSizeChange,\r\n    handleLanguageChange,\r\n    handleThemeChange,\r\n  } = useContext(SettingContext) as SettingsContextType;\r\n\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const CssFormControl = withStyles({\r\n    root: {\r\n      // backgroundColor: \"#3e3e42\",\r\n\r\n      width: \"70%\",\r\n      margin: \"1rem\",\r\n      \"& svg\": {\r\n        fill: \"#3f51b5\",\r\n      },\r\n\r\n      \"&:before\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:after\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n\r\n      \"& .MuiSelect-root\": {\r\n        color: \"white\",\r\n      },\r\n      \"&.MuiPaper-root\": {\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n      },\r\n      \"& > ul\": {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n  })(FormControl);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-programming-language\", (inputData: string) => {\r\n      handleLanguageChange(inputData, id, false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem 0rem\" }}>\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel id=\"language-select\" style={{ color: \"white\" }}>\r\n          Language\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"langauge-select\"\r\n          value={language}\r\n          onChange={(e) => handleLanguageChange(e.target.value as string, id, true)}\r\n        >\r\n          <MenuItem value={\"cpp\"}>C++</MenuItem>\r\n          <MenuItem value={\"java\"}>Java</MenuItem>\r\n          <MenuItem value={\"python\"}>Python</MenuItem>\r\n          <MenuItem value={\"javascript\"}>JavaScript</MenuItem>\r\n          <MenuItem value={\"go\"}>Go</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>FontSize</InputLabel>\r\n        <Select value={fontSize} onChange={(e) => handleFontSizeChange(e.target.value as number)}>\r\n          <MenuItem value={10}>10px</MenuItem>\r\n          <MenuItem value={12}>12px</MenuItem>\r\n          <MenuItem value={14}>14px</MenuItem>\r\n          <MenuItem value={16}>16px</MenuItem>\r\n          <MenuItem value={18}>18px</MenuItem>\r\n          <MenuItem value={20}>20px</MenuItem>\r\n          <MenuItem value={22}>22px</MenuItem>\r\n          <MenuItem value={24}>24px</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n\r\n      <CssFormControl variant=\"filled\">\r\n        <InputLabel style={{ color: \"white\" }}>Theme</InputLabel>\r\n        <Select value={theme} onChange={(e) => handleThemeChange(e.target.value as string)}>\r\n          <MenuItem value={\"vs-dark\"}>Dark Theme</MenuItem>\r\n          <MenuItem value={\"hc-black\"}>High Contrast</MenuItem>\r\n          <MenuItem value={\"light\"}>Light Theme</MenuItem>\r\n        </Select>\r\n      </CssFormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","//@ts-nocheck\r\n/* eslint-disable no-use-before-define */\r\n// please dont expect me to re-write css for this mess X-X\r\nimport React from \"react\";\r\nimport { useTheme, fade, makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport Autocomplete, { AutocompleteCloseReason } from \"@material-ui/lab/Autocomplete\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { LabelType } from \"types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"1rem\",\r\n      // width: \"40%\",\r\n      flexGrow: 1,\r\n      fontSize: 13,\r\n    },\r\n    button: {\r\n      fontSize: 13,\r\n      width: \"100%\",\r\n      textAlign: \"left\",\r\n      paddingBottom: 8,\r\n      color: \"#586069\",\r\n      fontWeight: 600,\r\n      \"&:hover,&:focus\": {\r\n        color: \"#0366d6\",\r\n      },\r\n      \"& span\": {\r\n        width: \"100%\",\r\n      },\r\n      \"& svg\": {\r\n        width: 16,\r\n        height: 16,\r\n      },\r\n    },\r\n    tag: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 3,\r\n      height: 20,\r\n      padding: \".15em 4px\",\r\n      fontWeight: 600,\r\n      lineHeight: \"15px\",\r\n      borderRadius: 2,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    },\r\n    popper: {\r\n      border: \"1px solid rgba(27,31,35,.15)\",\r\n      boxShadow: \"0 3px 12px rgba(27,31,35,.15)\",\r\n      borderRadius: 3,\r\n      width: 300,\r\n      zIndex: 5,\r\n      fontSize: 13,\r\n      color: \"#d8d5d0\",\r\n      // 3e3e42\r\n      backgroundColor: \"#272a2b\",\r\n    },\r\n    header: {\r\n      borderBottom: \"1px solid #585a5c\",\r\n      padding: \"8px 10px\",\r\n      fontWeight: 600,\r\n    },\r\n    inputBase: {\r\n      padding: 10,\r\n      width: \"100%\",\r\n      color: \"white\",\r\n      borderBottom: \"1px solid #d8d5d0\",\r\n      \"& input\": {\r\n        borderRadius: 4,\r\n        backgroundColor: \"#1e1f1f\",\r\n        padding: 8,\r\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n        border: \"1px solid #585a5c\",\r\n        fontSize: 14,\r\n        \"&:focus\": {\r\n          boxShadow: `${fade(\"#0055bb\", 0.25)} 0 0 0 0.2rem`,\r\n          borderColor: \"#0055bb\",\r\n        },\r\n      },\r\n    },\r\n    paper: {\r\n      boxShadow: \"none\",\r\n      margin: 0,\r\n      color: \"#d8d5d0\",\r\n      background: \"#191c1d\",\r\n      fontSize: 13,\r\n      \"& .MuiAutocomplete-noOptions\": {\r\n        color: \"#edeceb !important\",\r\n      },\r\n    },\r\n    option: {\r\n      minHeight: \"auto\",\r\n      alignItems: \"flex-start\",\r\n      padding: 8,\r\n      '&[aria-selected=\"true\"]': {\r\n        backgroundColor: \"#424242\",\r\n      },\r\n      '&[data-focus=\"true\"]': {\r\n        backgroundColor: \"#37474f\",\r\n      },\r\n    },\r\n    popperDisablePortal: {\r\n      position: \"relative\",\r\n    },\r\n    iconSelected: {\r\n      width: 17,\r\n      height: 17,\r\n      marginRight: 5,\r\n      marginLeft: -2,\r\n    },\r\n    color: {\r\n      width: 14,\r\n      height: 14,\r\n      flexShrink: 0,\r\n      borderRadius: 3,\r\n      marginRight: 8,\r\n      marginTop: 2,\r\n    },\r\n    text: {\r\n      flexGrow: 1,\r\n    },\r\n    close: {\r\n      opacity: 0.6,\r\n      width: 18,\r\n      height: 18,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AutoCompleteLabel({ value, setValue, labels, type }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  // default values we are adding 2 okays\r\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setPendingValue(value);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\r\n    if (reason === \"toggleInput\") {\r\n      return;\r\n    }\r\n    setValue(pendingValue);\r\n    if (anchorEl) {\r\n      anchorEl.focus();\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"autocomplete-label\" : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <ButtonBase disableRipple className={classes.button} aria-describedby={id} onClick={handleClick}>\r\n          <span>{type}</span>\r\n          <SettingsIcon />\r\n        </ButtonBase>\r\n        {value.map((label) => (\r\n          <div\r\n            key={label.name}\r\n            className={classes.tag}\r\n            style={{\r\n              backgroundColor: label.color,\r\n              color: theme.palette.getContrastText(label.color),\r\n            }}\r\n          >\r\n            {label.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\" className={classes.popper}>\r\n        <div className={classes.header}>Selects everything if no options is selected</div>\r\n        <Autocomplete\r\n          open\r\n          onClose={handleClose}\r\n          multiple\r\n          classes={{\r\n            paper: classes.paper,\r\n            option: classes.option,\r\n            popperDisablePortal: classes.popperDisablePortal,\r\n          }}\r\n          value={pendingValue}\r\n          onChange={(event, newValue) => {\r\n            setPendingValue(newValue);\r\n          }}\r\n          disableCloseOnSelect\r\n          disablePortal\r\n          renderTags={() => null}\r\n          noOptionsText=\"No Match Found\"\r\n          renderOption={(option, { selected }) => (\r\n            <React.Fragment>\r\n              <DoneIcon\r\n                className={classes.iconSelected}\r\n                style={{ visibility: selected ? \"visible\" : \"hidden\" }}\r\n              />\r\n              <span className={classes.color} style={{ backgroundColor: option.color }} />\r\n              <div className={classes.text}>\r\n                {option.name}\r\n                <br />\r\n                {option.description}\r\n              </div>\r\n              <CloseIcon className={classes.close} style={{ visibility: selected ? \"visible\" : \"hidden\" }} />\r\n            </React.Fragment>\r\n          )}\r\n          options={[...labels].sort((a, b) => {\r\n            // Display the selected labels first.\r\n            let ai = value.indexOf(a);\r\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\r\n            let bi = value.indexOf(b);\r\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\r\n            return ai - bi;\r\n          })}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <InputBase\r\n              ref={params.InputProps.ref}\r\n              inputProps={params.inputProps}\r\n              autoFocus\r\n              className={classes.inputBase}\r\n            />\r\n          )}\r\n        />\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { createRef, useEffect, useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport styles from \"./ProblemList.module.css\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { QuestionListResponse, TabsContextTypes } from \"types\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst getColor = (diff: string) => {\r\n  if (diff === \"easy\") return \"#1faa00\";\r\n  else if (diff === \"medium\") return \"#fbc02d\";\r\n  else return \"#dd2c00\";\r\n};\r\n\r\nconst CssPagination = withStyles({\r\n  root: {\r\n    // backgroundColor: \"#3e3e42\",\r\n\r\n    color: \"white\",\r\n    \"& svg\": {\r\n      fill: \"white\",\r\n    },\r\n    \"& button\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n})(Pagination);\r\n\r\nconst PaginationComponent = ({ rows }: { rows: QuestionListResponse[] }) => {\r\n  const { filterResponseData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = React.useState(1);\r\n  const navRef = createRef<HTMLElement>();\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    const height = Math.floor(navRef.current?.clientHeight / 38);\r\n    setRowsPerPage(height);\r\n  }, []);\r\n\r\n  const getQuestion = (question_id: number) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/get-problem`,\r\n      data: { question_id: question_id },\r\n      responseType: \"json\",\r\n    }).then((response) => {\r\n      filterResponseData(response.data, id);\r\n    });\r\n  };\r\n\r\n  const count = Math.floor(\r\n    rows.length % rowsPerPage === 0 ? rows.length / rowsPerPage : rows.length / rowsPerPage + 1\r\n  );\r\n  return (\r\n    // <StylesProvider injectFirst>\r\n    <>\r\n      <Grid item className={styles[\"pagination-container\"]}>\r\n        <List component=\"nav\" aria-label=\"contacts\" className={styles[\"list-container\"]} ref={navRef}>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((el: QuestionListResponse, index) => {\r\n            return (\r\n              <ListItem\r\n                key={index}\r\n                button\r\n                className={styles[\"list-item\"]}\r\n                onClick={() => getQuestion(el.question_id)}\r\n              >\r\n                <div style={{ flexGrow: 1 }}>{`${el.question_id}. ${el.question_title}`}</div>\r\n                <div style={{ color: getColor(el.difficulty), paddingLeft: \"8px\", fontWeight: \"bold\" }}>\r\n                  {el.difficulty}\r\n                </div>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </Grid>\r\n      <Grid item className={styles[\"pagination-group\"]}>\r\n        <CssPagination\r\n          shape=\"rounded\"\r\n          count={count}\r\n          page={page}\r\n          onChange={(event, val) => setPage(val)}\r\n          color=\"primary\"\r\n          className={styles[\"pagination-element\"]}\r\n        />\r\n      </Grid>\r\n    </>\r\n    // </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport AutoCompleteLabel from \"./Autocomplete\";\r\nimport { Button, ButtonGroup, Divider, IconButton, TextField, withStyles } from \"@material-ui/core\";\r\nimport ArrowForwardRoundedIcon from \"@material-ui/icons/ArrowForwardRounded\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { SERVER_URL } from \"config.keys\";\r\nimport { allCompanies, allDifficulties, allTags } from \"./data\";\r\nimport ListPagination from \"./ListPagination\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styles from \"./ProblemList.module.css\";\r\nimport { LabelType, QuestionListResponse, ScrappedDataType, TabsContextTypes } from \"types\";\r\nimport { tagsData, companiesData, difficultyData } from \"./data\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport Url from \"url-parse\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface AppProps {\r\n  companies: LabelType[];\r\n  tags: LabelType[];\r\n  difficulty: LabelType[];\r\n  url: string;\r\n  setCompanies: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setTags: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setDifficulty: React.Dispatch<React.SetStateAction<LabelType[]>>;\r\n  setUrl: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    // #115293\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: \"12px\",\r\n      padding: \"0px\",\r\n      outline: \"none\",\r\n      color: \"#edf2fb\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#0055bb\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#0055bb\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#0055bb\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid #0055bb \",\r\n        // borderColor: \"#0055bb\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst ProblemList: React.FC<AppProps> = ({\r\n  companies,\r\n  difficulty,\r\n  tags,\r\n  url,\r\n  setCompanies,\r\n  setDifficulty,\r\n  setTags,\r\n  setUrl,\r\n}) => {\r\n  const [response, setResponse] = useState<QuestionListResponse[]>([]);\r\n  const [errorText, setErrorText] = useState({ error: false, comment: \"\" });\r\n  const { id: roomID } = useParams<Record<string, string>>();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(`${SERVER_URL}/api/fetch-problems`, prepareData())\r\n      .then((res: AxiosResponse<QuestionListResponse[]>) => setResponse(res.data));\r\n  }, []);\r\n\r\n  const { filterResponseData, handleScrappedData } = useContext(TabsContext) as TabsContextTypes;\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const NextButton = () => {\r\n    const getQuestionData = async () => {\r\n      const { hostname } = new Url(url);\r\n      if (hostname !== \"codeforces.com\" && hostname !== \"atcoder.jp\") {\r\n        setErrorText({\r\n          error: true,\r\n          comment: \"Domain should be either be codeforces or atcoder\",\r\n        });\r\n      } else {\r\n        const { data }: AxiosResponse<{ error: boolean; htmlString: string }> = await axios({\r\n          method: \"POST\",\r\n          url: `${SERVER_URL}/api/fetch-contest-problem`,\r\n          responseType: \"json\",\r\n          data: {\r\n            url: url,\r\n            hostname: hostname,\r\n          },\r\n        });\r\n        const { error, htmlString } = data;\r\n\r\n        if (error) {\r\n          setErrorText({\r\n            error: true,\r\n            comment: \"Unable To fetch question\",\r\n          });\r\n        } else {\r\n          handleScrappedData(\r\n            {\r\n              htmlString,\r\n              hostname,\r\n            },\r\n            roomID,\r\n            true\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Button\r\n        className={styles[\"adornment-button\"]}\r\n        style={{ color: \"#0055bb\" }}\r\n        onClick={async () => {\r\n          await getQuestionData();\r\n        }}\r\n      >\r\n        <ArrowForwardRoundedIcon />\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const prepareData = () => {\r\n    const c = companies.map((el) => el.name);\r\n    const d = difficulty.map((el) => el.name);\r\n    const t = tags.map((el) => el.name);\r\n    return {\r\n      companies: c.length ? c : allCompanies,\r\n      difficulty: d.length ? d : allDifficulties,\r\n      tags: t.length ? t : allTags,\r\n    };\r\n  };\r\n\r\n  const fetchProblems = async () => {\r\n    const response: AxiosResponse<QuestionListResponse[]> = await axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/fetch-problems`,\r\n      data: prepareData(),\r\n      responseType: \"json\",\r\n    });\r\n    setResponse(response.data);\r\n  };\r\n  const getRandomQuestion = () => {\r\n    const randomID = Math.floor(Math.random() * 169);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${SERVER_URL}/api/get-problem`,\r\n      data: { question_id: randomID },\r\n      responseType: \"json\",\r\n    }).then((response) => filterResponseData(response.data, id));\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container className={styles.root}>\r\n        <Grid item className={styles[\"request-field\"]}>\r\n          <label>Enter Codeforces Or Atcoder Question URL:</label>\r\n          <CssTextField\r\n            onChange={(e) => {\r\n              setUrl(e.target.value as string);\r\n            }}\r\n            value={url}\r\n            error={errorText.error}\r\n            helperText={errorText.comment}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: <NextButton />,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item className={styles.autocomplete}>\r\n          <AutoCompleteLabel\r\n            value={companies}\r\n            setValue={setCompanies}\r\n            labels={companiesData}\r\n            type=\"Companies\"\r\n          />\r\n          <AutoCompleteLabel value={tags} setValue={setTags} labels={tagsData} type=\"Tags\" />\r\n          <AutoCompleteLabel\r\n            value={difficulty}\r\n            setValue={setDifficulty}\r\n            labels={difficultyData}\r\n            type=\"Difficulty\"\r\n          />\r\n        </Grid>\r\n        <Grid item className={styles[\"btn-group\"]}>\r\n          <ButtonGroup color=\"inherit\">\r\n            <Button onClick={getRandomQuestion}>Random Problem</Button>\r\n            <Button\r\n              onClick={async () => {\r\n                await fetchProblems();\r\n              }}\r\n            >\r\n              Filter Problems\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Divider className={styles.divider} />\r\n        <Grid item container direction=\"column\" className={styles.pagination}>\r\n          <ListPagination rows={response} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProblemList;\r\n","import React from \"react\";\nimport parse from \"html-react-parser\";\nimport \"./ProblemPage.css\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Box, Divider, Grid } from \"@material-ui/core\";\nimport { QuestionDataSS } from \"types\";\n\nconst LeetCode = ({ questionData }: { questionData: QuestionDataSS }) => {\n  const { question_data, companies, tags } = questionData;\n\n  return (\n    <div>\n      <Box className=\"leetcode\">\n        <h1>{question_data.question_title}</h1>\n        {parse(question_data.question)}\n        <Divider />\n        <Grid container>\n          <Grid item className=\"container-item\">\n            <div className={\"chips\"}>\n              {tags.map((tag, index) => (\n                <Chip label={tag} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={\"container-item\"}>\n            <div className=\"chips\">\n              {companies.map((company, index) => (\n                <Chip label={company} key={index} color=\"primary\" />\n              ))}\n            </div>\n          </Grid>\n          <Grid item className={\"container-item\"}>\n            <a href={`${question_data.problem_url}/discuss`} target=\"_blank\" rel=\" \">\n              <h4>Solution</h4>\n            </a>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default LeetCode;\n","//@ts-nocheck\nimport React, { useRef, useState, createRef } from \"react\";\nimport parse from \"html-react-parser\";\nimport \"./ProblemPage.css\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport { ScrappedDataType } from \"types\";\nimport renderMathInElement from \"katex/dist/contrib/auto-render\";\nimport \"katex/dist/katex.min.css\";\n//@ts-ignore\nimport { InlineMath, BlockMath } from \"react-katex\";\n\nconst LeetCode = ({ scrappedData }: { scrappedData: ScrappedDataType }) => {\n  const { hostname, htmlString } = scrappedData;\n  const MathRef = createRef<HTMLElement>();\n\n  React.useEffect(() => {\n    if (MathRef) {\n      renderMathInElement(MathRef.current!, {\n        delimiters: [\n          { left: \"$$$\", right: \"$$$\", display: true },\n          { left: \"\\\\[\", right: \"\\\\]\", display: true },\n          { left: \"%%\", right: \"%%\", display: true },\n          { left: \"\\\\(\", right: \"\\\\)\", display: false },\n        ],\n      });\n    }\n  }, [MathRef]);\n\n  return (\n    <div>\n      {hostname === \"codeforces.com\" ? (\n        <div className={\"codeforces\"} ref={MathRef}>\n          {parse(htmlString)}\n        </div>\n      ) : (\n        <div className={\"atcoder\"} ref={MathRef}>\n          {parse(htmlString)}\n        </div>\n      )}\n      <Divider />\n    </div>\n  );\n};\nexport default LeetCode;\n<div></div>;\n","import React, { useContext } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Box, Divider, Grid } from \"@material-ui/core\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { TabsContextTypes } from \"types\";\r\nimport LeetCode from \"./LeetCode\";\r\nimport CodeForces from \"./CodeForces\";\r\n\r\nconst ProblemPage = () => {\r\n  const { questionData, showScrapped, scrappedData } = useContext(TabsContext) as TabsContextTypes;\r\n\r\n  return (\r\n    <div style={{ margin: \"1rem\" }}>\r\n      {showScrapped ? <CodeForces scrappedData={scrappedData} /> : <LeetCode questionData={questionData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProblemPage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"./ReactTabs.css\";\r\nimport Settings from \"./SettingsPage\";\r\nimport ProblemList from \"./ProblemList/ProblemList\";\r\nimport { TabsContext } from \"service/TabsContext\";\r\nimport { LabelType, TabsContextTypes, QuestionDataSS, ScrappedDataType } from \"types\";\r\nimport ProblemPage from \"./ProblemPage/ProblemPage\";\r\nimport { tagsData, companiesData } from \"./ProblemList/data\";\r\nimport { socket } from \"service/socket\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function TabsComponent() {\r\n  const { id: roomID } = useParams<Record<string, string>>();\r\n  const { tabIndex, onTabsChange, onQuestionDataChange, handleScrappedData } = useContext(\r\n    TabsContext\r\n  ) as TabsContextTypes;\r\n  const [companies, setCompanies] = useState<LabelType[]>([companiesData[0]]);\r\n  const [tags, setTags] = useState<LabelType[]>([tagsData[0]]);\r\n  const [difficulty, setDifficulty] = useState<LabelType[]>([]);\r\n  const [url, setUrl] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.on(\"emit-selected-question\", (value: QuestionDataSS) => {\r\n      onQuestionDataChange(value);\r\n    });\r\n\r\n    socket.on(\"emit-codeforces\", (value: ScrappedDataType) => {\r\n      handleScrappedData(value, roomID, false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => onTabsChange(index)} className=\"tabs_root\">\r\n      <TabList style={{ background: \"#252526\" }}>\r\n        <Tab>Problem</Tab>\r\n        <Tab>Problem List</Tab>\r\n        <Tab>Settings</Tab>\r\n      </TabList>\r\n      <TabPanel>\r\n        <ProblemPage />\r\n      </TabPanel>\r\n      <TabPanel style={{ flexGrow: 1 }}>\r\n        <ProblemList\r\n          companies={companies}\r\n          tags={tags}\r\n          difficulty={difficulty}\r\n          url={url}\r\n          setCompanies={setCompanies}\r\n          setTags={setTags}\r\n          setDifficulty={setDifficulty}\r\n          setUrl={setUrl}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <Settings />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n","import React, { useState, createRef, useRef, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InputOutputFile from \"component/InputOutputFile/InputOutputFile\";\r\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\r\nimport \"react-reflex/styles.css\";\r\nimport style from \"./Room.module.css\";\r\nimport { socket } from \"service/socket\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ChatApp from \"component/TextChat\";\r\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MonacoEditor from \"component/Editor/MonacoEditor\";\r\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.min.css\";\r\nimport clsx from \"clsx\";\r\nimport { GuestNameContext } from \"service/GuestNameContext\";\r\nimport { UserContext } from \"service/UserContext\";\r\nimport { UserContextTypes, GuestNameContextTypes, UserInfoSS } from \"types\";\r\nimport TabsPanel from \"component/QuestionsPane/Tabs\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Dashboard = () => {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const { user } = useContext(UserContext) as UserContextTypes;\r\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\r\n  const [code, setCode] = useState<string>(\"\");\r\n  const [defaultCode, setDefaultCode] = useState<string>(\"\");\r\n  const MonacoEditorRef = useRef<any>();\r\n  const TextAreaRef = createRef<HTMLDivElement>();\r\n  const [rows, setRows] = useState(5);\r\n  const [sid, setSid] = useState(\"\");\r\n  const [goBack, setGoBack] = useState(false);\r\n  const [partnerUser, setPartnerUser] = useState<UserInfoSS>();\r\n  const { id } = useParams<Record<string, string>>();\r\n\r\n  const prepareData = (): UserInfoSS => {\r\n    return {\r\n      name: user?.name ? user.name : guestName,\r\n      image_link: user?.image_link ? user.image_link : \"\",\r\n      roomID: id,\r\n    };\r\n  };\r\n\r\n  const action = (key: any) => (\r\n    <>\r\n      <Button\r\n        style={{ color: \"white\" }}\r\n        onClick={() => {\r\n          localStorage.setItem(\"shouldShow\", JSON.stringify(false));\r\n          closeSnackbar(key);\r\n        }}\r\n      >\r\n        Don't Show Again\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const displayNotification = (data: UserInfoSS, enter: boolean) => {\r\n    const text = enter ? \"joined the room\" : \"left the room\";\r\n    const variantStyle = enter ? \"success\" : \"error\";\r\n    enqueueSnackbar(`${data.name} ${text}`, {\r\n      preventDuplicate: true,\r\n      variant: variantStyle,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const retrivedKeyString = localStorage.getItem(\"shouldShow\");\r\n    const retrivedKey = retrivedKeyString ? JSON.parse(retrivedKeyString) : true;\r\n\r\n    if (retrivedKey) {\r\n      enqueueSnackbar(\"Open the same link in another tab to see realtime collabotation\", {\r\n        action,\r\n      });\r\n    }\r\n\r\n    socket.emit(\"join-room\", prepareData());\r\n\r\n    socket.on(\"store-sid\", (id: string) => setSid(id));\r\n    socket.on(\"new-user-joined\", (data: UserInfoSS) => {\r\n      setPartnerUser(data);\r\n      displayNotification(data, true);\r\n      const userCode = MonacoEditorRef.current?.getValue();\r\n      socket.emit(\"send-code-to-new-user\", id, userCode);\r\n    });\r\n\r\n    socket.on(\"room-full\", () => {\r\n      setGoBack(true);\r\n    });\r\n\r\n    socket.on(\"user-left\", (data: UserInfoSS) => {\r\n      displayNotification(data, false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"set-code\", (partnerCode: string) => {\r\n      setCode(partnerCode);\r\n      setDefaultCode(partnerCode);\r\n    });\r\n  }, [socket, code]);\r\n\r\n  const resetEditorLayout = () => {\r\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\r\n    const adjustedRows = height > 340 ? height / 27 : height / 39;\r\n    setRows(Math.floor(adjustedRows));\r\n    MonacoEditorRef.current.layout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.root}>\r\n        <ReflexContainer orientation=\"horizontal\">\r\n          {/* <ReflexElement className={style.header} flex={0.08}>\r\n            Caucus\r\n          </ReflexElement> */}\r\n          <ReflexElement style={{ paddingTop: \"1rem\" }}>\r\n            <ReflexContainer orientation=\"vertical\">\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement className={style[\"pane-color\"]}>\r\n                    <TabsPanel />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* End of 1st content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement flex={0.45}>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  <ReflexElement style={{ display: \"flex\" }}>\r\n                    <MonacoEditor\r\n                      code={code}\r\n                      defaultCode={defaultCode}\r\n                      setCode={setCode}\r\n                      MonacoEditorRef={MonacoEditorRef}\r\n                    />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter\r\n                    className={clsx(style.splitter, style[\"splitter-horizontal\"])}\r\n                    onStopResize={() => resetEditorLayout()}\r\n                  />\r\n                  <ReflexElement flex={0.3}>\r\n                    <InputOutputFile\r\n                      rows={rows}\r\n                      TextAreaRef={TextAreaRef}\r\n                      MonacoEditorRef={MonacoEditorRef}\r\n                    />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n              {/* 3rd content */}\r\n              <ReflexSplitter\r\n                className={clsx(style.splitter, style[\"splitter-verticle\"])}\r\n                onStopResize={() => resetEditorLayout()}\r\n              />\r\n              <ReflexElement>\r\n                <ReflexContainer orientation=\"horizontal\">\r\n                  {/* 0.12 */}\r\n                  <ReflexElement className={style[\"pane-color\"]} flex={0.12}>\r\n                    <VoiceChat params={id} user={prepareData()} partnerUser={partnerUser} />\r\n                  </ReflexElement>\r\n                  <ReflexSplitter className={clsx(style.splitter, style[\"splitter-horizontal\"])} />\r\n                  <ReflexElement className={style[\"chat-app\"]}>\r\n                    {/* Chat App Component */}\r\n                    <ChatApp userInfo={prepareData()} socketID={sid} />\r\n                  </ReflexElement>\r\n                </ReflexContainer>\r\n              </ReflexElement>\r\n            </ReflexContainer>\r\n          </ReflexElement>\r\n          <ReflexElement className={style.footer} flex={0.028}>\r\n            Made with <span>&#9829;</span> by Rishabh Malhotra{\"  \"}•{\"  \"}\r\n            <a href=\"https://github.com/Rishabh-malhotraa/caucus\" target=\"__blank\">\r\n              Github\r\n            </a>\r\n          </ReflexElement>\r\n        </ReflexContainer>\r\n      </div>\r\n      {goBack ? <Redirect to={{ pathname: \"/home\", state: { showNotification: true } }} /> : <></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProblemList_root__3POtR\",\"request-field\":\"ProblemList_request-field__35lUC\",\"adornment-button\":\"ProblemList_adornment-button__1EdcN\",\"autocomplete\":\"ProblemList_autocomplete__1jd2T\",\"btn-group\":\"ProblemList_btn-group__2T5pa\",\"pagination\":\"ProblemList_pagination__1IOvh\",\"divider\":\"ProblemList_divider__HiiWX\",\"pagination-container\":\"ProblemList_pagination-container__c8pdh\",\"list-container\":\"ProblemList_list-container__18fyU\",\"list-item\":\"ProblemList_list-item__256qe\",\"pagination-group\":\"ProblemList_pagination-group__23rof\",\"pagination-element\":\"ProblemList_pagination-element__3XYM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputOutputFile_root__1BvQ2\",\"toolbar\":\"InputOutputFile_toolbar__2HVN7\",\"btn-box\":\"InputOutputFile_btn-box__3ddKa\",\"text-area\":\"InputOutputFile_text-area__1AI8B\",\"loader\":\"InputOutputFile_loader__29qRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Room_root__3yaPZ\",\"header\":\"Room_header__2lEwY\",\"pane-color\":\"Room_pane-color__2RQzv\",\"monaco-remote-cursor\":\"Room_monaco-remote-cursor__2vTqP\",\"middle-pane-content\":\"Room_middle-pane-content__sp-uC\",\"chat-app\":\"Room_chat-app__26ZYx\",\"splitter\":\"Room_splitter__36TeP\",\"splitter-verticle\":\"Room_splitter-verticle__1E_Cc\",\"splitter-horizontal\":\"Room_splitter-horizontal__1WOb9\",\"footer\":\"Room_footer__1upVp\"};"],"sourceRoot":""}